%!PS-Adobe-2.0
%%Creator: dvips 5.491 Copyright 1986, 1992 Radical Eye Software
%%Title: /Users/mccallum/Research/Papers/utile-distinctions/utile.dvi
%%Pages: 16 -1
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -D 300 -r -Z0 -o /Net/ngoma/Users/mccallum/print.ps /Users/mccallum/Research/Papers/utile-distinctions/utile.dvi
%%BeginProcSet: tex.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N /X{S N}
B /TR{translate}N /isls false N /vsize 11 72 mul N /@rigin{isls{[0 -1 1 0 0 0]
concat}if 72 Resolution div 72 VResolution div neg scale isls{Resolution hsize
-72 div mul 0 TR}if Resolution VResolution vsize -72 div 1 add mul TR matrix
currentmatrix dup dup 4 get round 4 exch put dup dup 5 get round 5 exch put
setmatrix}N /@landscape{/isls true N}B /@manualfeed{statusdict /manualfeed
true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N
/IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin /FontType 3 N /FontMatrix
fntrx N /FontBBox FBB N string /base X array /BitMaps X /BuildChar{
CharBuilder}N /Encoding IE N end dup{/foo setfont}2 array copy cvx N load 0 nn
put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0
0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data
dup length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128
ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127
sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp 0 N
/cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2 index get
S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff ch-height
sub ch-xoff ch-width add ch-yoff setcachedevice ch-width ch-height true[1 0 0
-1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}imagemask restore}B /D{/cc X dup
type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1
ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}
B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/FV}{/RV}ifelse load def pop}N /eop{SI restore showpage userdict
/eop-hook known{eop-hook}if}N /@start{userdict /start-hook known{start-hook}
if /VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255{IE
S 1 string dup 0 3 index put cvn put}for 65781.76 div /vsize X 65781.76 div
/hsize X}N /p{show}N /RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley
0 N /v{/ruley X /rulex X V}B /V{}B /RV statusdict begin /product where{pop
product dup length 7 ge{0 7 getinterval dup(Display)eq exch 0 4 getinterval
(NeXT)eq or}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale
rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex
ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /FV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{-3 M}
B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B /w{0
rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{p 2 w}
B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save N}B
/eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen false N
/rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B /@scaleunit 100 N
/@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit div /vsc X}B /@hsize{/hs
X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{/CLIP 2 N}B /@hoffset{/ho X}B
/@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X /rwiSeen true N}B /@rhi
{10 div /rhi X /rhiSeen true N}B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B
/@ury{/ury X}B /magscale true def end /@MacSetUp{userdict /md known{userdict
/md get type /dicttype eq{userdict begin md length 10 add md maxlength ge{/md
md dup length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{
}N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath clippath
mark{transform{itransform moveto}}{transform{itransform lineto}}{6 -2 roll
transform 6 -2 roll transform 6 -2 roll transform{itransform 6 2 roll
itransform 6 2 roll itransform 6 2 roll curveto}}{{closepath}}pathforall
newpath counttomark array astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2
F/|______Courier fnt invertflag{PaintBlack}if}N /txpose{pxs pys scale ppr
aload pop por{noflips{pop S neg S TR pop 1 -1 scale}if xflip yflip and{pop S
neg S TR 180 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0
get neg sub neg TR}if xflip yflip not and{pop S neg S TR pop 180 rotate ppr 3
get ppr 1 get neg sub neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get
neg TR}if}{noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop
pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get
neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr 0
get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3
1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp{pop pop
showpage pm restore}N end}if}if}N /normalscale{Resolution 72 div VResolution
72 div neg scale magscale{DVImag dup scale}if 0 setgray}N /psfts{S 65781.76
div N}N /startTexFig{/psf$SavedState save N userdict maxlength dict begin
/magscale false def normalscale currentpoint TR /psf$ury psfts /psf$urx psfts
/psf$lly psfts /psf$llx psfts /psf$y psfts /psf$x psfts currentpoint /psf$cy X
/psf$cx X /psf$sx psf$x psf$urx psf$llx sub div N /psf$sy psf$y psf$ury
psf$lly sub div N psf$sx psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy
psf$sy div psf$ury sub TR /showpage{}N /erasepage{}N /copypage{}N /p 3 def
@MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath
clip newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial{CLIP
1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath
clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx sub div rhiSeen{
rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly
sub div dup scale llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly
moveto urx lly lineto urx ury lineto llx ury lineto closepath clip}if
/showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{count ocount
sub{pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B /li{lineto}B /rl{
rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1 setlinecap
newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY moveto}N
/ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 @start /Fa 13
120 df<000070000000007000000000F800000000F800000000F800000001FC00000001FC0000
0003FE00000003FE00000003FE000000067F000000067F0000000C7F8000000C3F8000000C3F80
0000181FC00000181FC00000301FE00000300FE00000700FF000006007F000006007F00000C007
F80000FFFFF80001FFFFFC00018001FC00018001FC00030001FE00030000FE00070000FF000600
007F000600007F00FFE007FFF8FFE007FFF825227EA12A>65 D<00FF8007FFE00F83F01F03F03E
03F07E03F07C01E07C0000FC0000FC0000FC0000FC0000FC0000FC00007C00007E00007E00003E
00181F00300FC06007FFC000FF0015167E9519>99 D<0001FE000001FE0000003E0000003E0000
003E0000003E0000003E0000003E0000003E0000003E0000003E0000003E0000003E0001FC3E00
07FFBE000F81FE001F007E003E003E007E003E007C003E00FC003E00FC003E00FC003E00FC003E
00FC003E00FC003E00FC003E00FC003E007C003E007C003E003E007E001F00FE000F83BE0007FF
3FC001FC3FC01A237EA21F>I<00FE0007FF800F87C01E01E03E01F07C00F07C00F8FC00F8FC00
F8FFFFF8FFFFF8FC0000FC0000FC00007C00007C00007E00003E00181F00300FC07003FFC000FF
0015167E951A>I<01FE0F0007FFBF800F87C7801F03E7801E01E0003E01F0003E01F0003E01F0
003E01F0003E01F0001E01E0001F03E0000F87C0000FFF800009FE000018000000180000001C00
00001FFFE0000FFFF80007FFFE001FFFFF003C003F0078000F80F0000780F0000780F0000780F0
00078078000F003C001E001F007C000FFFF80001FFC00019217F951C>103
D<FF000000FF0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F00
00001F0000001F0000001F0000001F00FF801F00FF801F0038001F0060001F01C0001F0380001F
0700001F0E00001F1C00001F7E00001FFF00001FCF00001F0F80001F07C0001F03E0001F01E000
1F01F0001F00F8001F007C001F003C00FFE0FFC0FFE0FFC01A237EA21E>107
D<FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE00B237EA210>I<
FF07F007F000FF1FFC1FFC001F303E303E001F403E403E001F801F801F001F801F801F001F001F
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F00FFE0FFE0FFE0FFE0FFE0FFE02B167E9530>I<FF07E000FF1FF8001F307C001F403C001F
803E001F803E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E00
1F003E001F003E001F003E001F003E001F003E001F003E00FFE1FFC0FFE1FFC01A167E951F>I<
00FE0007FFC00F83E01E00F03E00F87C007C7C007C7C007CFC007EFC007EFC007EFC007EFC007E
FC007EFC007E7C007C7C007C3E00F81F01F00F83E007FFC000FE0017167E951C>I<0FF3003FFF
00781F00600700E00300E00300F00300FC00007FE0007FF8003FFE000FFF0001FF00000F80C007
80C00380E00380E00380F00700FC0E00EFFC00C7F00011167E9516>115
D<0180000180000180000180000380000380000780000780000F80003F8000FFFF00FFFF000F80
000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F81800F81800F81
800F81800F81800F830007C30003FE0000F80011207F9F16>I<FFE3FF07F8FFE3FF07F81F0078
00C01F807C01C00F807C01800F807C018007C07E030007C0DE030007C0DE070003E1DF060003E1
8F060001F18F8C0001F3078C0001F3078C0000FF07D80000FE03D80000FE03F800007C01F00000
7C01F000003C01E000003800E000003800E00025167F9528>119 D E /Fb
22 118 df<00600000F00000F00000F00000F00000F00000F00000F0007FFFC0FFFFE0FFFFE07F
FFC000F00000F00000F00000F00000F00000F00000F00000600013147E9718>43
D<3078FCFC78300606778518>46 D<7FFFC0FFFFE0FFFFE0FFFFE0000000000000000000000000
FFFFE0FFFFE0FFFFE07FFFC0130C7E9318>61 D<00700000F80000F80000D80000D80001DC0001
DC0001DC00018C00038E00038E00038E00038E000707000707000707000707000707000FFF800F
FF800FFF800E03801C01C01C01C01C01C07F07F0FF07F87F07F0151C7F9B18>65
D<FFFFF0FFFFF0FFFFF01C00701C00701C00701C00701C00001C00001C0E001C0E001C0E001FFE
001FFE001FFE001C0E001C0E001C0E001C00001C00001C00381C00381C00381C00381C0038FFFF
F8FFFFF8FFFFF8151C7F9B18>69 D<7E07F0FF0FF87F07F01D81C01D81C01D81C01DC1C01CC1C0
1CC1C01CE1C01CE1C01CE1C01C61C01C71C01C71C01C31C01C39C01C39C01C39C01C19C01C19C0
1C1DC01C0DC01C0DC01C0DC07F07C0FF87C07F03C0151C7F9B18>78 D<FFFE00FFFF80FFFFC01C
03C01C01E01C00E01C00701C00701C00701C00701C00701C00E01C01E01C03C01FFFC01FFF801F
FE001C00001C00001C00001C00001C00001C00001C00001C0000FF8000FF8000FF8000141C7F9B
18>80 D<03F1C01FFFC03FFFC07C0FC07003C0E001C0E001C0E001C0E000007000007800003F00
001FF00007FE0000FF00000F800003C00001C00000E00000E06000E0E000E0E001E0F001C0F807
80FFFF80FFFE00E7F800131C7E9B18>83 D<FE03F8FE03F8FE03F87000707000707000703800E0
3800E03800E03800E03800E038F8E039FCE039DCE039DCE019DCC019DCC019DCC0198CC0198CC0
1D8DC01D8DC01D8DC01D05C00D05800F07800F07800E0380151C7F9B18>87
D<0FF0001FFC003FFE003C0F0018070000038000038000FF8007FF801FFF807F0380780380E003
80E00380E00380F00780780F803FFFF81FFDF807F0F815147E9318>97 D<01FE0007FF001FFF80
3E0780380300700000700000E00000E00000E00000E00000E00000E000007000007001C03801C0
3E03C01FFF8007FF0001FC0012147D9318>99 D<01F00007FC001FFE003E0F0038078070038070
0380E001C0E001C0FFFFC0FFFFC0FFFFC0E000007000007001C03801C03E07C01FFF8007FF0001
F80012147D9318>101 D<7E0000FE00007E00000E00000E00000E00000E00000E00000E3E000E
FF800FFFC00FC1C00F80E00F00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E
00E00E00E00E00E07FC7FCFFE7FE7FC7FC171C809B18>104 D<FFC000FFC000FFC00001C00001
C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001
C00001C00001C00001C00001C00001C00001C00001C000FFFF80FFFF80FFFF80111C7D9B18>
108 D<F9C1C0FFF7F0FFFFF03E3E383C3C383C3C38383838383838383838383838383838383838
383838383838383838383838383838FE3E3EFE7E7EFE3E3E1714809318>I<7E3E00FEFF807FFF
C00FC1C00F80E00F00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00
E00E00E07FC7FCFFE7FE7FC7FC1714809318>I<01F0000FFE001FFF003E0F803803807001C070
01C0E000E0E000E0E000E0E000E0E000E0F001E07001C07803C03C07803E0F801FFF000FFE0001
F00013147E9318>I<01F38007FB801FFF803E1F80380F80700780700780E00380E00380E00380
E00380E00380E00380700780700780380F803C1F801FFF800FFB8003E380000380000380000380
000380000380000380000380001FF0003FF8001FF0151E7E9318>113 D<FF0FC0FF3FE0FF7FF0
07F0F007E06007C000078000078000070000070000070000070000070000070000070000070000
070000FFFC00FFFE00FFFC0014147E9318>I<07F7003FFF007FFF00780F00E00700E00700E007
007C00007FE0001FFC0003FE00001F00600780E00380E00380F00380F80F00FFFF00FFFC00E7F0
0011147D9318>I<0180000380000380000380000380007FFFC0FFFFC0FFFFC003800003800003
80000380000380000380000380000380000380000380400380E00380E00380E001C1C001FFC000
FF80003E0013197F9818>I<7E07E0FE0FE07E07E00E00E00E00E00E00E00E00E00E00E00E00E0
0E00E00E00E00E00E00E00E00E00E00E00E00E01E00F03E007FFFC03FFFE01FCFC1714809318>
I E /Fc 2 4 df<FFFFF0FFFFF014027D881B>0 D<020002000200C218F2783AE00F800F803AE0
F278C2180200020002000D0E7E8E12>3 D E /Fd 3 116 df<FFFFFFFFF0FFFFFFFFF07000000F
F878000000F83C000000381C0000001C0E0000000C0F000000040700000006038000000203C000
000001E000000000E000000000700000000078000000003C000000001C000000001E000000000F
000000000700000000038000000003800000000300000000070000000006000000000C00000000
1800000000380000000030000000006000000000C000000001C000000001800000020300000006
06000000040E0000000C0C0000001C180000003830000000F87000000FF87FFFFFFFF0FFFFFFFF
F0272A7E7F2C>80 D<FFFFFFFFFFFFC0FFFFFFFFFFFFE07F00000001FFE07F000000001FE03F80
00000003F01FC000000000F00FC000000000380FE0000000001807F0000000000C03F800000000
0403F8000000000401FC000000000200FE0000000000007F0000000000007F0000000000003F80
00000000001FC000000000000FC000000000000FE0000000000007F0000000000003F800000000
0003F8000000000001FC000000000000FE0000000000007E0000000000007F0000000000003F80
00000000001FC000000000001FC000000000000FC0000000000007800000000000038000000000
00070000000000000E0000000000001C0000000000003800000000000070000000000000700000
00000000E0000000000001C0000000000003800000000000070000000000000E0000000000000E
0000000000001C0000000002003800000000040070000000000400E0000000000C01E000000000
1801C00000000038038000000000F8070000000001F00E000000000FF01C00000001FFF03FFFFF
FFFFFFE03FFFFFFFFFFFE07FFFFFFFFFFFE0FFFFFFFFFFFFC0373A7E7F3C>88
D<0000000002000000000600000000060000000006000000000C000000000C000000000C000000
000C000000000C0000000018000000001800000000180000000018000000001800000000300000
000030000000003000000000300000000030000000006000000000600000000060000000006000
0000006000000000C000000000C000000000C000000000C000000000C000000001800000000180
000000018000000001800000000180000000030000000003000000000300000000030000000003
000000000600000000060000000006000000000600000000060000000006000000000C00000000
0C000000000C000000000C000000000C0000000018000000001800000000180000000018000000
001800000000300000000030000000003000000000300000000030000000006000000000600000
00006000080000600008000060001C0000C0001C0000C0003C0000C0003C0000C0005C0000C000
5C000180008E000180000E000180000E000180000E000180000E000300000E0003000007000300
000700030000070003000007000600000700060000038006000003800600000380060000038006
000003800C000003800C000001C00C000001C00C000001C00C000001C018000001C018000001C0
18000000E018000000E018000000E030000000E030000000E03000000070300000007030000000
7060000000706000000070600000007060000000386000000038C000000038C000000038C00000
0038C000000038C00000001D800000001D800000001D800000001D800000001D800000000F0000
00000F000000000F000000000F000000000F000000000E00000000060000000006000000000600
0000277D7C812A>115 D E /Fe 18 122 df<03FFF80000700E00007007000070030000E00180
00E0018000E0018000E001C001C001C001C001C001C001C001C001C00380038003800380038003
8003800300070007000700070007000E0007000C000E001C000E0038000E0070000E00E0001C03
8000FFFE00001A1A7D991D>68 D<03F8001FC00078003C000078003C000078005C0000B800B800
00B800B800009C013800009C013800011C027000011C027000011C047000011C087000021C08E0
00021C10E000021C10E000021C20E000041C41C000041C41C000041C81C000041C81C000080F03
8000080F038000080E038000180C038000180C070000FE083FE000221A7D9922>77
D<001F8000706001C03003001806001C0E000C1C000C18000E38000E30000E70000E70000EE000
1CE0001CE0001CE00038E00038E00030E00070E000E0E000C06001807003003806001C1C0007E0
00171A7A991D>79 D<03FFF800701C00700600700700E00700E00700E00700E00701C00E01C00E
01C01C01C03803806003FF800380000380000700000700000700000700000E00000E00000E0000
0E00001C0000FF8000181A7D991A>I<03CC0E2E181C381C301C701CE038E038E038E038C072C0
72C07260F261341E180F107C8F14>97 D<7E000E000E000E001C001C001C001C00380038003BC0
3C307830701870187018E038E038E038E038C070C060C0E060C063801E000D1A7C9912>I<01E0
06180C181838301070006000E000E000E000E000E008E010602030C01F000D107C8F12>I<01E0
0E181C08380870087010FFE0E000E000E000E000E0086010602030C01F000D107C8F12>101
D<030706000000000000384C4E8E9C9C1C3838707272E2E4643808197C980C>105
D<1F8003800380038007000700070007000E000E000E0E0E131C271C431C801F003C003F8039C0
38E070E270E270E270E4E0646038101A7E9912>107 D<1F0707070E0E0E0E1C1C1C1C38383838
70707070E4E4E4E4E830081A7D990A>I<307C005986009E07009E07009C07009C0700380E0038
0E00380E00381C00701C80701C80703880703900E01900600E0011107C8F16>110
D<01F006180C0C180E300E700E600EE00EE00EE00CE01CE018E030606030C01F000F107C8F14>
I<30F05D189E389C189C009C0038003800380038007000700070007000E00060000D107C8F10>
114 D<03E004300830187018601C001F801FC00FE000E00060E060E06080C041803E000C107D8F
10>I<06000E000E000E000E001C001C00FFC01C0038003800380038007000700070007000E100
E100E100E200E40038000A177C960D>I<38184C1C4E1C8E0C9C0C9C0C1C083808380838107010
70107020304018C00F000E107C8F12>118 D<38064C074E0E8E0E9C0E9C0E1C1C381C381C381C
703870387038307838F00F700070006060E0E1C0C18047003C0010177C8F13>121
D E /Ff 8 113 df<FFFFFFC0FFFFFFC01A027C8B23>0 D<70F8F8F87005057C8D0D>I<000100
000003000000030000000300000003000000030000000300000003000000030000000300000003
000000030000000300000003000000030000FFFFFFFCFFFFFFFC00030000000300000003000000
030000000300000003000000030000000300000003000000030000000300000003000000030000
FFFFFFFCFFFFFFFC1E207E9E23>6 D<400001C0000360000660000660000630000C30000C3000
0C1800181800181800180FFFF00FFFF00C00300600600600600600600300C00300C00181800181
8001818000C30000C30000C300006600006600006600003C00003C00003C000018000018001821
809F19>56 D<00000010000000003000000000F000000000F000000000F000000001F000000001
F000000002F000000002F000000004F00000000CF000000008F000000018F000000010F0000000
20F000000020F000000040F8000000C0F800000080780000018078000003007800000200780000
06007800000DFFF800000FFFF800001800780000300078000060007C0040E0007C00C0C0003C00
E380003C00FF00003E00FE00003F80FE00001F00780000000021237FA024>65
D<0020006000C000C000C001800180030003000300060006000C000C0018001800180030003000
600060006000C000C000600060006000300030001800180018000C000C00060006000300030003
000180018000C000C000C0006000200B2E7CA112>104 D<C000C0006000600060003000300018
00180018000C000C00060006000300030003000180018000C000C000C00060006000C000C000C0
01800180030003000300060006000C000C0018001800180030003000600060006000C000C0000B
2E7EA112>I<000000000800000000180000000030000000003000000000600000000060000000
00C000000000C00000000180000000018000000003000000000300000000060000000006000000
000C000000000C0000000018000000001800000000300000000030000000006000000000600000
0000C000060000C0001E000180002F000180004F000300008780030000078006000003C0060000
03C00C000003C00C000001E018000001E018000000F030000000F0300000007860000000786000
00003CC00000003CC00000001F800000001F800000000F000000000F0000000006000000000600
0000252E7E8126>112 D E /Fg 10 117 df<03C0000C3040101840201880600C80C00C80C00D
00C00E00800E00800C00C01C00C02C0060C4801F0300120E7E8D17>11 D<000800180030003000
3000600060006000C000C000C0018001800180030003000600060006000C000C000C0018001800
1800300030003000600060006000C000C0000D217E9812>61 D<0000C00000C00001C00001C000
03C00005C00005E00008E00018E00010E00020E00020E00040E00080E00080E001FFF001007002
0070040070040070080070180070FE03FE17177F961A>65 D<07FE03F800E001C000E0010000E0
020000E0080001C0100001C0200001C0800001C1000003830000038F00000393800003A3800007
81C0000701C0000700E0000700E0000E0070000E0070000E0038000E0038001C003C00FF80FF00
1D177F961E>75 D<07F0000FE000F0001E0000B8001E0000B8002E0000B8004E000138005C0001
38009C000138011C00011C011C00021C023800021C043800021C043800021C083800041C107000
040E107000040E207000040E407000080E40E000080E80E000080F00E000080700E000180601C0
00FE040FF80023177F9622>77 D<07F007F800F000C000B8008000B80080009C0080011C010001
1E0100010E0100010E0100020702000207020002038200020382000401C4000401C4000400E400
0400E4000800780008007800080038000800380018001000FE0010001D177F961C>I<03000380
03000000000000000000000000001C002400460046008C000C0018001800180031003100320032
001C0009177F960C>105 D<00180038001000000000000000000000000001C002200430043008
6000600060006000C000C000C000C001800180018001806300E300C60078000D1D80960E>I<38
3C0044C6004702004602008E06000C06000C06000C0600180C00180C4018184018188030098030
0E00120E7F8D15>110 D<030003000600060006000600FFC00C000C000C001800180018001800
300030803080310032001C000A147F930D>116 D E /Fh 4 111 df<000FE000381000E03801C0
3801C0300380000380000380000380000380001FFFF00700E00700E00700E00700E00700E00700
E00E01C00E01C00E01C00E01C00E01C00E01C01C03801C0380FF8FF0151A809915>12
D<0003E00000E00000E00000E00000E00001C00001C00001C00001C00001C001F1C0070F800C03
80180380300380700380700380E00700E00700E00700E00700600700600F00301E00182F000FCF
C0131A7E9915>100 D<03F006181C0C380C300E700E7FFEE000E000E000E00060006004300818
300FC00F107E8F11>I<1F8F800730C00740E00780E00700E00700E00700E00E01C00E01C00E01
C00E01C00E01C00E01C01C03801C0380FF9FF01410808F15>110 D E /Fi
3 52 df<187898181818181818181818181818FF08107D8F0F>49 D<1F00618040C08060C06000
60006000C00180030006000C00102020207FC0FFC00B107F8F0F>I<1F00218060C060C000C000
8001001F00008000400060C060C060804060801F000B107F8F0F>I E /Fj
8 94 df<0102040C1818303070606060E0E0E0E0E0E0E0E0E0E060606070303018180C04020108
227D980E>40 D<8040203018180C0C0E060606070707070707070707070606060E0C0C18183020
408008227E980E>I<003000003000003000003000003000003000003000003000003000003000
003000FFFFFCFFFFFC003000003000003000003000003000003000003000003000003000003000
00300016187E931B>43 D<06000E00FE000E000E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E00FFE00B157D9412>49 D<0F8030E040708030C038E0384038003800
700070006000C00180030006000C08080810183FF07FF0FFF00D157E9412>I<0FE03030601870
1C701C001C00180038006007E000300018000C000E000EE00EE00EC00C401830300FE00F157F94
12>I<FCFCC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FCFC06217D
980A>91 D<FCFC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0CFCFC06
2180980A>93 D E /Fk 29 127 df<007E000001C30000030180800E00C0801E00E0801C00E100
3C00E1007800E1007800E2007800E400F000E400F000E800F000F000F000F000F000E0007000E0
0070016000300671001818320007E01C0019147E931D>11 D<03C0020FE0041FF0043FF8087018
08400C10C004108004200002200002400002400002800002800003000003000003000002000002
00000200000600000600000600000C00000C00000C00000C00001800001800001800001000171E
7F9318>13 D<000800000800000800000FE000381000F7E001E00003C0000780000780000F0000
0F00000F00000F00000F000007000003FF0001C080027F000C0000180000100000300000600000
600000600000E00000E000007000007800003E00001FC0000FF00003FC00007F00001F00000300
00030001030000C600003C001429809F14>24 D<0FFFFC1FFFFE3FFFFC608200C0820081820001
0600010400030400030400020400060C00060E000C0E000C0E001C0E001C0E00180F0038070030
060017147E931A>I<70F8F8F87005057C840D>58 D<70F0F8F878080808101010202040050E7C
840D>I<000001C00000078000001E00000078000001E00000078000000E00000038000000F000
0003C000000F0000003C000000F0000000F00000003C0000000F00000003C0000000F000000038
0000000E0000000780000001E0000000780000001E0000000780000001C01A1A7C9723>I<0000
400000C0000180000180000180000300000300000300000600000600000C00000C00000C000018
0000180000180000300000300000600000600000600000C00000C00000C0000180000180000180
000300000300000600000600000600000C00000C00000C00001800001800003000003000003000
00600000600000600000C00000C00000122D7EA117>I<000002000000060000000E0000000E00
00001E0000001F0000002F0000006F0000004F0000008F0000008F0000010F0000030F0000020F
0000040F8000040F800008078000180780001007800020078000200780007FFF80008007800080
0780010007C0010003C0020003C0040003C0040003C00C0003C03C0007C0FF003FFC1E207E9F22
>65 D<01FF001FF8001F0003C0001F800100001780010000178001000023C002000023C0020000
21E002000021E002000041F004000040F004000040F004000040780400008078080000807C0800
00803C080000803C080001001E100001001E100001000F100001000F100002000FA000020007A0
00020007A000020003E000040003C000040003C000040001C0000C0001C0001E00008000FFC000
8000251F7E9E25>78 D<0000FF00000781C0001C00E0003800700070003801C0001C03C0001C03
80001E0700000E0F00000E1E00000E1E00000E3C00000E3C00000E7800001E7800001E7800001E
7800001EF000003CF000003CF0000038F0000078F0000070700000F0700001E0780001C0780003
80380007001C000E001C001C000F0070000381C00000FF00001F217F9F23>I<0000FF00000781
C0001C00E0003800700070003801E0001C03C0001C0380001E0700001E0F00000E1E00000E1E00
000E3C00000E3C00001E7800001E7800001E7800001E7800001EF000003CF000003CF0000038F0
000078F0000070700000F0700000E0700E01C078300380384087001C408E001C409C000E40F000
03C1C02000FFC0200000C0600000C0400000C0C00000E1800000FF800000FF0000007E0000003C
001F297F9F24>81 D<0003F040000C08C0003005800060038000C0038001C00180018001000380
010003800100038001000380000003C0000003E0000003FC000001FFC00000FFF000007FF80000
1FF8000001FC0000007C0000003C0000001C0000001C0020001C0020001C002000180060003800
60003000600070007000E000E8018000C603000081FC00001A217E9F1C>83
D<7FFC07FE07C000F00780004007800040078000400F0000800F0000800F0000800F0000801E00
01001E0001001E0001001E0001003C0002003C0002003C0002003C000200780004007800040078
00040078000400F0000800F0000800F0000800F000100070002000700020007000400038008000
180300000E0C000003F000001F207D9E1F>85 D<FFF001FF0F8000780F0000300F0000200F0000
400F0000800F80008007800100078003000780020007800400078004000780080007C0100007C0
100003C0200003C0600003C0400003C0800003C0800003C1000003E2000001E2000001E4000001
E8000001E8000001F0000001F0000001E0000001C0000000C000000080000020207E9E1B>I<00
F1800389C00707800E03801C03803C0380380700780700780700780700F00E00F00E00F00E00F0
0E10F01C20F01C20703C20705C40308C400F078014147E9318>97 D<07803F8007000700070007
000E000E000E000E001C001C001CF01D0C3A0E3C0E380F380F700F700F700F700FE01EE01EE01E
E01CE03CE038607060E031C01F0010207E9F14>I<00E001E001E000C000000000000000000000
000000000E00130023804380438043808700070007000E000E001C001C001C2038403840384038
8019000E000B1F7E9E10>105 D<0000C00001E00001E00001C000000000000000000000000000
0000000000000000001E0000230000438000838001038001038002070000070000070000070000
0E00000E00000E00000E00001C00001C00001C00001C0000380000380000380000380000700000
700030700078E000F1C0006380003E00001328819E13>I<01E0000FE00001C00001C00001C000
01C0000380000380000380000380000700000700000701E00706100E08700E10F00E20F00E2060
1C40001D80001E00001FC000387000383800383800381C20703840703840703840701880E01880
600F0014207E9F18>I<1E07C07C00231861860023A032030043C0340300438038038043803803
8087007007000700700700070070070007007007000E00E00E000E00E00E000E00E00E000E00E0
1C101C01C01C201C01C038201C01C038401C01C0184038038018801801800F0024147E9328>
109 D<1E07802318C023A06043C0704380704380708700E00700E00700E00700E00E01C00E01C0
0E01C00E03821C03841C07041C07081C03083803101801E017147E931B>I<00F0400388C00705
800E03801C03803C0380380700780700780700780700F00E00F00E00F00E00F00E00F01C00F01C
00703C00705C0030B8000F380000380000380000700000700000700000700000E00000E0000FFC
00121D7E9314>113 D<1C1E002621004743804787804707804703008E00000E00000E00000E00
001C00001C00001C00001C000038000038000038000038000070000030000011147E9315>I<00
FC000303000600800C01800C03800C03000E00000F80000FF80007FC0001FE00001F0000070070
0700F00600F00600E004004008002030001FC00011147E9315>I<018001C00380038003800380
07000700FFF807000E000E000E000E001C001C001C001C00380038003800381070207020704070
8031001E000D1C7F9B10>I<1E01C02303C02303E04381E04300E04700608700400E00400E0040
0E00401C00801C00801C00801C01001C01001C02001C04000C04000E180003E00013147E9316>
118 D<03C1C00C62201034701038F02038F020386040700000700000700000700000E00000E000
00E00000E02061C040F1C040F1C080E2C080446300383C0014147E931A>120
D<0001800001800000C0FFFFE0FFFFE00001800003000006001308779F17>126
D E /Fl 10 120 df<0003F07C001E0DC600380F0F00701E0F00E01E0E00E00C0001C01C0001C0
1C0001C01C0001C01C0001C01C00038038007FFFFFC00380380003803800038038000380380007
00700007007000070070000700700007007000070070000E00E0000E00E0000E00E0000E00E000
0E00E0000E00E0001C01C0001E01E000FF8FFC0020207E9F1B>11 D<07F8000C0C001E06001E07
001C070000070000070000070000FF0007C7001E07003C0E00780E00F00E10F00E10F00E10F01E
10F02E20784F401F878014147D9317>97 D<0000380001F8000078000038000038000070000070
0000700000700000700000700000E000FCE00382E00601E01C01E03C00E03801C07801C0F001C0
F001C0F001C0F001C0E00380E00380E00380E00380F00380700780380F001C378007C7E015207D
9F19>100 D<00F800070E000E07001C0700380380780380700380F00380F00380FFFF80F00000
E00000E00000E00000E00000F001007002003004001C180007E00011147D9314>I<01C003E003
E003C0018000000000000000000000000003801F80078003800380070007000700070007000700
0E000E000E000E000E000E001C001E00FF800B1F7F9E0C>105 D<038F801F90E007A0E003C060
0380600780E00700E00700E00700E00700E00700E00E01C00E01C00E01C00E01C00E01C00E01C0
1C03801E03C0FF8FF014147E9319>110 D<038E001FB38007C78003C780038300078000070000
0700000700000700000700000E00000E00000E00000E00000E00000E00001C00001E0000FFC000
11147E9312>114 D<01F9060708031803180138023C001F001FF007FC01FE001F400740034003
60036006F004C81887E010147F9312>I<0080010001000100030007000F001E00FFF80E000E00
0E000E001C001C001C001C001C001C00380038103810381038103820382018400F800D1C7C9B12
>I<FF9FE1FC3C0780701C0300601C0380601C0380401C0380800E0780800E0D81000E0981000E
19C2000E11C2000F21C4000720C4000740C8000740E8000780F0000780F0000300E00003006000
020040001E147C9321>119 D E /Fm 47 122 df<1C3E7E7E3A020404080810204080070E769F
0E>39 D<1C3C3C3C3C040408081020204080060E7D840E>44 D<7FF0FFE07FE00C037D8A10>I<
70F8F8F0E005057B840E>I<000F800030E000E07001C0700380300380380700380F00780F0078
0E00781E00781E00703C00F03C00F03C00F03C00F07801E07801E07801E07801C07003C0F003C0
F00380F00780F00700700700700E00701C003038001870000FC000151F7C9D17>48
D<001F000061C00080E00100E00200700240700440700420700840F00840F00840F00880E00901
E00601C0000380000700000C0000180000600000C0000300000400000800401000401000802001
807E038047FF0041FE0080FC00807800141F7C9D17>50 D<001F0000718000C0C00180C00380E0
0700E00F00E00F01E01E01E01E01E01E01E01E01C01C03C01C03C01C03C01C07C01C0F800C0F80
06378003C700000F00000E00000E00001C00601C00F03800F07000E0600080C0004380003E0000
131F7B9D17>57 D<070F1F1F0E0000000000000000000070F8F8F0E008147B930E>I<00000200
000006000000060000000E0000001E0000001E0000003F0000002F0000004F000000CF0000008F
0000010F0000010F0000020F0000020F0000040F0000080F0000080F0000100F80001007800020
0780003FFF8000400780008007800080078001000780010007800200078006000780040007801E
0007C0FF807FF81D207E9F22>65 D<0000FE0200078186001C004C0038003C0060003C00C0001C
01C0001803800018070000180F0000181E0000101E0000103C0000003C00000078000000780000
007800000078000000F0000000F0000000F0000000F0000000F000008070000080700000807000
01003800010038000200180004000C001800060020000381C00000FE00001F217A9F21>67
D<00FFFF80001E00E0001E0070001E0038001E001C003C001C003C000E003C000E003C000E0078
000E0078000E0078000E0078000E00F0001E00F0001E00F0001E00F0001E01E0003C01E0003C01
E0003C01E0007803C0007003C0007003C000E003C001C0078003C00780038007800E0007801C00
0F007000FFFFC0001F1F7D9E22>I<01FFFFFE001E001C001E000C001E0004001E0004003C0004
003C0004003C0004003C000400780408007804000078040000780C0000F0180000FFF80000F018
0000F0180001E0100001E0100001E0100001E0001003C0002003C0002003C0004003C000400780
00800780018007800100078007000F001F00FFFFFE001F1F7D9E1F>I<01FFFFFC001E0038001E
0018001E0008001E0008003C0008003C0008003C0008003C000800780010007808000078080000
78080000F0100000F0300000FFF00000F0300001E0200001E0200001E0200001E0200003C00000
03C0000003C0000003C00000078000000780000007800000078000000F800000FFF800001E1F7D
9E1E>I<0000FC040007030C001C00980030007800E0007801C000380380003003800030070000
300E0000301E0000201E0000203C0000003C00000078000000780000007800000078000000F000
0000F000FFF0F0000780F0000780F0000F0070000F0070000F0070000F0070001E0038001E0018
003E001C002E000E00CC000383040000FC00001E217A9F23>I<01FFF0001F00001E00001E0000
1E00003C00003C00003C00003C0000780000780000780000780000F00000F00000F00000F00001
E00001E00001E00001E00003C00003C00003C00003C0000780000780000780000780000F8000FF
F000141F7D9E12>73 D<000FFF8000007C000000780000007800000078000000F0000000F00000
00F0000000F0000001E0000001E0000001E0000001E0000003C0000003C0000003C0000003C000
00078000000780000007800000078000000F0000000F0000300F0000780F0000F81E0000F81E00
00F03C0000803800004070000020E000001F80000019207D9E18>I<01FFF800001F0000001E00
00001E0000001E0000003C0000003C0000003C0000003C00000078000000780000007800000078
000000F0000000F0000000F0000000F0000001E0000001E0000001E0000001E0008003C0010003
C0010003C0030003C00200078006000780060007800C0007801C000F007800FFFFF800191F7D9E
1D>76 D<01FE00007FC0001E0000FC00001E0000F80000170001780000170001780000270002F0
0000270004F00000270004F00000270008F00000470009E00000470011E00000470021E0000047
0021E00000870043C00000838043C00000838083C00000838083C0000103810780000103820780
000103820780000103840780000203840F00000203880F00000203900F00000203900F00000401
E01E00000401E01E00000401C01E00000C01801E00001C01803E0000FF8103FFC0002A1F7D9E29
>I<00FF003FE0001F000F00001F0004000017800400001780040000278008000023C008000023
C008000023C008000041E010000041E010000041F010000040F010000080F02000008078200000
80782000008078200001003C400001003C400001003C400001001E400002001E800002001E8000
02000F800002000F800004000F0000040007000004000700000C000700001C00020000FF800200
00231F7D9E22>I<01FFFF80001E00E0001E0070001E0038001E003C003C003C003C003C003C00
3C003C003C0078007800780078007800F0007800E000F003C000F00F0000FFFC0000F0000001E0
000001E0000001E0000001E0000003C0000003C0000003C0000003C00000078000000780000007
800000078000000F800000FFF000001E1F7D9E1F>80 D<00FFFF00001E03C0001E00E0001E0070
001E0078003C0078003C0078003C0078003C0078007800F0007800F0007801E0007801C000F007
0000F01E0000FFF00000F01C0001E00E0001E00F0001E0070001E0078003C00F0003C00F0003C0
0F0003C00F0007801E0007801E0807801E0807801E100F800E10FFF00E20000003C01D207D9E21
>82 D<0007E040001C18C0003005800060038000C0038001C00180018001000380010003800100
038001000380000003C0000003C0000003F8000001FF800001FFE000007FF000001FF0000001F8
000000780000007800000038000000380020003800200038002000300060007000600060006000
E0007000C000E8038000C606000081F800001A217D9F1A>I<0FFFFFFC1E03C0381803C0181003
C0082003C00820078008600780084007800840078008800F0010000F0000000F0000000F000000
1E0000001E0000001E0000001E0000003C0000003C0000003C0000003C00000078000000780000
007800000078000000F0000000F0000000F0000000F0000001F000007FFF80001E1F799E21>I<
FFE1FFC07F801F003E001C001E003C0018001E003C0010001E003E0010001E001E0020001F001E
0020000F003E0040000F003E0040000F005E0080000F009E0080000F009E0100000F011E020000
0F011E0200000F021E0400000F021E0400000F041E0800000F041E0800000F081E1000000F081E
1000000F101E2000000F201E2000000F201E4000000F401E8000000F401E8000000F801F000000
0F800F0000000F000E00000007000E00000006000C00000006000C000000040008000000292077
9E2D>87 D<00F1800389C00707800E03801C03803C0380380700780700780700780700F00E00F0
0E00F00E00F00E20F01C40F01C40703C40705C40308C800F070013147C9317>97
D<07803F8007000700070007000E000E000E000E001C001C001CF01D0C3A0E3C0E380F380F700F
700F700F700FE01EE01EE01EE01CE03CE038607060E031C01F0010207B9F15>I<007E0001C100
0300800E07801E07801C07003C0200780000780000780000F00000F00000F00000F00000F00000
70010070020030040018380007C00011147C9315>I<0000780003F80000700000700000700000
700000E00000E00000E00000E00001C00001C000F1C00389C00707800E03801C03803C03803807
00780700780700780700F00E00F00E00F00E00F00E20F01C40F01C40703C40705C40308C800F07
0015207C9F17>I<007C01C207010E011C013C013802780C7BF07C00F000F000F000F000700070
0170023804183807C010147C9315>I<00007800019C00033C00033C000718000700000700000E
00000E00000E00000E00000E0000FFE0001C00001C00001C00001C000038000038000038000038
0000380000700000700000700000700000700000E00000E00000E00000E00000E00001C00001C0
0001C0000180003180007B0000F300006600003C00001629829F0E>I<001E3000713800E0F001
C0700380700780700700E00F00E00F00E00F00E01E01C01E01C01E01C01E01C01E03801E03800E
07800E0B8006170001E700000700000700000E00000E00300E00781C00F038006070003FC00015
1D7F9315>I<01E0000FE00001C00001C00001C00001C000038000038000038000038000070000
070000071E000763000E81800F01C00E01C00E01C01C03801C03801C03801C0380380700380700
380700380E10700E20700E20701C20700C40E00C8060070014207D9F17>I<00C001E001E001C0
00000000000000000000000000000E001300230043804700470087000E000E000E001C001C001C
003840388038807080310032001C000B1F7C9E0E>I<01E0000FE00001C00001C00001C00001C0
000380000380000380000380000700000700000703C00704200E08E00E11E00E21E00E40C01C80
001D00001E00001FC00038E000387000387000383840707080707080707080703100E03100601E
0013207D9F15>107 D<03C01FC0038003800380038007000700070007000E000E000E000E001C
001C001C001C0038003800380038007000700070007100E200E200E200E200640038000A207C9F
0C>I<1C0F80F0002630C318004740640C004780680E004700700E004700700E008E00E01C000E
00E01C000E00E01C000E00E01C001C01C038001C01C038001C01C038001C01C070803803807100
3803807100380380E10038038062007007006400300300380021147C9325>I<1C0F802630C047
40604780604700704700708E00E00E00E00E00E00E00E01C01C01C01C01C01C01C038438038838
03883807083803107003303001C016147C931A>I<007C0001C3000301800E01C01E01C01C01E0
3C01E07801E07801E07801E0F003C0F003C0F003C0F00780F00700700F00700E00301800187000
07C00013147C9317>I<01C1E002621804741C04781C04701E04701E08E01E00E01E00E01E00E0
1E01C03C01C03C01C03C01C0380380780380700380E003C1C0072380071E000700000700000E00
000E00000E00000E00001C00001C0000FF8000171D809317>I<1C1E0026610027838047878047
07804703008E00000E00000E00000E00001C00001C00001C00001C000038000038000038000038
000070000030000011147C9313>114 D<00FC030206010C030C070C060C000F800FF007F803FC
003E000E700EF00CF00CE008401020601F8010147D9313>I<018001C003800380038003800700
0700FFF007000E000E000E000E001C001C001C001C003800380038003820704070407080708031
001E000C1C7C9B0F>I<0E00C01300E02301C04381C04701C04701C08703800E03800E03800E03
801C07001C07001C07001C07101C0E20180E20180E201C1E400C264007C38014147C9318>I<0E
03801307802307C04383C04701C04700C08700800E00800E00800E00801C01001C01001C01001C
02001C02001C04001C04001C08000E300003C00012147C9315>I<0E00C1C01300E3C02301C3E0
4381C1E04701C0E04701C060870380400E0380400E0380400E0380401C0700801C0700801C0700
801C0701001C0701001C0601001C0F02000C0F04000E13080003E1F0001B147C931E>I<038380
0CC4401068E01071E02071E02070C040E00000E00000E00000E00001C00001C00001C00001C040
638080F38080F38100E5810084C60078780013147D9315>I<0E00C01300E02301C04381C04701
C04701C08703800E03800E03800E03801C07001C07001C07001C07001C0E00180E00180E001C1E
000C3C0007DC00001C00001C00003800F03800F07000E06000C0C0004380003E0000131D7C9316
>I E /Fn 37 122 df<FFFF80FFFF80FFFF80FFFF80FFFF80FFFF8011067F9017>45
D<000E00001E00007E0007FE00FFFE00FFFE00F8FE0000FE0000FE0000FE0000FE0000FE0000FE
0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE
0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE007FFFFE7FFFFE7FFF
FE17277BA622>49 D<00FF800003FFF0000FFFFC001F03FE003800FF007C007F80FE003FC0FF00
3FC0FF003FE0FF001FE0FF001FE07E001FE03C003FE000003FE000003FC000003FC000007F8000
007F000000FE000000FC000001F8000003F0000003E00000078000000F0000001E0000003C00E0
007000E000E000E001C001C0038001C0070001C00FFFFFC01FFFFFC03FFFFFC07FFFFFC0FFFFFF
80FFFFFF80FFFFFF801B277DA622>I<007F800003FFF00007FFF8000F81FE001F00FE003F80FF
003F807F803F807F803F807F801F807F800F007F800000FF000000FF000000FE000001FC000001
F8000007F00000FFC00000FFF0000001FC000000FE0000007F0000007F8000003FC000003FC000
003FE000003FE03C003FE07E003FE0FF003FE0FF003FE0FF003FC0FF007FC07E007F807C007F00
3F01FE001FFFFC0007FFF00000FF80001B277DA622>I<00000E0000001E0000003E0000007E00
0000FE000000FE000001FE000003FE0000077E00000E7E00000E7E00001C7E0000387E0000707E
0000E07E0000E07E0001C07E0003807E0007007E000E007E000E007E001C007E0038007E007000
7E00E0007E00FFFFFFF8FFFFFFF8FFFFFFF80000FE000000FE000000FE000000FE000000FE0000
00FE000000FE000000FE00003FFFF8003FFFF8003FFFF81D277EA622>I<080003001F803F001F
FFFE001FFFFC001FFFF8001FFFF0001FFFE0001FFF80001FFE00001C0000001C0000001C000000
1C0000001C0000001C0000001C7FC0001DFFF8001F80FC001E003E0008003F0000003F8000001F
C000001FC000001FE000001FE018001FE07C001FE0FE001FE0FE001FE0FE001FE0FE001FC0FC00
1FC078003F8078003F803C007F001F01FE000FFFF80003FFF00000FF80001B277DA622>I<0000
03800000000007C00000000007C0000000000FE0000000000FE0000000000FE0000000001FF000
0000001FF0000000003FF8000000003FF8000000003FF80000000073FC0000000073FC00000000
F3FE00000000E1FE00000001E1FF00000001C0FF00000001C0FF00000003C0FF80000003807F80
000007807FC0000007003FC0000007003FC000000E001FE000000E001FE000001E001FF000001C
000FF000001FFFFFF000003FFFFFF800003FFFFFF80000780007FC0000700003FC0000F00003FE
0000E00001FE0000E00001FE0001E00001FF0001C00000FF0003C00000FF80FFFE001FFFFEFFFE
001FFFFEFFFE001FFFFE2F297EA834>65 D<00003FF001800003FFFE0380000FFFFF8780003FF0
07DF8000FF8001FF8001FE00007F8003FC00003F8007F000001F800FF000000F801FE000000780
1FE0000007803FC0000007803FC0000003807FC0000003807F80000003807F8000000000FF8000
000000FF8000000000FF8000000000FF8000000000FF8000000000FF8000000000FF8000000000
FF8000000000FF80000000007F80000000007F80000000007FC0000003803FC0000003803FC000
0003801FE0000003801FE0000007000FF00000070007F000000E0003FC00001E0001FE00003C00
00FF8000F800003FF007E000000FFFFFC0000003FFFF000000003FF8000029297CA832>67
D<FFFFFFF80000FFFFFFFF8000FFFFFFFFE00003FC001FF80003FC0007FC0003FC0001FE0003FC
0000FF0003FC00007F8003FC00003FC003FC00001FC003FC00001FE003FC00001FE003FC00000F
F003FC00000FF003FC00000FF003FC00000FF003FC00000FF803FC00000FF803FC00000FF803FC
00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000F
F803FC00000FF003FC00000FF003FC00000FF003FC00001FE003FC00001FE003FC00001FC003FC
00003FC003FC00007F8003FC00007F0003FC0001FE0003FC0003FC0003FC001FF800FFFFFFFFE0
00FFFFFFFF8000FFFFFFFC00002D297DA835>I<FFFFFFFFF0FFFFFFFFF0FFFFFFFFF003FC000F
F003FC0003F803FC0001F803FC0000F803FC00007803FC00003803FC00003803FC00003803FC00
E03C03FC00E01C03FC00E01C03FC00E01C03FC01E00003FC01E00003FC07E00003FFFFE00003FF
FFE00003FFFFE00003FC07E00003FC01E00003FC01E00003FC00E00703FC00E00703FC00E00703
FC00E00E03FC00000E03FC00000E03FC00001E03FC00001E03FC00001C03FC00003C03FC00007C
03FC0000FC03FC0001FC03FC000FFCFFFFFFFFF8FFFFFFFFF8FFFFFFFFF828297EA82D>I<FFFF
FFFFE0FFFFFFFFE0FFFFFFFFE003FC001FE003FC0007F003FC0001F003FC0001F003FC0000F003
FC00007003FC00007003FC00007003FC00007803FC00E03803FC00E03803FC00E03803FC00E000
03FC01E00003FC01E00003FC07E00003FFFFE00003FFFFE00003FFFFE00003FC07E00003FC01E0
0003FC01E00003FC00E00003FC00E00003FC00E00003FC00E00003FC00000003FC00000003FC00
000003FC00000003FC00000003FC00000003FC00000003FC00000003FC000000FFFFFC0000FFFF
FC0000FFFFFC000025297EA82B>I<FFFFFCFFFFFCFFFFFC01FE0001FE0001FE0001FE0001FE00
01FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE00
01FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE00
01FE0001FE0001FE0001FE00FFFFFCFFFFFCFFFFFC16297EA81A>73 D<FFFE0000001FFFC0FFFE
0000001FFFC0FFFF0000003FFFC003FF0000003FF00003FF0000003FF00003BF80000077F00003
BF80000077F000039FC00000E7F000039FC00000E7F000038FE00001C7F000038FE00001C7F000
0387F0000387F0000387F0000387F0000387F0000387F0000383F8000707F0000383F8000707F0
000381FC000E07F0000381FC000E07F0000380FE001C07F0000380FE001C07F0000380FF003807
F00003807F003807F00003807F003807F00003803F807007F00003803F807007F00003801FC0E0
07F00003801FC0E007F00003800FE1C007F00003800FE1C007F00003800FE1C007F000038007F3
8007F000038007F38007F000038003FF0007F000038003FF0007F000038001FE0007F000038001
FE0007F000038000FC0007F000038000FC0007F000FFFE00FC01FFFFC0FFFE007801FFFFC0FFFE
007801FFFFC03A297DA841>77 D<FFFFFFE00000FFFFFFFE0000FFFFFFFF800003FC007FE00003
FC000FF00003FC0007F80003FC0007FC0003FC0003FC0003FC0003FE0003FC0003FE0003FC0003
FE0003FC0003FE0003FC0003FE0003FC0003FE0003FC0003FC0003FC0007F80003FC0007F80003
FC001FE00003FC007FC00003FFFFFE000003FFFFF8000003FC00FC000003FC007F000003FC003F
800003FC003F800003FC001FC00003FC001FE00003FC001FE00003FC001FE00003FC001FE00003
FC001FE00003FC001FF00003FC001FF00003FC001FF00003FC001FF00703FC001FF80703FC000F
F80703FC0007F80EFFFFF003FE1CFFFFF001FFF8FFFFF0003FF030297DA834>82
D<FFFFF001FFFCFFFFF001FFFCFFFFF001FFFC03FC0000070003FC0000070003FC0000070003FC
0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC000007
0003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC
0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC000007
0003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070001FC00000E0001FE
00000E0000FE00001C00007E00001C00007F00003800003FC000F000000FF007E0000007FFFFC0
000001FFFF000000001FF800002E297DA835>85 D<FFFFE07FFFF007FFF0FFFFE07FFFF007FFF0
FFFFE07FFFF007FFF003FC0001FE00001C0003FC0001FE00001C0001FE0001FF0000380001FE00
00FF0000380001FE0000FF0000380000FF0000FF8000700000FF0000FF8000700000FF8001FFC0
00F000007F8001FFC000E000007F8001FFC000E000003FC003FFE001C000003FC0039FE001C000
003FC0039FE001C000001FE0070FF0038000001FE0070FF0038000001FF00F0FF8078000000FF0
0E07F8070000000FF00E07F80700000007F81E07FC0E00000007F81C03FC0E00000007FC1C03FC
1E00000003FC3801FE1C00000003FC3801FE1C00000003FE7801FF3C00000001FE7000FF380000
0001FE7000FF3800000000FFE0007FF000000000FFE0007FF000000000FFE0007FF0000000007F
C0003FE0000000007FC0003FE0000000007FC0003FE0000000003F80001FC0000000003F80001F
C0000000001F00000F80000000001F00000F80000000001F00000F80000000000E000007000000
44297FA847>87 D<03FF80000FFFF0001F01F8003F807E003F807E003F803F001F003F800E003F
8000003F8000003F8000003F80000FFF8000FFFF8007FC3F800FE03F803F803F803F003F807F00
3F80FE003F80FE003F80FE003F80FE003F807E007F807F00DF803F839FFC0FFF0FFC01FC03FC1E
1B7E9A21>97 D<FFE0000000FFE0000000FFE00000000FE00000000FE00000000FE00000000FE0
0000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000F
E00000000FE1FE00000FE7FF80000FFE07E0000FF801F0000FF000F8000FE000FC000FE000FE00
0FE0007F000FE0007F000FE0007F000FE0007F800FE0007F800FE0007F800FE0007F800FE0007F
800FE0007F800FE0007F800FE0007F000FE0007F000FE0007F000FE000FE000FE000FC000FF001
F8000FF803F0000F9E0FE0000F0FFF80000E01FC0000212A7EA926>I<003FF80000FFFE0003F0
1F0007E03F800FC03F801F803F803F801F007F000E007F0000007F000000FF000000FF000000FF
000000FF000000FF000000FF000000FF0000007F0000007F0000007F8000003F8001C01F8001C0
0FC0038007E0070003F01E0000FFFC00003FE0001A1B7E9A1F>I<00003FF80000003FF8000000
3FF800000003F800000003F800000003F800000003F800000003F800000003F800000003F80000
0003F800000003F800000003F800000003F800000003F800001FE3F80000FFFBF80003F83FF800
07E00FF8000FC007F8001F8003F8003F8003F8007F0003F8007F0003F8007F0003F800FF0003F8
00FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F8007F0003F8007F0003
F8007F0003F8003F8003F8001F8003F8000F8007F80007C00FF80003F03FFF8000FFF3FF80003F
C3FF80212A7EA926>I<003FE00001FFF80003F07E0007C01F000F801F801F800F803F800FC07F
000FC07F0007C07F0007E0FF0007E0FF0007E0FFFFFFE0FFFFFFE0FF000000FF000000FF000000
7F0000007F0000007F0000003F8000E01F8000E00FC001C007E0038003F81F0000FFFE00001FF0
001B1B7E9A20>I<0007F0003FFC00FE3E01F87F03F87F03F07F07F07F07F03E07F00007F00007
F00007F00007F00007F00007F000FFFFC0FFFFC0FFFFC007F00007F00007F00007F00007F00007
F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007
F00007F00007F0007FFF807FFF807FFF80182A7EA915>I<00FF81F003FFE7F80FC1FE7C1F80FC
7C1F007C383F007E107F007F007F007F007F007F007F007F007F007F007F007F003F007E001F00
7C001F80FC000FC1F8001FFFE00018FF800038000000380000003C0000003E0000003FFFF8001F
FFFF001FFFFF800FFFFFC007FFFFE01FFFFFF03C0007F07C0001F8F80000F8F80000F8F80000F8
F80000F87C0001F03C0001E01F0007C00FC01F8003FFFE00007FF0001E287E9A22>I<FFE00000
00FFE0000000FFE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000
00000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE07F00000FE1
FFC0000FE787E0000FEE03F0000FF803F0000FF803F8000FF003F8000FF003F8000FE003F8000F
E003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800
0FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800FFFE3FFF
80FFFE3FFF80FFFE3FFF80212A7DA926>I<07000F801FC03FE03FE03FE01FC00F800700000000
0000000000000000000000FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2B7DAA14>I<FFE00000FFE0
0000FFE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000F
E000000FE000000FE000000FE000000FE01FFC0FE01FFC0FE01FFC0FE007800FE00F000FE01E00
0FE03C000FE078000FE0E0000FE3C0000FE7C0000FEFE0000FFFE0000FFFF0000FF3F8000FE3F8
000FC1FC000FC0FE000FC07F000FC07F000FC03F800FC01FC00FC00FC00FC00FE0FFFC3FFEFFFC
3FFEFFFC3FFE1F2A7EA924>107 D<FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00F
E00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2A7DA914>I<FFC07F800FF000FFC1FFE0
3FFC00FFC383F0707E000FC603F8C07F000FCC01F9803F000FD801FF003F800FF001FE003F800F
F001FE003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC00
3F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE0
01FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F
80FFFE1FFFC3FFF8FFFE1FFFC3FFF8FFFE1FFFC3FFF8351B7D9A3A>I<FFC07F0000FFC1FFC000
FFC787E0000FCE03F0000FD803F0000FD803F8000FF003F8000FF003F8000FE003F8000FE003F8
000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800FFFE3FFF80FFFE
3FFF80FFFE3FFF80211B7D9A26>I<003FE00001FFFC0003F07E000FC01F801F800FC03F800FE0
3F0007E07F0007F07F0007F07F0007F0FF0007F8FF0007F8FF0007F8FF0007F8FF0007F8FF0007
F8FF0007F8FF0007F87F0007F07F0007F03F800FE03F800FE01F800FC00FC01F8007F07F0001FF
FC00003FE0001D1B7E9A22>I<FFE1FE0000FFE7FF8000FFFE07E0000FF803F0000FF001F8000F
E000FC000FE000FE000FE000FF000FE0007F000FE0007F000FE0007F800FE0007F800FE0007F80
0FE0007F800FE0007F800FE0007F800FE0007F800FE0007F000FE000FF000FE000FF000FE000FE
000FE001FC000FF001F8000FF803F0000FFE0FE0000FEFFF80000FE1FC00000FE00000000FE000
00000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0000000FFFE
000000FFFE000000FFFE00000021277E9A26>I<FFC1F0FFC7FCFFCE3E0FD87F0FD87F0FF07F0F
F03E0FF01C0FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000F
E0000FE0000FE0000FE0000FE000FFFF00FFFF00FFFF00181B7E9A1C>114
D<03FE300FFFF01E03F03800F0700070F00070F00070F80070FE0000FFE0007FFE007FFF803FFF
E01FFFF007FFF800FFF80007FC6000FCE0007CE0003CF0003CF00038F80038FC0070FF01E0F7FF
C0C1FF00161B7E9A1B>I<00700000700000700000700000F00000F00000F00001F00003F00003
F00007F0001FFFF0FFFFF0FFFFF007F00007F00007F00007F00007F00007F00007F00007F00007
F00007F00007F00007F00007F00007F03807F03807F03807F03807F03807F03803F03803F87001
F86000FFC0001F8015267FA51B>I<FFE03FF800FFE03FF800FFE03FF8000FE003F8000FE003F8
000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE0
03F8000FE007F80007E007F80007E00FF80003F03BFF8001FFF3FF80003FC3FF80211B7D9A26>
I<FFFC0FFF00FFFC0FFF00FFFC0FFF0007F003C00003F803800001FC07800000FE0F000000FF1E
0000007F3C0000003FF80000001FF00000001FF00000000FF000000007F000000007F80000000F
FC0000001FFE0000001EFE0000003C7F000000783F800000F01FC00001E01FE00003C00FE00003
C007F000FFF01FFF80FFF01FFF80FFF01FFF80211B7F9A24>120 D<FFFE03FF80FFFE03FF80FF
FE03FF800FF000780007F000700007F800F00003F800E00003FC01E00001FC01C00001FC01C000
00FE03800000FE03800000FF078000007F070000007F8F0000003F8E0000003FCE0000001FDC00
00001FDC0000000FF80000000FF80000000FF800000007F000000007F000000003E000000003E0
00000001C000000001C000000003800000000380000038078000007C07000000FE0F000000FE0E
000000FE1C000000FE3C0000007C780000003FE00000000F8000000021277F9A24>I
E /Fo 50 123 df<00FE000381000601800E03801C01001C00001C00001C00001C00001C0000FF
FF801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C
03801C0380FF8FF0141A809915>12 D<60F0F07010101020204040040B7D830B>44
D<FFC0FFC00A0280880D>I<60F0F06004047D830B>I<0004000C00180018001800300030003000
600060006000C000C000C00180018001800300030003000600060006000C000C000C0018001800
1800300030003000600060006000C000C0000E257E9B13>I<07E01C38381C300C700E60066006
E007E007E007E007E007E007E007E007E007E00760066006700E300C381C1C3807E010187F9713
>I<03000700FF0007000700070007000700070007000700070007000700070007000700070007
0007000700070007007FF80D187D9713>I<0F80106020304038803CC01CE01C401C003C003800
380070006000C001800100020004040804100430083FF87FF8FFF80E187E9713>I<07E0183820
1C601E700E201E001E001C001C0038007007E00038001C000E000F000FE00FE00FC00F400E601C
183807E010187F9713>I<001800180038007800F800B801380238023804380838183810382038
4038C038FFFF00380038003800380038003803FF10187F9713>I<30183FF03FE03F8020002000
2000200020002FC03060203000380018001C001C401CE01CE01C80184038403030E00F800E187E
9713>I<01F807040C06180E300E300070006000E000E3E0E418E80CF00EE006E007E007E00760
0760077006300E180C0C3807E010187F9713>I<07E01818300C2006600660067006780C3E181F
3007C003E00CF8307C601E600FC007C003C003C00360022004181807E010187F9713>56
D<07E01C303018700C600EE006E006E007E007E0076007700F3017182707C700070006000E000C
700C7018603030600F8010187F9713>I<003F0201C0C603002E0E001E1C000E1C000638000678
0002700002700002F00000F00000F00000F00000F00000F000007000027000027800023800041C
00041C00080E000803003001C0C0003F00171A7E991C>67 D<FFFF80000E00E0000E0070000E00
38000E001C000E000E000E000E000E0007000E0007000E0007800E0007800E0007800E0007800E
0007800E0007800E0007800E0007800E0007000E0007000E000F000E000E000E001C000E001C00
0E0078000E00E000FFFF8000191A7F991D>I<FFFFF80E00380E00180E00080E000C0E00040E00
040E00040E01000E01000E01000E03000FFF000E03000E01000E01000E01000E00000E00000E00
000E00000E00000E00000E00000E0000FFE000161A7F9919>70 D<FFE1FFC00E001C000E001C00
0E001C000E001C000E001C000E001C000E001C000E001C000E001C000E001C000E001C000FFFFC
000E001C000E001C000E001C000E001C000E001C000E001C000E001C000E001C000E001C000E00
1C000E001C000E001C00FFE1FFC01A1A7F991D>72 D<FF801C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF80091A7E99
0E>I<FF0000FF0F0000F00F0000F00B8001700B80017009C0027009C0027009C0027008E00470
08E00470087008700870087008700870083810700838107008381070081C2070081C2070080E40
70080E4070080E40700807807008078070080300701C030070FF8307FF201A7F9923>77
D<FE007FC00F000E000F0004000B80040009C0040009C0040008E0040008700400087004000838
0400081C0400081C0400080E04000807040008038400080384000801C4000800E4000800E40008
00740008003C0008003C0008001C0008000C001C000C00FF8004001A1A7F991D>I<007F000001
C1C000070070000E0038001C001C003C001E0038000E0078000F0070000700F0000780F0000780
F0000780F0000780F0000780F0000780F0000780F000078078000F0078000F0038000E003C001E
001C001C000E0038000700700001C1C000007F0000191A7E991E>I<FFFF800E01E00E00700E00
780E00380E003C0E003C0E003C0E003C0E00380E00780E00700E01E00FFF800E00000E00000E00
000E00000E00000E00000E00000E00000E00000E00000E0000FFE000161A7F991A>I<FFFF0000
0E01C0000E0070000E0078000E003C000E003C000E003C000E003C000E003C000E0078000E0070
000E01C0000FFF00000E0380000E00C0000E00E0000E0070000E0070000E0070000E0078000E00
78000E0078000E0078400E003C400E001C80FFE00F001A1A7F991C>82 D<0FC21836200E6006C0
06C002C002C002E00070007E003FE01FF803FC007E000E00070003800380038003C002C006E004
D81887E0101A7E9915>I<7FFFFF00701C0700401C0100401C0100C01C0180801C0080801C0080
801C0080001C0000001C0000001C0000001C0000001C0000001C0000001C0000001C0000001C00
00001C0000001C0000001C0000001C0000001C0000001C0000001C0000001C000003FFE000191A
7F991C>I<FFE07FC00E000E000E0004000E0004000E0004000E0004000E0004000E0004000E00
04000E0004000E0004000E0004000E0004000E0004000E0004000E0004000E0004000E0004000E
0004000E0004000600080007000800030010000180200000E0C000003F00001A1A7F991D>I<1F
C000387000383800101C00001C00001C0003FC001E1C00381C00701C00E01C00E01C80E01C80E0
3C80705F801F8F0011107F8F13>97 D<FC00001C00001C00001C00001C00001C00001C00001C00
001C00001C00001CFC001D07001E03801C01C01C00C01C00E01C00E01C00E01C00E01C00E01C00
E01C01C01C01801E030019060010F800131A809915>I<07F81C1C381C70087000E000E000E000
E000E000E0007000700438081C1807E00E107F8F11>I<003F0000070000070000070000070000
070000070000070000070000070003E7000C1700180F00300700700700E00700E00700E00700E0
0700E00700E00700600700700700380F001C370007C7E0131A7F9915>I<07C01C303018701860
0CE00CFFFCE000E000E000E0006000700438081C1807E00E107F8F11>I<01F007180E381C101C
001C001C001C001C001C00FFC01C001C001C001C001C001C001C001C001C001C001C001C001C00
1C00FF800D1A80990C>I<0FCF001871803030007038007038007038007038003030001860002F
C0006000006000007000003FF0003FFC001FFE00600F00C00300C00300C00300C0030060060038
1C0007E00011187F8F13>I<FC00001C00001C00001C00001C00001C00001C00001C00001C0000
1C00001C7C001D87001E03801E03801C03801C03801C03801C03801C03801C03801C03801C0380
1C03801C03801C0380FF9FF0141A809915>I<183C3C18000000000000FC1C1C1C1C1C1C1C1C1C
1C1C1C1C1CFF081A80990A>I<FC00001C00001C00001C00001C00001C00001C00001C00001C00
001C00001C1FC01C0F001C0C001C18001C20001C40001CE0001DE0001E70001C78001C38001C1C
001C1E001C0F001C0F80FF9FE0131A809914>107 D<FC001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF80091A8099
0A>I<FC7C1F001D8E63801E0781C01E0781C01C0701C01C0701C01C0701C01C0701C01C0701C0
1C0701C01C0701C01C0701C01C0701C01C0701C01C0701C0FF9FE7F81D107F8F20>I<FC7C001D
87001E03801E03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C
0380FF9FF01410808F15>I<07E01C38300C700E6006E007E007E007E007E007E0076006700E38
1C1C3807E010107F8F13>I<FCFC001D07001E03801C01C01C01C01C00E01C00E01C00E01C00E0
1C00E01C00E01C01C01C01801E03001D06001CF8001C00001C00001C00001C00001C00001C0000
FF80001317808F15>I<FC781D9C1E1C1E081C001C001C001C001C001C001C001C001C001C001C
00FF800E10808F0F>114 D<1F2060E04020C020C020F0007F003FC01FE000F080708030C030C0
20F0408F800C107F8F0F>I<0800080008000800180018003800FFC03800380038003800380038
0038003800382038203820382018201C4007800B177F960F>I<FC1F801C03801C03801C03801C
03801C03801C03801C03801C03801C03801C03801C03801C07800C07800E0B8003F3F01410808F
15>I<FF0F803C07001C06001C04001C04000E08000E080007100007100007100003A00003A000
01C00001C00001C00000800011107F8F14>I<FE7F1F80381C07003C1C06001C0C04001C0E0400
0E1608000E1708000E170800072310000723900007A3900003C1A00003C1E0000180C0000180C0
000180C00019107F8F1C>I<FF0F803C07001C06001C04001C04000E08000E0800071000071000
07100003A00003A00001C00001C00001C000008000008000010000010000E10000E20000E40000
78000011177F8F14>121 D<FFF8E070C07080E081C081C00380070007000E041C041C04380870
087038FFF80E107F8F11>I E /Fp 80 125 df<001F83E000F06E3001C078780380F8780300F0
3007007000070070000700700007007000070070000700700007007000FFFFFF80070070000700
700007007000070070000700700007007000070070000700700007007000070070000700700007
0070000700700007007000070070000700700007007000070070003FE3FF001D20809F1B>11
D<003F0000E0C001C0C00381E00701E00701E0070000070000070000070000070000070000FFFF
E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700
E00700E00700E00700E00700E00700E03FC3FC1620809F19>I<003FE000E0E001C1E00381E007
00E00700E00700E00700E00700E00700E00700E00700E0FFFFE00700E00700E00700E00700E007
00E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E007
00E03FE7FC1620809F19>I<001F81F80000F04F040001C07C06000380F80F000300F00F000700
F00F00070070000007007000000700700000070070000007007000000700700000FFFFFFFF0007
007007000700700700070070070007007007000700700700070070070007007007000700700700
070070070007007007000700700700070070070007007007000700700700070070070007007007
00070070070007007007003FE3FE3FE02320809F26>I<FFFF10017D9A17>22
D<7038F87CFC7EFC7E743A0402040204020804080410081008201040200F0E7F9F17>34
D<70F8FCFC74040404080810102040060E7C9F0D>39 D<0040008001000300060004000C001800
180038003000300070006000600060006000E000E000E000E000E000E000E000E000E000E000E0
00E00060006000600060007000300030003800180018000C000400060003000100008000400A2E
7BA112>I<8000400020003000180008000C000600060007000300030003800180018001800180
01C001C001C001C001C001C001C001C001C001C001C001C0018001800180018003800300030007
00060006000C000800180030002000400080000A2E7EA112>I<00030000000300000003000000
030000000300000003000000030000000300000003000000030000000300000003000000030000
0003000000030000FFFFFFFCFFFFFFFC0003000000030000000300000003000000030000000300
000003000000030000000300000003000000030000000300000003000000030000000300001E20
7E9A23>43 D<70F0F8F878080808101010202040050E7C840D>I<FFF0FFF00C02808A0F>I<70F8
F8F87005057C840D>I<03F0000E1C001C0E00180600380700700380700380700380700380F003
C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C07003
807003807003807807803807001806001C0E000E1C0003F000121F7E9D17>48
D<008003800F80F380038003800380038003800380038003800380038003800380038003800380
03800380038003800380038003800380038007C0FFFE0F1E7C9D17>I<03F0000C1C00100E0020
0700400780800780F007C0F803C0F803C0F803C02007C00007C0000780000780000F00000E0000
1C0000380000700000600000C0000180000300000600400C00401800401000803FFF807FFF80FF
FF80121E7E9D17>I<03F0000C1C00100E00200F00780F80780780780780380F80000F80000F00
000F00001E00001C0000700007F000003C00000E00000F000007800007800007C02007C0F807C0
F807C0F807C0F00780400780400F00200E00183C0007F000121F7E9D17>I<000600000600000E
00000E00001E00002E00002E00004E00008E00008E00010E00020E00020E00040E00080E00080E
00100E00200E00200E00400E00C00E00FFFFF0000E00000E00000E00000E00000E00000E00000E
0000FFE0141E7F9D17>I<1803001FFE001FFC001FF8001FE00010000010000010000010000010
000010000011F000161C00180E001007001007800003800003800003C00003C00003C07003C0F0
03C0F003C0E00380400380400700200600100C0008380007E000121F7E9D17>I<007C00018200
0701000E03800C0780180780380300380000780000700000700000F1F000F21C00F40600F80700
F80380F80380F003C0F003C0F003C0F003C0F003C07003C07003C0700380380380380700180700
0C0E00061C0001F000121F7E9D17>I<4000007FFFE07FFFC07FFFC04000808001008001008002
0000040000040000080000100000100000200000200000600000600000E00000C00001C00001C0
0001C00001C00003C00003C00003C00003C00003C00003C00003C000018000131F7E9D17>I<03
F0000C0C001006003003002001806001806001806001807001807803003E03003F06001FC8000F
F00003F80007FC000C7E00103F00300F806007806001C0C001C0C000C0C000C0C000C0C0008060
01802001001002000C0C0003F000121F7E9D17>I<03F0000E18001C0C00380600380700700700
700380F00380F00380F003C0F003C0F003C0F003C0F003C07007C07007C03807C0180BC00E13C0
03E3C0000380000380000380000700300700780600780E00700C002018001070000FC000121F7E
9D17>I<70F8F8F8700000000000000000000070F8F8F87005147C930D>I<70F8F8F87000000000
00000000000070F0F8F878080808101010202040051D7C930D>I<7FFFFFF8FFFFFFFC00000000
00000000000000000000000000000000000000000000000000000000FFFFFFFC7FFFFFF81E0C7E
9023>61 D<0FE0103C601E400EE00FF00FF00F600F001E001C00380070006000C0008000800100
0100010001000100010000000000000000000000038007C007C007C0038010207E9F15>63
D<000100000003800000038000000380000007C0000007C0000007C0000009E0000009E0000009
E0000010F0000010F0000010F00000207800002078000020780000403C0000403C0000C03E0000
801E0000801E0001FFFF0001000F0001000F00020007800200078002000780040003C0040003C0
0C0003C01E0003E0FF801FFE1F207F9F22>65 D<FFFFE0000F0078000F001E000F001E000F000F
000F000F800F000F800F000F800F000F800F000F800F000F000F001F000F001E000F007C000FFF
F0000F007C000F001F000F000F800F0007C00F0003C00F0003E00F0003E00F0003E00F0003E00F
0003E00F0003C00F0007C00F0007800F000F000F003E00FFFFF0001B1F7E9E20>I<000FE01000
381C3000E0027003C00170078000F00F0000701E0000701E0000303C0000303C0000107C000010
78000010F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8000000F80000
00780000007C0000103C0000103C0000101E0000201E0000200F0000200780004003C0008000E0
030000380C00000FF0001C217E9F21>I<FFFFF80007801E0007800780078003C0078001E00780
00F00780007007800078078000780780003C0780003C0780003C0780003E0780003E0780003E07
80003E0780003E0780003E0780003E0780003E0780003C0780003C0780007C0780007807800078
078000F0078001E0078003C00780078007801E00FFFFF8001F1F7F9E23>I<FFFFFF800F000F80
0F0003800F0001800F0000800F0000C00F0000400F0000400F0000400F0040400F0040000F0040
000F00C0000F01C0000FFFC0000F01C0000F00C0000F0040000F0040000F0040000F0000200F00
00200F0000200F0000400F0000400F0000400F0000C00F0001C00F0003800F000F80FFFFFF801B
1F7E9E1F>I<FFFFFF8007800780078001800780018007800080078000C0078000400780004007
80004007800040078020000780200007802000078060000780E00007FFE0000780E00007806000
078020000780200007802000078000000780000007800000078000000780000007800000078000
000780000007C00000FFFE00001A1F7F9E1E>I<000FE01000381C3000E0027003C00170078000
F00F0000701E0000701E0000303C0000303C0000107C00001078000010F8000000F8000000F800
0000F8000000F8000000F8000000F8000000F8003FFEF80001F0780000F07C0000F03C0000F03C
0000F01E0000F01E0000F00F0000F0078000F003C0017000E0023000380C10000FF0001F217E9F
24>I<FFF07FF80F0007800F0007800F0007800F0007800F0007800F0007800F0007800F000780
0F0007800F0007800F0007800F0007800F0007800FFFFF800F0007800F0007800F0007800F0007
800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F00
07800F000780FFF07FF81D1F7E9E22>I<FFF00F000F000F000F000F000F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00FF
F00C1F7E9E10>I<07FFC0003E00001E00001E00001E00001E00001E00001E00001E00001E0000
1E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E0020
1E00F81E00F81E00F81E00F01C00403C006038001070000FC00012207F9E17>I<FFF007FC0F00
03E00F0001800F0001000F0002000F0004000F0008000F0010000F0020000F0040000F0080000F
0100000F0300000F0780000F0F80000F13C0000F21E0000F41E0000F80F0000F0078000F007800
0F003C000F001E000F001E000F000F000F0007800F0007800F0003C00F0003E00F0003F0FFF01F
FE1F1F7E9E23>I<FFF8000F80000F00000F00000F00000F00000F00000F00000F00000F00000F
00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00020F00020F00020F
00020F00060F00040F00040F000C0F001C0F007CFFFFFC171F7E9E1C>I<FF800007FE07800007
C007800007C005C0000BC005C0000BC004E00013C004E00013C004E00013C004700023C0047000
23C004380043C004380043C004380043C0041C0083C0041C0083C0040E0103C0040E0103C0040E
0103C004070203C004070203C004070203C004038403C004038403C00401C803C00401C803C004
01C803C00400F003C00400F003C004006003C01F006003C0FFE0607FFE271F7F9E2A>I<FF000F
F80F8003E00F8000800BC0008009E0008009E0008008F000800878008008780080083C0080081E
0080081E0080080F008008078080080780800803C0800801E0800801E0800800F0800800788008
00788008003C8008001E8008001E8008000F80080007800800078008000380080001803E000180
FF8000801D1F7E9E22>I<001FE0000070380001C00E0003800700070003800F0003C01E0001E0
3C0000F03C0000F07C0000F87C0000F878000078F800007CF800007CF800007CF800007CF80000
7CF800007CF800007CF800007CF800007C780000787C0000F87C0000F83C0000F03E0001F01E00
01E00F0003C0070003800380070001E01E0000703800001FE0001E217E9F23>I<FFFFE0000F00
7C000F001E000F000F000F0007800F0007800F0007C00F0007C00F0007C00F0007C00F0007800F
0007800F000F000F001E000F007C000FFFE0000F0000000F0000000F0000000F0000000F000000
0F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F000000FFF000
001A1F7E9E1F>I<FFFF80000F00F0000F003C000F001E000F000F000F000F000F000F800F000F
800F000F800F000F800F000F000F000F000F001E000F003C000F00F0000FFF80000F01C0000F00
70000F0070000F0038000F003C000F003C000F003C000F003E000F003E000F003E000F003E040F
003F040F001F040F000F08FFF00788000001F01E207E9E21>82 D<03F0400C0CC01803C03001C0
6000C06000C0E000C0E00040E00040E00040F00000F800007C00007F80003FF8001FFF0007FF80
00FFC0001FE00003E00001E00000F0000070800070800070800070800070C00060C000E0E000C0
F80180C6030081FC0014217E9F19>I<7FFFFFE0780F01E0600F0060400F0020400F0020C00F00
30800F0010800F0010800F0010800F0010000F0000000F0000000F0000000F0000000F0000000F
0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F000000
0F0000000F0000000F0000000F0000001F800003FFFC001C1F7E9E21>I<FFF00FF80F0003E00F
0000800F0000800F0000800F0000800F0000800F0000800F0000800F0000800F0000800F000080
0F0000800F0000800F0000800F0000800F0000800F0000800F0000800F0000800F0000800F0000
800F0000800F0000800700010007800100038001000380020001C0040000E0080000383000000F
C0001D207E9E22>I<FFF07FF81FF01F000FC007C00F00078001800F00078001000F0007C00100
0F8007C00300078007C00200078009E0020007C009E0020003C009E0040003C019F0040003C010
F0040001E010F0080001E010F0080001E02078080000F02078100000F02078100000F0403C1000
0078403C20000078403C20000078801E2000007C801E6000003C801E4000003D000F4000003F00
0F4000001F000F8000001F000F8000001E00078000000E00070000000E00070000000C00030000
0004000200002C207F9E2F>87 D<FFF001FF1F8000780F8000600780006007C0004003C0008003
E0008001F0010000F0010000F80200007C0600003C0400003E0800001E0800001F1000000FB000
0007A0000007E0000003C0000003C0000003C0000003C0000003C0000003C0000003C0000003C0
000003C0000003C0000003C0000003C000003FFC00201F7F9E22>89 D<FFFFC0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FFFF082D7CA1
0D>91 D<080410082010201040204020804080408040B85CFC7EFC7E7C3E381C0F0E7A9F17>I<
FFFF03030303030303030303030303030303030303030303030303030303030303030303030303
03030303FFFF082D80A10D>I<1FE000303000781800781C00300E00000E00000E00000E0000FE
00078E001E0E00380E00780E00F00E10F00E10F00E10F01E10781E103867200F83C014147E9317
>97 D<1C0000FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0000
1C7C001D87001E01801E00C01C00E01C00701C00701C00781C00781C00781C00781C00781C0078
1C00701C00F01C00E01E00C01A0180198700107C0015207E9F19>I<01FC000706001C0F00380F
00380600780000700000F00000F00000F00000F00000F00000F000007000007800003800803800
801C010007060001F80011147F9314>I<0001C0000FC00001C00001C00001C00001C00001C000
01C00001C00001C00001C00001C001F1C0070DC00C03C01801C03801C07801C07001C0F001C0F0
01C0F001C0F001C0F001C0F001C07001C07001C03801C01803C00C03C0070DC001F1F815207F9F
19>I<03F0000E1C001C0E00380700380700700700700380F00380F00380FFFF80F00000F00000
F000007000007000003800803800801C010007060001F80011147F9314>I<007C01C6030F070F
0E060E000E000E000E000E000E000E00FFF00E000E000E000E000E000E000E000E000E000E000E
000E000E000E000E000E000E000E007FE01020809F0E>I<0000E003E3300E3C301C1C30380E00
780F00780F00780F00780F00780F00380E001C1C001E380033E000200000200000300000300000
3FFE001FFF801FFFC03001E0600070C00030C00030C00030C000306000603000C01C038003FC00
141F7F9417>I<1C0000FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00
001C00001C7C001C86001D03001E03801E03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C03801C03801C0380FF8FF014207E9F19>I<38007C007C007C
0038000000000000000000000000001C00FC001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C00FF80091F7F9E0C>I<00E001F001F001F000E0000000000000
000000000000007007F000F0007000700070007000700070007000700070007000700070007000
7000700070007000700070007000706070F060F0C061803F000C28829E0E>I<1C0000FC00001C
00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C1FE01C07801C06001C
04001C08001C10001C20001C60001CE0001DF0001E70001C38001C3C001C1C001C0E001C0F001C
07001C07801C07C0FF9FF014207E9F18>I<1C00FC001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C00FF8009207F9F0C>I<1C3E03E000FCC30C30001D039038001E01E01C001E01E01C001C01C0
1C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01
C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00FF8FF8FF8021147E9326>
I<1C7C00FC86001D03001E03801E03801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C03801C0380FF8FF014147E9319>I<01F800070E001C038038
01C03801C07000E07000E0F000F0F000F0F000F0F000F0F000F0F000F07000E07000E03801C038
01C01C0380070E0001F80014147F9317>I<1C7C00FD87001E01801E01C01C00E01C00F01C0070
1C00781C00781C00781C00781C00781C00781C00701C00F01C00E01E01C01E03801D87001C7C00
1C00001C00001C00001C00001C00001C00001C00001C0000FF8000151D7E9319>I<01F040070C
C00E02C01C03C03801C07801C07001C0F001C0F001C0F001C0F001C0F001C0F001C07001C07801
C03801C01C03C00C05C00709C001F1C00001C00001C00001C00001C00001C00001C00001C00001
C0000FF8151D7F9318>I<1CF0FD181E3C1E3C1E181C001C001C001C001C001C001C001C001C00
1C001C001C001C001C00FFC00E147E9312>I<0FC830386018C008C008C008E0007C003FE01FF0
07F8003C800E8006C006C006C004E00CD81887E00F147F9312>I<020002000200060006000E00
0E003E00FFF80E000E000E000E000E000E000E000E000E000E000E000E040E040E040E040E0407
08030801F00E1C7F9B12>I<1C0380FC1F801C03801C03801C03801C03801C03801C03801C0380
1C03801C03801C03801C03801C03801C03801C03801C07800C0780061B8003E3F014147E9319>
I<FF83F83E00E01C00C00E00800E00800E008007010007010007830003820003820001C40001C4
0001E40000E80000E80000700000700000700000200015147F9318>I<FF9FE1FC3C0780701C03
00601C0380200E0380400E0380400E03C0400704C0800704E0800704E080038861000388710003
88710001D0320001D03A0001D03E0000E01C0000E01C0000601800004008001E147F9321>I<FF
87F81E03C00E01800E030007020003840001C80001D80000F00000700000780000F800009C0001
0E00020E000607000403800C03C03C03E0FE07FC16147F9318>I<FF83F83E00E01C00C00E0080
0E00800E008007010007010007830003820003820001C40001C40001E40000E80000E800007000
007000007000002000002000004000004000004000F08000F08000F100006200003C0000151D7F
9318>I<7FFF700E600E401C40384078407000E001E001C00380078007010E011E011C03380270
06700EFFFE10147F9314>I<FFFFFC1601808C17>I<FFFFFFFFFFF02C01808C2D>I
E /Fq 15 117 df<00700000F00007F000FFF000F9F00001F00001F00001F00001F00001F00001
F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001
F00001F00001F00001F0007FFFC07FFFC0121D7D9C1A>49 D<03FC001FFF80381FC07C07E0FE03
F0FE03F0FE03F8FE01F87C01F83801F80003F80003F00003F00007E0000FC0000F00001E00003C
0000700000E00001C0180380180600180C00381FFFF03FFFF07FFFF0FFFFF0FFFFF0151D7E9C1A
>I<03FC000FFF801C0FC03C07E07E03F07E03F07E03F07E07F03C07E00007E0000FC0003F8003
FE0003FC00000F800007C00003E00003F00003F83803F87C03F8FE03F8FE03F8FE03F0FC03F078
07E03C0FC01FFF8003FC00151D7E9C1A>I<0001C00003C00007C00007C0000FC0001FC0003BC0
0073C00063C000C3C00183C00383C00703C00E03C00C03C01803C03803C07003C0E003C0FFFFFE
FFFFFE0007C00007C00007C00007C00007C00007C000FFFE00FFFE171D7F9C1A>I<387CFEFEFE
7C38000000000000387CFEFEFE7C3807147C930F>58 D<0000E000000000E000000001F0000000
01F000000001F000000003F800000003F800000006FC00000006FC0000000EFE0000000C7E0000
000C7E000000183F000000183F000000303F800000301F800000701FC00000600FC00000600FC0
0000C007E00000FFFFE00001FFFFF000018003F000038003F800030001F800030001F800060000
FC00060000FC000E0000FE00FFE00FFFE0FFE00FFFE0231F7E9E28>65 D<7FFFFFFC7FFFFFFC7C
07E07C7007E01C6007E00C6007E00CE007E00EC007E006C007E006C007E006C007E0060007E000
0007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0
000007E0000007E0000007E0000007E0000007E0000007E00003FFFFC003FFFFC01F1E7E9D24>
84 D<07FC001FFF803F07C03F03E03F01F03F01F00C01F00001F0003FF007FDF01F81F03E01F0
7C01F0F801F0F801F0F801F0FC02F07E0CF03FF87E0FE03E17147F9319>97
D<FF0000FF00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F1F
C01F7FF01FE0F81F807C1F007E1F003E1F003E1F003F1F003F1F003F1F003F1F003F1F003F1F00
3E1F003E1F007C1F807C1EC1F81C7FE0181F8018207E9F1D>I<01FE0007FF801F0FC03E0FC03E
0FC07C0FC07C0300FC0000FC0000FC0000FC0000FC0000FC00007C00007E00003E00603F00C01F
81C007FF0001FC0013147E9317>I<1C003E007F007F007F003E001C0000000000000000000000
0000FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FF
E0FFE00B217EA00E>105 D<FF00FF001F001F001F001F001F001F001F001F001F001F001F001F
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE00B20
7E9F0E>108 D<FE3E00FE7F801ECFC01E8FC01E8FC01F8FC01F03001F00001F00001F00001F00
001F00001F00001F00001F00001F00001F00001F0000FFF000FFF00012147E9316>114
D<0FE63FFE701E600EE006E006F800FFC07FF83FFC1FFE03FE001FC007C007E007F006F81EFFFC
C7F010147E9315>I<0300030003000300070007000F000F003F00FFFCFFFC1F001F001F001F00
1F001F001F001F001F001F001F061F061F061F061F060F8C07F803F00F1D7F9C14>I
E /Fr 14 118 df<3078FCFC7830060676851A>46 D<003E0001FF8003FFC007C1E00F00E01E0F
703C3FF0387FF07070F870E07870E078E1C038E1C038E1C038E1C038E1C038E1C038E1C038E1C0
3870E07070E0707070E0387FE03C3FC01E0F000F003807C0F803FFF001FFE0003F00151E7E9D1A
>64 D<1FF0003FFC007FFE00780F00300700000380000380007F8007FF801FFF803F8380780380
700380E00380E00380E00380700780780F803FFFFC1FFDFC07F0FC16157D941A>97
D<00FF8003FFC00FFFE01F01E03C00C0780000700000700000E00000E00000E00000E00000E000
007000007000007800703C00701F01F00FFFE003FFC000FE0014157D941A>99
D<000FC0001FC0000FC00001C00001C00001C00001C00001C00001C001F1C007FDC00FFFC01E0F
C03C07C07803C07001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C07003C07003C03807
C03E0FC01FFFF807FDFC01F1F8161E7E9D1A>I<01F80007FF000FFF801E07C03C01C07800E070
00E0E00070E00070FFFFF0FFFFF0FFFFF0E000007000007000007800703C00701F01F00FFFE003
FF8000FE0014157D941A>I<7E0000FE00007E00000E00000E00000E00000E00000E00000E0000
0E3E000EFF800FFFC00FC1C00F80E00F00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E0
0E00E00E00E00E00E00E00E00E00E07FC3FCFFE7FE7FC3FC171E7F9D1A>104
D<7FE000FFE0007FE00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
0000E0007FFFC0FFFFE07FFFC0131E7D9D1A>108 D<7CE0E000FFFBF8007FFFF8001F1F1C001E
1E1C001E1E1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C00
1C1C1C001C1C1C001C1C1C001C1C1C007F1F1F00FFBFBF807F1F1F00191580941A>I<01F00007
FC001FFF003E0F803C07807803C07001C0E000E0E000E0E000E0E000E0E000E0E000E0F001E070
01C07803C03C07803E0F801FFF0007FC0001F00013157D941A>111 D<7F81F8FF8FFC7F9FFE03
FE1E03F80C03E00003E00003C00003800003800003800003800003800003800003800003800003
80000380007FFF00FFFF007FFF0017157F941A>114 D<07FB801FFF807FFF80780780E00380E0
0380E003807800007FC0001FFC0007FE00003F800007806001C0E001C0E001C0F003C0FC0780FF
FF00EFFE00E3F80012157C941A>I<0180000380000380000380000380000380000380007FFFE0
FFFFE0FFFFE0038000038000038000038000038000038000038000038000038000038000038070
03807003807003807001C1E001FFE000FF80003F00141C7F9B1A>I<7E07E0FE0FE07E07E00E00
E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E01
E00F03E007FFFC03FFFE00FCFC17157F941A>I E /Fs 39 122 df<70F8FCFC74040404040808
10102040060F7C840E>44 D<70F8F8F87005057C840E>46 D<008003800F80F380038003800380
038003800380038003800380038003800380038003800380038003800380038003800380038003
80038003800380038007C0FFFE0F217CA018>49 D<03F0000C1C001007002007804003C04003C0
8003E0F003E0F801E0F801E0F801E02003E00003E00003C00003C0000780000700000E00001C00
00180000300000600000C0000180000100000200200400200800201800603000403FFFC07FFFC0
FFFFC013217EA018>I<000300000300000700000700000F000017000017000027000067000047
00008700018700010700020700060700040700080700080700100700200700200700400700C007
00FFFFF8000700000700000700000700000700000700000700000F80007FF015217FA018>52
D<007E0001C1000300800601C00C03C01C03C0180180380000380000780000700000700000F0F8
00F30C00F40600F40300F80380F801C0F001C0F001E0F001E0F001E0F001E0F001E07001E07001
E07001E03801C03801C01803801C03000C0600070C0001F00013227EA018>54
D<4000006000007FFFE07FFFC07FFFC0400080C001008001008002008002000004000008000008
0000100000200000200000600000400000C00000C00001C00001C0000180000380000380000380
0003800007800007800007800007800007800007800007800003000013237DA118>I<01F00006
0C000C0600180700380380700380700380F001C0F001C0F001C0F001E0F001E0F001E0F001E0F0
01E07001E07003E03803E01805E00C05E00619E003E1E00001C00001C00001C000038000038030
0380780700780600700C002018001030000FC00013227EA018>57 D<0001800000018000000180
000003C0000003C0000003C0000005E0000005E0000009F0000008F0000008F000001078000010
78000010780000203C0000203C0000203C0000401E0000401E0000C01F0000800F0000800F0001
FFFF800100078001000780020003C0020003C0020003C0040001E0040001E0040001E0080000F0
1C0000F03E0001F8FF800FFF20237EA225>65 D<0007E0100038183000E0063001C00170038000
F0070000F00E0000701E0000701C0000303C0000303C0000307C0000107800001078000010F800
0000F8000000F8000000F8000000F8000000F8000000F8000000F800000078000000780000107C
0000103C0000103C0000101C0000201E0000200E000040070000400380008001C0010000E00200
00381C000007E0001C247DA223>67 D<FFFFF0000F801E000780070007800380078001C0078000
E0078000F007800078078000780780007C0780003C0780003C0780003C0780003E0780003E0780
003E0780003E0780003E0780003E0780003E0780003E0780003E0780003C0780003C0780007C07
80007807800078078000F0078000E0078001E0078003C0078007000F801E00FFFFF0001F227EA1
25>I<FFC00003FF0FC00003F007C00003E005E00005E005E00005E004F00009E004F00009E004
F00009E004780011E004780011E004780011E0043C0021E0043C0021E0043C0021E0041E0041E0
041E0041E0040F0081E0040F0081E0040F0081E004078101E004078101E004078101E00403C201
E00403C201E00401E401E00401E401E00401E401E00400F801E00400F801E00400F801E0040070
01E00E007001E01F007003F0FFE0203FFF28227EA12D>77 D<FF8007FF07C000F807C0007005E0
002004F0002004F0002004780020047C0020043C0020041E0020041F0020040F00200407802004
0780200403C0200401E0200401E0200400F0200400F8200400782004003C2004003E2004001E20
04000F2004000F20040007A0040003E0040003E0040001E0040001E0040000E00E0000601F0000
60FFE0002020227EA125>I<FFFFE000000F803C000007800E00000780078000078007C0000780
03C000078003E000078003E000078003E000078003E000078003E000078003C000078007C00007
8007800007800E000007803C000007FFE000000780700000078038000007801C000007801E0000
07800E000007800F000007800F000007800F000007800F000007800F800007800F800007800F80
0007800F808007800FC080078007C0800FC003C100FFFC01E2000000007C0021237EA124>82
D<03F0200C0C601802603001E07000E0600060E00060E00060E00020E00020E00020F00000F000
007800007F00003FF0001FFE000FFF0003FF80003FC00007E00001E00000F00000F00000708000
70800070800070800070C00060C00060E000C0F000C0C80180C6070081FC0014247DA21B>I<7F
FFFFF87807807860078018400780084007800840078008C007800C800780048007800480078004
800780040007800000078000000780000007800000078000000780000007800000078000000780
000007800000078000000780000007800000078000000780000007800000078000000780000007
80000007800000078000000FC00001FFFE001E227EA123>I<FFFC07FF0FC000F8078000700780
002007800020078000200780002007800020078000200780002007800020078000200780002007
800020078000200780002007800020078000200780002007800020078000200780002007800020
0780002007800020078000200380004003C0004003C0004001C0008000E0008000600100003006
00001C08000003F00020237EA125>I<FFF0007FC01F80001F000F80000C00078000080007C000
080003C000100001E000200001F000200000F000400000F800C000007C008000003C010000003E
010000001E020000001F060000000F84000000078800000007D800000003D000000003E0000000
01E000000001E000000001E000000001E000000001E000000001E000000001E000000001E00000
0001E000000001E000000001E000000001E000000003E00000003FFE000022227FA125>89
D<1FE000303800780C00780E0030070000070000070000070000FF0007C7001E07003C07007807
00700700F00708F00708F00708F00F087817083C23900FC1E015157E9418>97
D<0E0000FE00001E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00
000E00000E1F000E61C00E80600F00300E00380E003C0E001C0E001E0E001E0E001E0E001E0E00
1E0E001E0E001E0E001C0E003C0E00380F00700C80600C41C0083F0017237FA21B>I<01FE0007
03000C07801C0780380300780000700000F00000F00000F00000F00000F00000F00000F0000070
00007800403800401C00800C010007060001F80012157E9416>I<0000E0000FE00001E00000E0
0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E001F8E00704E00C02E0
1C01E03800E07800E07000E0F000E0F000E0F000E0F000E0F000E0F000E0F000E07000E07800E0
3800E01801E00C02E0070CF001F0FE17237EA21B>I<01FC000707000C03801C01C03801C07801
E07000E0F000E0FFFFE0F00000F00000F00000F00000F000007000007800203800201C00400E00
8007030000FC0013157F9416>I<003E0000E30001C78003878003078007000007000007000007
0000070000070000070000070000070000FFF80007000007000007000007000007000007000007
00000700000700000700000700000700000700000700000700000700000700000700000780007F
F000112380A20F>I<0E0000FE00001E00000E00000E00000E00000E00000E00000E00000E0000
0E00000E00000E00000E00000E1F800E60C00E80E00F00700F00700E00700E00700E00700E0070
0E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E0070FFE7FF18237F
A21B>104 D<1C003E003E003E001C00000000000000000000000000000000000E007E001E000E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00FFC00A227FA1
0E>I<0E0000FE00001E00000E00000E00000E00000E00000E00000E00000E00000E00000E0000
0E00000E00000E03FC0E01F00E01C00E01800E02000E04000E08000E10000E38000EF8000F1C00
0E1E000E0E000E07000E07800E03C00E01C00E01E00E00F00E00F8FFE3FE17237FA21A>107
D<0E00FE001E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00FFE00B237FA20E>I<
0E1FC07F00FE60E183801E807201C00F003C00E00F003C00E00E003800E00E003800E00E003800
E00E003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E0038
00E00E003800E00E003800E00E003800E00E003800E0FFE3FF8FFE27157F942A>I<0E1F80FE60
C01E80E00F00700F00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00
700E00700E00700E00700E00700E0070FFE7FF18157F941B>I<01FC000707000C01801800C038
00E0700070700070F00078F00078F00078F00078F00078F00078F000787000707800F03800E01C
01C00E038007070001FC0015157F9418>I<0E1F00FE61C00E80600F00700E00380E003C0E003C
0E001E0E001E0E001E0E001E0E001E0E001E0E001E0E003C0E003C0E00380F00700E80E00E41C0
0E3F000E00000E00000E00000E00000E00000E00000E00000E00000E0000FFE000171F7F941B>
I<0E3CFE461E8F0F0F0F060F000E000E000E000E000E000E000E000E000E000E000E000E000E00
0F00FFF010157F9413>114 D<0F8830786018C018C008C008E008F0007F003FE00FF001F8003C
801C800C800CC00CC008E018D0308FC00E157E9413>I<02000200020002000600060006000E00
1E003E00FFFC0E000E000E000E000E000E000E000E000E000E000E000E040E040E040E040E040E
040708030801F00E1F7F9E13>I<0E0070FE07F01E00F00E00700E00700E00700E00700E00700E
00700E00700E00700E00700E00700E00700E00700E00700E00F00E00F006017003827800FC7F18
157F941B>I<FF80FE1E00781E00300E00200E00200700400700400780C003808003808001C100
01C10000E20000E20000E20000740000740000380000380000380000100017157F941A>I<FF8F
F87F3E01E03C1C01C0181C01E0180E01E0100E0260100E02701007027020070430200704382003
8438400388184003881C4001C81C8001D00C8001D00E8000F00F0000E0070000E0070000600600
0040020020157F9423>I<FF80FE1E00781E00300E00200E00200700400700400780C003808003
808001C10001C10000E20000E20000E20000740000740000380000380000380000100000100000
2000002000002000004000F04000F08000F180004300003C0000171F7F941A>121
D E /Ft 23 122 df<FFFFFFE00000FFFFFFFC000007E0007F000003E0000F800003E00003C000
03E00001E00003E00000F00003E00000780003E000003C0003E000001E0003E000001E0003E000
000F0003E000000F0003E000000F8003E00000078003E0000007C003E0000007C003E0000003C0
03E0000003C003E0000003E003E0000003E003E0000003E003E0000003E003E0000003E003E000
0003E003E0000003E003E0000003E003E0000003E003E0000003E003E0000003E003E0000003C0
03E0000003C003E0000007C003E0000007C003E00000078003E00000078003E000000F8003E000
000F0003E000001F0003E000001E0003E000003C0003E00000780003E00000F80003E00001F000
03E00003E00003E0000F800007E0003F0000FFFFFFFC0000FFFFFFE000002B317CB033>68
D<FFFFFFFFE0FFFFFFFFE007E0000FE003E00001E003E00000F003E000007003E000003003E000
003003E000001003E000001003E000001003E000001003E000000803E000000803E000000803E0
00400803E000400003E000400003E000400003E000400003E000C00003E000C00003E003C00003
FFFFC00003FFFFC00003E003C00003E000C00003E000C00003E000400003E000400003E0004000
03E000400003E000400003E000000003E000000003E000000003E000000003E000000003E00000
0003E000000003E000000003E000000003E000000003E000000003E000000003E000000007F000
0000FFFFC00000FFFFC0000025317DB02B>70 D<FFFFC00000FFFFC0000007F000000003E00000
0003E000000003E000000003E000000003E000000003E000000003E000000003E000000003E000
000003E000000003E000000003E000000003E000000003E000000003E000000003E000000003E0
00000003E000000003E000000003E000000003E000000003E000000003E000000003E000000003
E000000003E000000003E000000003E000000003E000002003E000002003E000002003E0000020
03E000004003E000004003E000004003E000004003E00000C003E00000C003E00001C003E00001
C003E00003C003E000078003E0001F8007E0007F80FFFFFFFF80FFFFFFFF8023317DB029>76
D<FFF00000007FF8FFF00000007FF807F00000007F0002F8000000BE0002F8000000BE0002F800
0000BE00027C0000013E00027C0000013E00023E0000023E00023E0000023E00023E0000023E00
021F0000043E00021F0000043E00021F0000043E00020F8000083E00020F8000083E00020F8000
083E000207C000103E000207C000103E000207C000103E000203E000203E000203E000203E0002
01F000403E000201F000403E000201F000403E000200F800803E000200F800803E000200F80080
3E0002007C01003E0002007C01003E0002007C01003E0002003E02003E0002003E02003E000200
3E02003E0002001F04003E0002001F04003E0002000F88003E0002000F88003E0002000F88003E
00020007D0003E00020007D0003E00020007D0003E00020003E0003E00020003E0003E00020003
E0003E00070001C0003E000F8001C0007F00FFF801C00FFFF8FFF800800FFFF835317CB03D>I<
FFFFFF000000FFFFFFF0000007E001FC000003E0003E000003E0000F800003E00007C00003E000
03E00003E00001E00003E00001F00003E00000F00003E00000F80003E00000F80003E00000F800
03E00000F80003E00000F80003E00000F80003E00000F00003E00001F00003E00001E00003E000
03C00003E00007800003E0000F000003E0003C000003E001F0000003FFFF00000003E001F00000
03E0007C000003E0001E000003E0000F800003E00007800003E00007C00003E00003E00003E000
03E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E000
03E00003E00003E00003E00003E00003E00003E00003E00803E00003E00803E00001E00803E000
01E00807F00000F010FFFF80007010FFFF80003860000000000F802D327CB031>82
D<FFFF8007FFC0FFFF8007FFC007F000007C0003E00000380003E00000100003E00000100003E0
0000100003E00000100003E00000100003E00000100003E00000100003E00000100003E0000010
0003E00000100003E00000100003E00000100003E00000100003E00000100003E00000100003E0
0000100003E00000100003E00000100003E00000100003E00000100003E00000100003E0000010
0003E00000100003E00000100003E00000100003E00000100003E00000100003E00000100003E0
0000100003E00000100003E00000100003E00000100003E00000100001E00000200001F0000020
0001F00000200000F00000400000F000004000007800008000003C00018000003C00010000001E
000600000007800C00000003E07800000000FFF0000000003F8000002A327CB032>85
D<00FE00000303C0000C00E00010007000100038003C003C003E001C003E001E003E001E000800
1E0000001E0000001E0000001E00000FFE0000FC1E0003E01E000F801E001F001E003E001E003C
001E007C001E00F8001E04F8001E04F8001E04F8003E04F8003E0478003E047C005E043E008F08
0F0307F003FC03E01E1F7D9E21>97 D<001FC00000F0300001C00C00078002000F0002000E000F
001E001F003C001F003C001F007C00040078000000F8000000F8000000F8000000F8000000F800
0000F8000000F8000000F8000000F8000000780000007C0000003C0000003C0000801E0000800E
0001000F0001000780020001C00C0000F03000001FC000191F7E9E1D>99
D<003F800000E0E0000380380007003C000E001E001E001E001C000F003C000F007C000F007800
0F8078000780F8000780F8000780FFFFFF80F8000000F8000000F8000000F8000000F8000000F8
000000780000007C0000003C0000003C0000801E0000800E0001000F0002000700020001C00C00
00F03000001FC000191F7E9E1D>101 D<0007E0001C1000383800707C00E07C01E07C01C03803
C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C000FFFFC0FF
FFC003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003
C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003
C00007E0007FFF007FFF0016327FB114>I<000000F0007F030801C1C41C0380E81C070070080F
0078001E003C001E003C003E003E003E003E003E003E003E003E003E003E003E003E001E003C00
1E003C000F007800070070000780E00009C1C000087F0000180000001800000018000000180000
00180000001C0000000E0000000FFFF80007FFFF0003FFFF800E000FC0180001E0300000F07000
0070E0000038E0000038E0000038E0000038E00000387000007070000070380000E01C0001C007
00070001C01C00003FE0001E2F7E9F21>I<0780000000FF80000000FF800000000F8000000007
800000000780000000078000000007800000000780000000078000000007800000000780000000
07800000000780000000078000000007800000000780000000078000000007800000000780FE00
000783078000078C03C000079001E00007A001E00007A000F00007C000F00007C000F000078000
F000078000F000078000F000078000F000078000F000078000F000078000F000078000F0000780
00F000078000F000078000F000078000F000078000F000078000F000078000F000078000F00007
8000F000078000F000078000F000078000F0000FC001F800FFFC1FFF80FFFC1FFF8021327EB125
>I<0F001F801F801F801F800F000000000000000000000000000000000000000000000007807F
807F800F8007800780078007800780078007800780078007800780078007800780078007800780
07800780078007800780078007800FC0FFF8FFF80D307EAF12>I<0780FF80FF800F8007800780
078007800780078007800780078007800780078007800780078007800780078007800780078007
800780078007800780078007800780078007800780078007800780078007800780078007800780
078007800FC0FFFCFFFC0E327EB112>108 D<0780FE001FC000FF83078060F000FF8C03C18078
000F9001E2003C0007A001E4003C0007A000F4001E0007C000F8001E0007C000F8001E00078000
F0001E00078000F0001E00078000F0001E00078000F0001E00078000F0001E00078000F0001E00
078000F0001E00078000F0001E00078000F0001E00078000F0001E00078000F0001E00078000F0
001E00078000F0001E00078000F0001E00078000F0001E00078000F0001E00078000F0001E0007
8000F0001E00078000F0001E00078000F0001E000FC001F8003F00FFFC1FFF83FFF0FFFC1FFF83
FFF0341F7E9E38>I<0780FE0000FF83078000FF8C03C0000F9001E00007A001E00007A000F000
07C000F00007C000F000078000F000078000F000078000F000078000F000078000F000078000F0
00078000F000078000F000078000F000078000F000078000F000078000F000078000F000078000
F000078000F000078000F000078000F000078000F000078000F000078000F0000FC001F800FFFC
1FFF80FFFC1FFF80211F7E9E25>I<001FC00000F0780001C01C00070007000F0007801E0003C0
1C0001C03C0001E03C0001E0780000F0780000F0780000F0F80000F8F80000F8F80000F8F80000
F8F80000F8F80000F8F80000F8F80000F8780000F07C0001F03C0001E03C0001E01E0003C01E00
03C00F00078007800F0001C01C0000F07800001FC0001D1F7E9E21>I<0783E0FF8418FF887C0F
907C07A07C07A03807C00007C00007C00007800007800007800007800007800007800007800007
80000780000780000780000780000780000780000780000780000780000780000780000FC000FF
FE00FFFE00161F7E9E19>114 D<01FC100E03301800F0300070600030E00030E00010E00010E0
0010F00010F800007E00003FF0001FFF000FFFC003FFE0003FF00001F80000F880003C80003C80
001CC0001CC0001CE0001CE00018F00038F00030CC0060C301C080FE00161F7E9E1A>I<004000
00400000400000400000400000C00000C00000C00001C00001C00003C00007C0000FC0001FFFE0
FFFFE003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C000
03C00003C00003C00003C00003C01003C01003C01003C01003C01003C01003C01003C01001C020
01E02000E0400078C0001F00142C7FAB19>I<078000F000FF801FF000FF801FF0000F8001F000
078000F000078000F000078000F000078000F000078000F000078000F000078000F000078000F0
00078000F000078000F000078000F000078000F000078000F000078000F000078000F000078000
F000078000F000078000F000078000F000078001F000078001F000078001F000038002F00003C0
04F00001C008F800007030FF80001FC0FF80211F7E9E25>I<FFF03FF80FFCFFF03FF80FFC0F80
07E003F00F8003C001C0078003C00080078003C0008007C003E0018003C003E0010003C004E001
0003E004F0030001E004F0020001E00870020001F00878060000F00878040000F0103804000078
103C08000078103C08000078201C0800003C201E1000003C201E1000003C400E1000001E400F20
00001E400F2000001E80072000000F8007C000000F8007C000000F0003C0000007000380000007
000380000006000180000002000100002E1F7F9E30>119 D<FFF800FF80FFF800FF800FC0007C
000780003800078000300003C000200003C000200001E000400001E000400001F000400000F000
800000F000800000780100000078010000007C010000003C020000003C020000001E040000001E
040000001F040000000F080000000F080000000790000000079000000007D000000003E0000000
03E000000001C000000001C000000001C000000000800000000080000000010000000001000000
00010000000002000000000200000000040000007004000000F80C000000F808000000F8100000
00702000000030400000001F80000000212D7F9E23>121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 15 1
0 bop 150 117 a Fp([)163 121 y(Whitehead,)15 b(1992)498 117
y(])533 121 y(Stev)o(en)k(Whitehead.)34 b Fm(R)n(einfor)n(c)n(ement)19
b(L)n(e)n(arning)f(for)j(the)f(A)n(daptive)198 177 y(Contr)n(ol)11
b(of)h(Per)n(c)n(eption)e(and)i(A)n(ction)p Fp(.)17 b(PhD)10
b(thesis,)i(Departmen)o(t)d(of)h(Computer)f(Science,)198 234
y(Univ)o(ersit)o(y)16 b(of)f(Ro)q(c)o(hester,)g(1992.)150 323
y([)163 327 y(Y)l(ee,)g(1992)353 323 y(])387 327 y(Ric)o(hard)g(Y)l(ee.)k
(Abstraction)13 b(in)i(con)o(trol)d(learning.)21 b(T)l(ec)o(hnical)15
b(Rep)q(ort)e(92-16,)198 384 y(COINS,)j(Univ)o(ersit)o(y)g(of)e(Massac)o(h)o
(usetts,)g(Amherst,)g(MA,)h(Marc)o(h)f(1992.)937 2600 y(15)p
eop
%%Page: 14 2
1 bop 150 121 a Fn(References)150 235 y Fp([)163 239 y(Chapman)15
b(and)g(Kaelbling,)i(1991)767 235 y(])802 239 y(Da)o(vid)35
b(Chapman)g(and)g(Leslie)i(P)o(ac)o(k)e(Kaelbling.)198 295
y(Learning)20 b(from)d(dela)o(y)o(ed)j(reinforcemen)o(t)f(in)g(a)g(complex)g
(domain.)31 b(In)19 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)e(of)198
352 y(IJCAI)p Fp(,)c(1991.)150 441 y([)163 445 y(Chrisman)i
Fm(et)h(al.)p Fp(,)f(1991)591 441 y(])625 445 y(Lonnie)f(Chrisman,)e(Ric)o(h)
h(Caruana,)f(and)g(W)l(a)o(yne)g(Carrik)o(er.)18 b(In-)198
502 y(telligen)o(t)j(agen)o(t)e(design)i(issues:)29 b(In)o(ternal)21
b(agen)o(t)e(state)g(and)h(incomplete)h(p)q(erception.)198
558 y Fm(Working)15 b(Notes)g(of)h(the)f(AAAI)f(F)m(al)r(l)g(Symp)n(osium:)21
b(Sensory)14 b(Asp)n(e)n(cts)g(of)h(R)n(ob)n(otic)g(Intel-)198
615 y(ligenc)n(e)p Fp(,)e(1991.)150 705 y([)163 709 y(Chrisman,)i(1992)475
705 y(])509 709 y(Lonnie)e(Chrisman.)19 b(Reinforcemen)o(t)12
b(learning)h(with)e(p)q(erceptual)i(alias-)198 765 y(ing:)20
b(The)c(p)q(erceptual)g(distinctions)h(approac)o(h.)j(In)c
Fm(AAAI-92)p Fp(,)e(1992.)150 855 y([)163 859 y(Garey)g(and)i(Johnson,)f
(1979)669 855 y(])703 859 y(Mic)o(hael)j(R.)f(Garey)g(and)g(Da)o(vid)g(S.)g
(Johnson.)26 b Fm(Computers)198 915 y(and)15 b(Intr)n(actability,)f(A)h
(Guide)h(to)f(the)h(The)n(ory)f(of)g(NP-Completeness)p Fp(.)i(W.)c(H.)h(F)l
(reeman)198 972 y(and)h(Compan)o(y)l(,)g(1979.)150 1062 y([)163
1066 y(Kaelbling,)i(1990)472 1062 y(])506 1066 y(Leslie)24
b(P)o(ac)o(k)c(Kaelbling.)41 b Fm(L)n(e)n(arning)20 b(in)i(Emb)n(e)n(dde)n(d)
g(Systems)p Fp(.)37 b(PhD)198 1122 y(thesis,)15 b(Stanford)g(Univ)o(ersit)o
(y)l(,)h(1990.)150 1212 y([)163 1216 y(Maes)e(and)i(Bro)q(oks,)e(1990)627
1212 y(])661 1216 y(P)o(attie)j(Maes)g(and)g(Ro)q(dney)i(A.)e(Bro)q(oks.)25
b(Learning)18 b(to)f(co)q(or-)198 1272 y(dinate)f(b)q(eha)o(viors.)k(In)c
Fm(Pr)n(o)n(c)n(e)n(e)n(dings)e(of)i(AAAI-90)p Fp(,)f(pages)g(796{802,)d
(1990.)150 1362 y([)163 1366 y(Rabiner,)k(1989)440 1362 y(])474
1366 y(La)o(wrence)i(R.)f(Rabiner.)29 b(A)17 b(tutorial)h(on)f(hidden)j(Mark)
o(o)o(v)15 b(mo)q(dels)k(and)198 1423 y(selected)k(applications)h(in)f(sp)q
(eec)o(h)g(recognition.)41 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)20
b(of)j(the)g(IEEE)p Fp(,)e(77\(2\),)198 1479 y(F)l(ebruary)15
b(1989.)150 1569 y([)163 1573 y(Stolc)o(k)o(e)g(and)g(Omoh)o(undro,)g(1992)
762 1569 y(])797 1573 y(Andreas)j(Stolc)o(k)o(e)g(and)h(Stephen)g(Omoh)o
(undro.)29 b(Hid-)198 1629 y(den)22 b(Mark)o(o)o(v)e(mo)q(del)i(induction)h
(b)o(y)e(ba)o(y)o(esian)h(mo)q(del)g(merging.)38 b(In)22 b
Fm(Pr)n(o)n(c)n(e)n(e)n(dings)e(of)198 1686 y(NIPS)15 b('92)p
Fp(,)g(No)o(v)o(em)o(b)q(er)g(1992.)150 1776 y([)163 1780 y(Sutton,)f(1990)
416 1776 y(])451 1780 y(Ric)o(hard)f(S.)f(Sutton.)19 b(In)o(tegrating)12
b(arc)o(hitectures)h(for)f(learning,)i(planning,)198 1836 y(and)h(reacting)g
(based)h(on)f(appro)o(ximating)g(dynamic)g(programming.)20
b(In)15 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)f(of)198 1893 y(the)e(Seventh)f
(International)f(Confer)n(enc)n(e)g(on)h(Machine)g(L)n(e)n(arning)p
Fp(,)e(Austin,)j(T)l(exas,)e(1990.)198 1949 y(Morgan)k(Kaufmann.)150
2039 y([)163 2043 y(Thrun,)h(1992)409 2039 y(])443 2043 y(Sebastian)d(B.)f
(Thrun.)19 b(E\016cien)o(t)11 b(exploration)h(in)g(reinforcemen)o(t)g
(learning.)198 2099 y(T)l(ec)o(hnical)17 b(Rep)q(ort)f(CMU-CS-92-102,)d(CMU)i
(Comp.)f(Sci.)i(Dept.,)e(Jan)o(uary)h(1992.)150 2189 y([)163
2193 y(W)l(atkins,)g(1989)446 2189 y(])480 2193 y(C.J.C.H.)g(W)l(atkins.)23
b Fm(L)n(e)n(arning)15 b(fr)n(om)j(Delaye)n(d)f(R)n(ewar)n(ds)p
Fp(.)23 b(PhD)16 b(thesis,)198 2250 y(Cam)o(bridge)f(Univ)o(ersit)o(y)h(Psyc)
o(hology)f(Dept.,)f(1989.)150 2339 y([)163 2343 y(Whitehead)i(and)f(Ballard,)
h(1990)748 2339 y(])782 2343 y(Stev)o(en)11 b(D.)e(Whitehead)i(and)g(Dana)f
(H.)g(Ballard.)18 b(Learn-)198 2400 y(ing)11 b(to)f(p)q(erceiv)o(e)h(and)g
(act.)18 b(T)l(ec)o(hnical)12 b(Rep)q(ort)f(331,)f(Univ)o(ersit)o(y)h(of)f
(Ro)q(c)o(hester)g(Computer)198 2456 y(Science)17 b(Dept.,)d(June)j(1990.)937
2600 y(14)p eop
%%Page: 13 3
2 bop 165 1340 a @beginspecial 605 @llx 144 @lly 1107 @urx
422 @ury 3960 @rwi @setspecial
%%BeginDocument: hmms2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: Diagram
%%CreationDate: Sun Dec 13 14:34:46 1992
%%For: mccallum
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 605 144 1107 422
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/DIAGRAMline {
    moveto rlineto stroke
} def /DIAGRAMarrow {
    [] 0 setdash newpath moveto dup rotate 0 currentlinewidth sub 1.2 mul 0 rmoveto -9 3 rlineto 2 -3 rlineto -2 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /DIAGRAMpreparelines {
    /DIAGRAMlinetype exch def setlinewidth setrgbcolor 2 setlinejoin DIAGRAMlinetype 0 eq {
        [] 0 setdash
    } if DIAGRAMlinetype 1 eq {
        [ 5 currentlinewidth add dup ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 2 eq {
        [ 0 currentlinewidth add 5 currentlinewidth add ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 3 eq {
        [ 5 currentlinewidth add 4 currentlinewidth add 0 currentlinewidth add 4 currentlinewidth add ] 0 currentlinewidth add setdash
    } if
} def
%%EndSetup
0 0 1107 422 rectclip
605 144 501.516266 278 rectclip
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 660 220 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 660 220 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
/Times-Roman findfont 10 scalefont [1 0 0 -1 0 0] makefont
1666
exch
defineuserobject
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 470] concat
1666 execuserobject setfont
0 nxsetgray
669.861694 234.861694 moveto (5a) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 620 290 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 620 290 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 610] concat
1666 execuserobject setfont
0 nxsetgray
631.861694 304.861694 moveto (9) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 760 290 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 760 290 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 610] concat
1666 execuserobject setfont
0 nxsetgray
769.861694 304.861694 moveto (12) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 690 290 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 690 290 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 610] concat
1666 execuserobject setfont
0 nxsetgray
701.861694 304.861694 moveto (8) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 690 360 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 690 360 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 750] concat
1666 execuserobject setfont
0 nxsetgray
699.861694 374.861694 moveto (10) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 660 150 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 660 150 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 330] concat
1666 execuserobject setfont
0 nxsetgray
671.861694 164.861694 moveto (7) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
705 321.600006 705 358.399994 setbbox
705 358.399994 moveto
705 321.600006 lineto
end
stroke
grestore
-270 705 360 DIAGRAMarrow
-90 705 320 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
688.599243 244.51947 761.400757 295.48053 setbbox
761.400757 295.48053 moveto
688.599243 244.51947 lineto
end
stroke
grestore
-325.007996 762.711548 296.398071 DIAGRAMarrow
-145.00798 687.288452 243.601929 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
643.235901 249.412842 666.764099 290.587158 setbbox
643.235901 290.587158 moveto
666.764099 249.412842 lineto
end
stroke
grestore
-240.255127 642.442078 291.976349 DIAGRAMarrow
-60.255119 667.557922 248.023651 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
680.908813 248.78717 698.460938 289.742188 setbbox
698.460938 289.742188 moveto
680.908813 248.78717 lineto
end
stroke
grestore
-293.198608 699.091187 291.21283 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
675 181.600006 675 218.399994 setbbox
675 218.399994 moveto
675 181.600006 lineto
end
stroke
grestore
-270 675 220 DIAGRAMarrow
-90 675 180 DIAGRAMarrow
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 720 220 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 720 220 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 470] concat
1666 execuserobject setfont
0 nxsetgray
729.861694 234.861694 moveto (5b) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
711.539062 250.257797 728.460938 289.742188 setbbox
711.539062 289.742188 moveto
728.460938 250.257797 lineto
end
stroke
grestore
-246.801407 710.908813 291.21283 DIAGRAMarrow
-66.801407 729.091187 248.78717 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
742.442078 248.023651 766.764099 290.587158 setbbox
766.764099 290.587158 moveto
742.442078 248.023651 lineto
end
stroke
grestore
-299.744873 767.557922 291.976349 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
648.599243 243.601929 722.711548 295.48053 setbbox
648.599243 295.48053 moveto
722.711548 243.601929 lineto
end
stroke
grestore
-214.99202 647.288452 296.398071 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
685.803101 177.603668 725.238159 223.611145 setbbox
725.238159 223.611145 moveto
685.803101 177.603668 lineto
end
stroke
grestore
-130.601288 684.761841 176.388855 DIAGRAMarrow
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 807] concat
/Helvetica findfont 14 scalefont [1 0 0 -1 0 0] makefont
1111
exch
defineuserobject
1111 execuserobject setfont
0 nxsetgray
613 405 moveto (Trial 3) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
646.737976 316.737976 693.262024 363.262024 setbbox
646.737976 316.737976 moveto
693.262024 363.262024 lineto
end
stroke
grestore
-135 645.606628 315.606598 DIAGRAMarrow
45 694.393372 364.393402 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
716.737976 316.737976 763.262024 363.262024 setbbox
716.737976 363.262024 moveto
763.262024 316.737976 lineto
end
stroke
grestore
-225 715.606628 364.393402 DIAGRAMarrow
-45 764.393372 315.606598 DIAGRAMarrow
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 930 220 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 930 220 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1111 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 470] concat
1666 execuserobject setfont
0 nxsetgray
939.861694 234.861694 moveto (5a) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 890 290 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 890 290 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 610] concat
1666 execuserobject setfont
0 nxsetgray
901.861694 304.861694 moveto (9) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1030 290 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1030 290 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 610] concat
1666 execuserobject setfont
0 nxsetgray
1039.861694 304.861694 moveto (12) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 960 290 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 960 290 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 610] concat
1666 execuserobject setfont
0 nxsetgray
971.861694 304.861694 moveto (8) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 930 360 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 930 360 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 750] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 930 150 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 930 150 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
[1 0 0 -1 0 330] concat
1666 execuserobject setfont
0 nxsetgray
939.861694 164.861694 moveto (7a) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
951.539062 320.257812 968.460938 359.742188 setbbox
951.539062 359.742188 moveto
968.460938 320.257812 lineto
end
stroke
grestore
-246.801407 950.908813 361.21283 DIAGRAMarrow
-66.801407 969.091187 318.78717 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
958.599243 244.51947 1031.400757 295.48053 setbbox
1031.400757 295.48053 moveto
958.599243 244.51947 lineto
end
stroke
grestore
-325.007996 1032.711548 296.398071 DIAGRAMarrow
-145.00798 957.288452 243.601929 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
913.235901 249.412842 936.764099 290.587158 setbbox
913.235901 290.587158 moveto
936.764099 249.412842 lineto
end
stroke
grestore
-240.255127 912.442078 291.976349 DIAGRAMarrow
-60.255119 937.557922 248.023651 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
950.908813 248.78717 968.460938 289.742188 setbbox
968.460938 289.742188 moveto
950.908813 248.78717 lineto
end
stroke
grestore
-293.198608 969.091187 291.21283 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
945 181.600006 945 218.399994 setbbox
945 218.399994 moveto
945 181.600006 lineto
end
stroke
grestore
-270 945 220 DIAGRAMarrow
-90 945 180 DIAGRAMarrow
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 990 220 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 990 220 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 470] concat
1666 execuserobject setfont
0 nxsetgray
999.861694 234.861694 moveto (5b) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
981.539062 250.257797 998.460938 289.742188 setbbox
981.539062 289.742188 moveto
998.460938 250.257797 lineto
end
stroke
grestore
-246.801407 980.908813 291.21283 DIAGRAMarrow
-66.801407 999.091187 248.78717 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1012.442078 248.023651 1036.764038 290.587158 setbbox
1036.764038 290.587158 moveto
1012.442078 248.023651 lineto
end
stroke
grestore
-299.744873 1037.557861 291.976349 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
918.599243 243.601929 992.711548 295.48053 setbbox
918.599243 295.48053 moveto
992.711548 243.601929 lineto
end
stroke
grestore
-214.99202 917.288452 296.398071 DIAGRAMarrow
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 807] concat
1111 execuserobject setfont
0 nxsetgray
883 405 moveto (Trial 4) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
913.235901 319.412842 936.764099 360.587158 setbbox
913.235901 319.412842 moveto
936.764099 360.587158 lineto
end
stroke
grestore
-119.744881 912.442078 318.023651 DIAGRAMarrow
60.255119 937.557922 361.976349 DIAGRAMarrow
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 990 150 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 990 150 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1111 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 330] concat
1666 execuserobject setfont
0 nxsetgray
999.861694 164.861694 moveto (7b) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1005 181.600006 1005 220 setbbox
1005 220 moveto
1005 181.600006 lineto
end
stroke
grestore
-90 1005 180 DIAGRAMarrow
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 990 360 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 990 360 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 750] concat
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
[1 0 0 -1 0 749.28717] concat
1666 execuserobject setfont
0 nxsetgray
937.483765 376 moveto (10a) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 749.28717] concat
1666 execuserobject setfont
0 nxsetgray
998.483765 376 moveto (10b) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1013.235901 319.412842 1036.764038 360.587158 setbbox
1036.764038 319.412842 moveto
1013.235901 360.587158 lineto
end
stroke
grestore
-60.255119 1037.557861 318.023651 DIAGRAMarrow
119.744881 1012.442078 361.976349 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
981.539062 320.257812 998.460938 359.742188 setbbox
981.539062 320.257812 moveto
998.460938 359.742188 lineto
end
stroke
grestore
-113.198593 980.908813 318.78717 DIAGRAMarrow
66.801407 999.091187 361.21283 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
918.599243 314.51947 992.711548 366.398071 setbbox
992.711548 366.398071 moveto
918.599243 314.51947 lineto
end
stroke
grestore
-145.00798 917.288452 313.601929 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
957.288452 314.51947 1031.400757 366.398071 setbbox
957.288452 366.398071 moveto
1031.400757 314.51947 lineto
end
stroke
grestore
-34.99202 1032.711548 313.601929 DIAGRAMarrow
grestore
grestore
gsave
0 0 1107 422 rectclip
[1 0 0 -1 0 422] concat
grestore
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Helvetica
%%EndDocument
 @endspecial 150 1438 a Fp(Figure)18 b(6:)25 b(The)18 b(second)h(half)f(of)f
(the)h(sequence)h(of)f(Hidden)h(Mark)o(o)o(v)d(mo)q(dels)j(created)f(b)o(y)
150 1494 y(UDM)c(as)h(it)g(learns)h(the)f(task)f(sho)o(wn)h(in)g(Figure)h(4.)
j Fq(T)l(rial)f(3:)i Fp(The)15 b(agen)o(t)f(has)h(found)h(non-)150
1551 y(o)o(v)o(erlapping)h(con\014dence)g(in)o(terv)m(als)h(on)e(the)g
(transitions)g(in)o(to)g(5b|arriving)i(from)d(state)g(8)150
1607 y(is)f(signi\014can)o(tly)h(di\013eren)o(t)e(than)h(arriving)g(from)e
(states)h(9)g(or)g(12.)18 b(UDM)13 b(temp)q(orarily)h(splits)150
1664 y(5b)g(in)o(to)h(5b)f(and)g(5c,)g(but)h(then)g(5c)f(is)h(joined)g(with)g
(5a.)k Fq(T)l(rial)e(4:)j Fp(Tw)o(o)13 b(splits)i(o)q(ccur)g(at)f(the)150
1720 y(end)i(of)g(this)g(trial.)21 b(Av)o(erage)15 b(future)h(rew)o(ard)f
(after)g(lea)o(ving)h(the)g(cen)o(ter)g(state)e(7)i(is)g(greater)150
1776 y(than)h(after)g(lea)o(ving)h(the)g(side)g(state)f(7's)f(b)q(ecause)j
(from)e(the)g(cen)o(ter)h(state)e(7)h(the)h(agen)o(t)e(is)150
1833 y(telep)q(orted)k(to)e(lo)q(cations)h(that)f(are)h(are)f(often)h(close)g
(to)f(the)h(goal.)30 b(UDM)19 b(splits)g(state)f(7)150 1889
y(recognizing)i(that)d(arriving)i(from)e(5a)h(is)h(di\013eren)o(t)f(than)g
(arriving)h(from)e(5b.)29 b(State)18 b(10)f(is)150 1946 y(also)d(split)i(b)q
(ecause)f(the)g(con\014dence)h(in)o(terv)m(als)f(for)f(lea)o(ving)h(10)f(b)o
(y)g(going)h(east)f(and)g(lea)o(ving)150 2002 y(10)e(b)o(y)h(going)f(w)o(est)
g(don't)g(o)o(v)o(erlap)h(in)g(the)g(transitions)g(coming)g(from)e(states)h
(9)g(and)h(12.)19 b(The)150 2059 y(agen)o(t)c(will)j(no)o(w)d(arriv)o(e)h(in)
h(state)e(10a)g(from)g(state)g(9)h(and)g(arriv)o(e)g(in)h(state)e(10b)h(from)
f(state)150 2115 y(12.)k(There)d(are)f(no)g(more)g(c)o(hanges)g(to)f(the)i
(HMM)e(after)h(trial)g(5.)937 2600 y(13)p eop
%%Page: 12 4
3 bop 165 1433 a @beginspecial 594 @llx 454 @lly 1087 @urx
732 @ury 3960 @rwi @setspecial
%%BeginDocument: hmms1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: Diagram
%%CreationDate: Sun Dec 13 14:34:24 1992
%%For: mccallum
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 594 454 1087 732
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/DIAGRAMline {
    moveto rlineto stroke
} def /DIAGRAMarrow {
    [] 0 setdash newpath moveto dup rotate 0 currentlinewidth sub 1.2 mul 0 rmoveto -9 3 rlineto 2 -3 rlineto -2 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /DIAGRAMpreparelines {
    /DIAGRAMlinetype exch def setlinewidth setrgbcolor 2 setlinejoin DIAGRAMlinetype 0 eq {
        [] 0 setdash
    } if DIAGRAMlinetype 1 eq {
        [ 5 currentlinewidth add dup ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 2 eq {
        [ 0 currentlinewidth add 5 currentlinewidth add ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 3 eq {
        [ 5 currentlinewidth add 4 currentlinewidth add 0 currentlinewidth add 4 currentlinewidth add ] 0 currentlinewidth add setdash
    } if
} def
%%EndSetup
0 0 1087 732 rectclip
594 454 492.516266 278 rectclip
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 900 540 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 900 540 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
/Helvetica findfont 14 scalefont [1 0 0 -1 0 0] makefont
1111
exch
defineuserobject
1111 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1110] concat
/Times-Roman findfont 10 scalefont [1 0 0 -1 0 0] makefont
1666
exch
defineuserobject
1666 execuserobject setfont
0 nxsetgray
909.861694 554.861694 moveto (5a) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 860 610 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 860 610 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1250] concat
1666 execuserobject setfont
0 nxsetgray
871.861694 624.861694 moveto (9) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1000 610 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1000 610 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1250] concat
1666 execuserobject setfont
0 nxsetgray
1009.861694 624.861694 moveto (12) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 930 610 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 930 610 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1250] concat
1666 execuserobject setfont
0 nxsetgray
941.861694 624.861694 moveto (8) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 930 680 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 930 680 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1390] concat
1666 execuserobject setfont
0 nxsetgray
939.861694 694.861694 moveto (10) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 900 470 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 900 470 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 970] concat
1666 execuserobject setfont
0 nxsetgray
911.861694 484.861694 moveto (7) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
945 641.599976 945 678.400024 setbbox
945 678.400024 moveto
945 641.599976 lineto
end
stroke
grestore
-270 945 680 DIAGRAMarrow
-90 945 640 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
928.599243 564.51947 1001.400757 615.48053 setbbox
1001.400757 615.48053 moveto
928.599243 564.51947 lineto
end
stroke
grestore
-325.007996 1002.711548 616.398071 DIAGRAMarrow
-145.00798 927.288452 563.601929 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
883.235901 569.412781 906.764099 610.587219 setbbox
883.235901 610.587219 moveto
906.764099 569.412781 lineto
end
stroke
grestore
-240.255127 882.442078 611.976379 DIAGRAMarrow
-60.255119 907.557922 568.023621 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
920.908813 568.78717 938.460938 609.742188 setbbox
938.460938 609.742188 moveto
920.908813 568.78717 lineto
end
stroke
grestore
-293.198608 939.091187 611.21283 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
915 501.600006 915 538.400024 setbbox
915 538.400024 moveto
915 501.600006 lineto
end
stroke
grestore
-270 915 540 DIAGRAMarrow
-90 915 500 DIAGRAMarrow
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 960 540 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 960 540 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1110] concat
1666 execuserobject setfont
0 nxsetgray
969.861694 554.861694 moveto (5b) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
951.539062 570.257812 968.460938 609.742188 setbbox
951.539062 609.742188 moveto
968.460938 570.257812 lineto
end
stroke
grestore
-246.801407 950.908813 611.21283 DIAGRAMarrow
-66.801407 969.091187 568.78717 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
983.235901 569.412781 1006.764099 610.587219 setbbox
1006.764099 610.587219 moveto
983.235901 569.412781 lineto
end
stroke
grestore
-299.744873 1007.557922 611.976379 DIAGRAMarrow
-119.744881 982.442078 568.023621 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
888.599243 564.51947 961.400757 615.48053 setbbox
888.599243 615.48053 moveto
961.400757 564.51947 lineto
end
stroke
grestore
-214.99202 887.288452 616.398071 DIAGRAMarrow
-34.99202 962.711548 563.601929 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
925.803101 497.603668 965.238159 543.611145 setbbox
965.238159 543.611145 moveto
925.803101 497.603668 lineto
end
stroke
grestore
-130.601288 924.761841 496.388855 DIAGRAMarrow
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1427] concat
1111 execuserobject setfont
0 nxsetgray
863 715 moveto (Trial 2) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 670 530 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 670 530 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1111 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1090] concat
1666 execuserobject setfont
0 nxsetgray
681.861694 544.861694 moveto (5) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 600 600 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 600 600 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1230] concat
1666 execuserobject setfont
0 nxsetgray
611.861694 614.861694 moveto (9) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 740 600 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 740 600 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1230] concat
1666 execuserobject setfont
0 nxsetgray
749.861694 614.861694 moveto (12) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 670 600 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 670 600 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1230] concat
1666 execuserobject setfont
0 nxsetgray
681.861694 614.861694 moveto (8) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 670 670 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 670 670 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1370] concat
1666 execuserobject setfont
0 nxsetgray
679.861694 684.861694 moveto (10) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 670 460 translate 30 30 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 670 460 translate 30 30 gt {
    1 30 30 div scale 30 2 div dup dup 0 360 arc
} {
    30 30 div 1 scale 30 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 950] concat
1666 execuserobject setfont
0 nxsetgray
681.861694 474.861694 moveto (7) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
685 631.599976 685 668.400024 setbbox
685 668.400024 moveto
685 631.599976 lineto
end
stroke
grestore
-270 685 670 DIAGRAMarrow
-90 685 630 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
696.737976 556.737976 743.262024 603.262024 setbbox
743.262024 603.262024 moveto
696.737976 556.737976 lineto
end
stroke
grestore
-315 744.393372 604.393372 DIAGRAMarrow
-135 695.606628 555.606628 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
626.737976 556.737976 673.262024 603.262024 setbbox
626.737976 603.262024 moveto
673.262024 556.737976 lineto
end
stroke
grestore
-225 625.606628 604.393372 DIAGRAMarrow
-45 674.393372 555.606628 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
685 561.599976 685 598.400024 setbbox
685 598.400024 moveto
685 561.599976 lineto
end
stroke
grestore
-270 685 600 DIAGRAMarrow
-90 685 560 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
685 491.600006 685 528.400024 setbbox
685 528.400024 moveto
685 491.600006 lineto
end
stroke
grestore
-270 685 530 DIAGRAMarrow
-90 685 490 DIAGRAMarrow
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
1666 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1427] concat
1111 execuserobject setfont
0 nxsetgray
603 715 moveto (Trial 1) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
626.737976 626.737976 673.262024 673.262024 setbbox
626.737976 626.737976 moveto
673.262024 673.262024 lineto
end
stroke
grestore
-135 625.606628 625.606628 DIAGRAMarrow
45 674.393372 674.393372 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
696.737976 626.737976 743.262024 673.262024 setbbox
696.737976 673.262024 moveto
743.262024 626.737976 lineto
end
stroke
grestore
-225 695.606628 674.393372 DIAGRAMarrow
-45 744.393372 625.606628 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
956.737976 636.737976 1003.262024 683.262024 setbbox
1003.262024 636.737976 moveto
956.737976 683.262024 lineto
end
stroke
grestore
-45 1004.393372 635.606628 DIAGRAMarrow
135 955.606628 684.393372 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
886.737976 636.737976 933.262024 683.262024 setbbox
933.262024 683.262024 moveto
886.737976 636.737976 lineto
end
stroke
grestore
-315 934.393372 684.393372 DIAGRAMarrow
-135 885.606628 635.606628 DIAGRAMarrow
grestore
grestore
gsave
0 0 1087 732 rectclip
[1 0 0 -1 0 732] concat
grestore
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Helvetica
%%EndDocument
 @endspecial 150 1531 a Fp(Figure)13 b(5:)18 b(The)13 b(\014rst)f(half)h(of)f
(the)h(sequence)h(of)e(Hidden)i(Mark)o(o)o(v)d(mo)q(dels)i(created)g(b)o(y)g
(UDM)150 1587 y(as)20 b(it)g(learns)g(the)h(task)e(sho)o(wn)g(in)i(Figure)g
(4.)34 b(The)20 b(HMM)f(states)g(are)h(fully)h(connected,)150
1644 y(but)e(the)g(diagrams)g(only)h(sho)o(w)e(transitions)i(with)f
(probabilit)o(y)i(greater)d(than)h(0.3.)31 b(Also)150 1700
y(not)15 b(sho)o(wn)h(here)g(are)f(the)h(di\013eren)o(t)g(actions)g(that)f
(cause)h(the)g(transitions.)22 b Fq(T)l(rial)d(1:)i Fp(The)150
1757 y(agen)o(t)12 b(has)g(learned)i(some)e(transition)h(probabilities,)h
(but)f(it)g(has)f(not)g(y)o(et)g(gathered)h(enough)150 1813
y(statistics)18 b(to)f(split)i(an)o(y)e(states.)27 b Fq(T)l(rial)21
b(2:)k Fp(The)18 b(agen)o(t)f(has)h(disco)o(v)o(ered)g(that)f(the)h(future)
150 1869 y(discoun)o(ted)h(rew)o(ard)e(receiv)o(ed)j(after)d(lea)o(ving)i
(state)e(5)h(is)g(signi\014can)o(tly)i(di\013eren)o(t)e(when)h(it)150
1926 y(arriv)o(es)d(from)g(state)f(8)h(than)h(it)f(is)h(when)g(it)g(arriv)o
(es)f(from)f(state)h(7.)23 b(UDM)16 b(has)g(duplicated)150
1982 y(state)e(5,)g(creating)h(5a)f(and)h(5b,)f(then)h(remo)o(v)o(ed)f(the)h
(state)f(8)g(incoming)i(transition)f(from)f(5a)150 2039 y(and)h(remo)o(v)o
(ed)g(the)g(state)g(7)g(incoming)h(transition)f(from)g(5b.)937
2600 y(12)p eop
%%Page: 11 5
4 bop 323 1406 a @beginspecial 3529 @llx 371 @lly 3919 @urx
653 @ury 3096 @rwi @setspecial
%%BeginDocument: maze3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: Diagram
%%CreationDate: Thu Dec 10 18:26:05 1992
%%For: mccallum
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 3529 371 3919 653
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/DIAGRAMline {
    moveto rlineto stroke
} def /DIAGRAMarrow {
    [] 0 setdash newpath moveto dup rotate 0 currentlinewidth sub 1.2 mul 0 rmoveto -9 3 rlineto 2 -3 rlineto -2 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /DIAGRAMpreparelines {
    /DIAGRAMlinetype exch def setlinewidth setrgbcolor 2 setlinejoin DIAGRAMlinetype 0 eq {
        [] 0 setdash
    } if DIAGRAMlinetype 1 eq {
        [ 5 currentlinewidth add dup ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 2 eq {
        [ 0 currentlinewidth add 5 currentlinewidth add ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 3 eq {
        [ 5 currentlinewidth add 4 currentlinewidth add 0 currentlinewidth add 4 currentlinewidth add ] 0 currentlinewidth add setdash
    } if
} def
%%EndSetup
0 0 3919 653 rectclip
3529 371 390 282 rectclip
gsave
3710.000000 427.000000 transform
gsave __NXbasematrix setmatrix itransform translate
40
40
2
[1 0 0 -1 0 40]

/_NXImageStr0 _NXImageString 0 400 getinterval def {currentfile _NXImageStr0 readhexstring pop} bind image
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd91fffffffffffffffffaa847ffffffffffffffaaaaa1fffffffffffffaaaaaac7fffffffffffaa9aaaab3ffffffffffeaaaa
aaaa4ffffffffffe6aaa5aaadffffffffffaaaa6a8444fffffffffa6a6a9127b0ffffffffe9aaa445eee4ffffffffaaa1127ebbb0fffffffea845eeeed7e4fffffff951e7bbbbbbb0fffffff845feeeeaeee4fffffffbaebfabbfbbb0fffffffeeaeeee5ee5e4fffffffba7bbbb7fb7f0fffffffeeeeeeefeeff4fffffff
bb7bbbbbbbb60fffffffdee5eeeeee447fffffffbbb7fbba64ffffffffffaeefef4447ffffffffffda59113fffffffffffffd445ffffffffffffffffd1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffff
grestore
3646.000000 537.000000 transform
gsave __NXbasematrix setmatrix itransform translate
40
40
2
[1 0 0 -1 0 40]

/_NXImageStr0 _NXImageString 0 400 getinterval def {currentfile _NXImageStr0 readhexstring pop} bind image
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffff5855fffffffffffffffda6dd56fffd4ffffffffbaaf5597ff61fffffffe9eeafdd4444457fffffafaafafb1111111fffffaaabeafe99844747fffebaebb9bbb1611110fffabeaeecfeed844444ffdbdebfb1baae6611523f55efeec4a2ec497c04fd403
bbd1044d19ffffffc8f6ef459ff55fffffffd4f7b9127ffd557fffffc7f52e4554ffd40fffffd7ff0013003fffc3ffffc4fffffffffffffffffff557fffffffffffffffffd0555fffff55ffffffffffc00055543ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffff
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3535 593 54 54 rectfill
0 0 0 setrgbcolor 3535 593 54 54 rectstroke
gsave
[1 0 0 -1 0 1240] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3589 593 54 54 rectfill
0 0 0 setrgbcolor 3589 593 54 54 rectstroke
gsave
[1 0 0 -1 0 1240] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3643 593 54 54 rectfill
0 0 0 setrgbcolor 3643 593 54 54 rectstroke
gsave
[1 0 0 -1 0 1240] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3697 593 54 54 rectfill
0 0 0 setrgbcolor 3697 593 54 54 rectstroke
gsave
[1 0 0 -1 0 1240] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3751 593 54 54 rectfill
0 0 0 setrgbcolor 3751 593 54 54 rectstroke
gsave
[1 0 0 -1 0 1240] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3535 539 54 54 rectfill
0 0 0 setrgbcolor 3535 539 54 54 rectstroke
gsave
[1 0 0 -1 0 1132] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 3589 539 54 54 rectfill
0 0 0 setrgbcolor 3589 539 54 54 rectstroke
gsave
[1 0 0 -1 0 1132] concat
/Helvetica-Bold findfont 18 scalefont [1 0 0 -1 0 0] makefont
1108
exch
defineuserobject
1108 execuserobject setfont
0 nxsetgray
3610.5 558.5 moveto (9) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 3643 539 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1132] concat
1108 execuserobject setfont
0 nxsetgray
3659.5 558.5 moveto (10) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 3697 539 54 54 rectfill
0 0 0 setrgbcolor 3697 539 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1132] concat
1108 execuserobject setfont
0 nxsetgray
3718.5 558.5 moveto (8) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 3751 539 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1132] concat
1108 execuserobject setfont
0 nxsetgray
3767.5 558.5 moveto (10) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3535 485 54 54 rectfill
0 0 0 setrgbcolor 3535 485 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1024] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 3589 485 54 54 rectfill
0 0 0 setrgbcolor 3589 485 54 54 rectstroke
gsave
[1 0 0 -1 0 1024] concat
1108 execuserobject setfont
0 nxsetgray
3610.5 504.5 moveto (5) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3643 485 54 54 rectfill
0 0 0 setrgbcolor 3643 485 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1024] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 3697 485 54 54 rectfill
0 0 0 setrgbcolor 3697 485 54 54 rectstroke
gsave
[1 0 0 -1 0 1024] concat
1108 execuserobject setfont
0 nxsetgray
3718.5 504.5 moveto (5) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3751 485 54 54 rectfill
0 0 0 setrgbcolor 3751 485 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1024] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3535 431 54 54 rectfill
0 0 0 setrgbcolor 3535 431 54 54 rectstroke
gsave
[1 0 0 -1 0 916] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 3589 431 54 54 rectfill
0 0 0 setrgbcolor 3589 431 54 54 rectstroke
gsave
[1 0 0 -1 0 916] concat
1108 execuserobject setfont
0 nxsetgray
3610.5 450.5 moveto (7) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3643 431 54 54 rectfill
0 0 0 setrgbcolor 3643 431 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 916] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 3697 431 54 54 rectstroke
gsave
[1 0 0 -1 0 916] concat
1108 execuserobject setfont
0 nxsetgray
3718.5 450.5 moveto (7) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3751 431 54 54 rectfill
0 0 0 setrgbcolor 3751 431 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 916] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3535 377 54 54 rectfill
0 0 0 setrgbcolor 3535 377 54 54 rectstroke
gsave
[1 0 0 -1 0 808] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3589 377 54 54 rectfill
0 0 0 setrgbcolor 3589 377 54 54 rectstroke
gsave
[1 0 0 -1 0 808] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3643 377 54 54 rectfill
0 0 0 setrgbcolor 3643 377 54 54 rectstroke
gsave
[1 0 0 -1 0 808] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3697 377 54 54 rectfill
0 0 0 setrgbcolor 3697 377 54 54 rectstroke
gsave
[1 0 0 -1 0 808] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3751 377 54 54 rectfill
0 0 0 setrgbcolor 3751 377 54 54 rectstroke
gsave
[1 0 0 -1 0 808] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3805 593 54 54 rectfill
0 0 0 setrgbcolor 3805 593 54 54 rectstroke
gsave
[1 0 0 -1 0 1240] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 3805 539 54 54 rectstroke
gsave
[1 0 0 -1 0 1132] concat
1108 execuserobject setfont
0 nxsetgray
3821.5 558.5 moveto (12) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 3805 485 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1024] concat
1108 execuserobject setfont
0 nxsetgray
3826.5 504.5 moveto (5) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 3805 431 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 916] concat
1108 execuserobject setfont
0 nxsetgray
3826.5 450.5 moveto (7) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3805 377 54 54 rectfill
0 0 0 setrgbcolor 3805 377 54 54 rectstroke
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 808] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3859 593 54 54 rectfill
0 0 0 setrgbcolor 3859 593 54 54 rectstroke
gsave
[1 0 0 -1 0 1240] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3859 539 54 54 rectfill
0 0 0 setrgbcolor 3859 539 54 54 rectstroke
gsave
[1 0 0 -1 0 1132] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3859 485 54 54 rectfill
0 0 0 setrgbcolor 3859 485 54 54 rectstroke
gsave
[1 0 0 -1 0 1024] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3859 431 54 54 rectfill
0 0 0 setrgbcolor 3859 431 54 54 rectstroke
gsave
[1 0 0 -1 0 916] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
0.333338 0.333338 0.333338 setrgbcolor 3859 377 54 54 rectfill
0 0 0 setrgbcolor 3859 377 54 54 rectstroke
gsave
[1 0 0 -1 0 808] concat
grestore
grestore
gsave
0 0 3919 653 rectclip
[1 0 0 -1 0 653] concat
grestore
%%Trailer
%%DocumentFonts: Helvetica-Bold
%%EndDocument
 @endspecial 150 1504 a Fp(Figure)11 b(4:)18 b(One)12 b(of)f(sev)o(eral)g
(mazes)g(successfully)i(solv)o(ed)f(b)o(y)f(UDM.)f(The)i(agen)o(t's)e(p)q
(erception)150 1560 y(is)17 b(de\014ned)i(b)o(y)e(a)f(bit)i(v)o(ector)e(of)g
(length)i(four)f(in)g(whic)o(h)h(the)f(bits)h(sp)q(ecify)g(whether)f(or)f
(not)150 1617 y(there)f(is)h(a)f(barrier)g(to)g(the)g(agen)o(t's)f(immediate)
i(north,)f(east,)f(south,)h(w)o(est.)k(The)d(n)o(um)o(b)q(ers)150
1673 y(in)g(the)e(squares)h(are)f(the)h(decimal)i(equiv)m(alen)o(ts)f(of)e
(the)h(bit)g(v)o(ectors)f(in)o(terpreted)i(in)g(binary)l(.)150
1729 y(Although)g(the)g(three)g(state)e(5's)h(are)h(all)g(p)q(erceptually)i
(equiv)m(alen)o(t,)f(the)e(agen)o(t)g(m)o(ust)g(learn)150 1786
y(to)i(go)g(south)g(in)h(the)f(5)g(in)i(the)e(cen)o(ter,)h(and)f(go)g(north)g
(in)h(the)g(5's)e(on)i(the)f(righ)o(t)g(and)h(left.)150 1842
y(The)f(Hidden)i(Mark)o(o)o(v)c(Mo)q(del)j(built)g(b)o(y)f(UDM)f(has)h(t)o(w)
o(o)f(states)g(with)h(high)h(probabilities)150 1899 y(of)d(observing)h(5|one)
g(represen)o(ting)h(the)f(5)f(in)h(the)g(cen)o(ter)g(and)g(the)g(other)f(com)
o(bining)i(the)150 1955 y(t)o(w)o(o)h(5's)h(on)h(the)g(righ)o(t)g(and)g
(left.)33 b(P)o(erception)21 b(10)e(is)h(also)g(aliased,)i(and)e(is)g(split)h
(in)f(t)o(w)o(o)150 2012 y(since)f(di\013eren)o(t)f(actions)g(are)f(required)
i(in)f(the)g(t)o(w)o(o)f(w)o(orld)g(states.)27 b(See)18 b(Figures)g(5)f(and)h
(6)150 2068 y(for)d(diagrams)f(of)h(the)g(HMM)g(built)i(to)d(solv)o(e)i(this)
f(maze.)937 2600 y(11)p eop
%%Page: 10 6
5 bop 150 121 a Fp(to)13 b(disam)o(biguate)i(the)e(ubiquitous)j(p)q
(erceptual)f(aliasing)g(that)e(o)q(ccurs)h(with)g Fm(active)h(p)n(er)n(c)n
(ep-)150 177 y(tion)p Fp(.)20 b(In)d(fact,)d(the)i(use)g(of)f(memory)g(with)g
(activ)o(e)h(p)q(erception)h(has)e(the)h(p)q(oten)o(tial)g(to)f(solv)o(e)150
234 y(UDM's)e(lac)o(k)i(of)e(p)q(erceptual)j(distinctions)g(quite)f(nicely)l
(.)21 b(Imagine)15 b(an)f(agen)o(t)g(that)f(c)o(ho)q(oses)150
290 y(from)k(among)g(o)o(v)o(ert)f(and)i(p)q(erceptual)h(actions)f(that)f
(eac)o(h)h(return)g(one)f(bit,)i(and)f(this)g(one)150 346 y(bit)e(mak)o(es)f
(up)h(the)g(agen)o(t's)e(en)o(tire)j(immediate)f(p)q(erception)h(space.)22
b(W)l(e)15 b(can)h(think)h(of)e(the)150 403 y(di\013eren)o(t)j(p)q(erceptual)
i(actions)e(as)f(eac)o(h)h(returning)h(a)e(di\013eren)o(t)h(bit)h(of)e(the)h
(total)g(p)q(ercep-)150 459 y(tion)i(v)o(ector)e(a)o(v)m(ailable)j(from)e
(the)g(curren)o(t)h(w)o(orld)f(state.)31 b(The)20 b(agen)o(t)f(can)g
(generalize)i(in)150 516 y(p)q(erception)d(space)f(b)o(y)f(only)h(executing)h
(the)f(actions)f(necessary)h(to)f(get)g(the)g(bits)h(that)f(are)150
572 y(curren)o(tly)e(relev)m(an)o(t.)20 b(This)14 b(sc)o(heme)g(is)g(ev)o(en)
g(b)q(etter)g(than)f(generalizing)j(b)o(y)d(\\masking)h(out")150
629 y(parts)j(of)g(the)h(p)q(erception)h(v)o(ector)d(b)q(ecause)j(the)e(agen)
o(t's)g(p)q(olicy)i(can)f(e\013ectiv)o(ely)g(act)f(as)g(a)150
685 y(decision)i(tree)d(that)g(sp)q(eci\014es)j(whic)o(h)f(bits)f(are)g
(needed|dep)q(endi)q(ng)j(on)c(the)h(result)h(of)e(an)150 742
y(bit)h(gathered)f(early)g(in)i(the)e(pro)q(cess)h(the)f(agen)o(t)f(can)i
(decide)h(whether)e(or)g(not)g(it)h(needs)g(to)150 798 y(gather)g(more)h
(bits)g(b)q(efore)h(it)f(executes)h(an)f(o)o(v)o(ert)f(action.)28
b(This)19 b(sc)o(heme)f(will)i(also)e(allo)o(w)150 855 y(the)d(agen)o(t)g(to)
f(execute)i(op)q(en-lo)q(op)h(sequences)f(of)f(actions.)150
993 y Fa(Ac)n(kno)n(wledgmen)n(ts)150 1095 y Fp(This)i(w)o(ork)f(has)h(b)q
(ene\014ted)h(from)e(discussions)i(with)g(man)o(y)e(colleagues,)i(including:)
26 b(Dana)150 1152 y(Ballard,)13 b(Mary)d(Ha)o(y)o(o)q(e,)h(Je\013)g(Sc)o
(hneider,)j(Jonas)d(Karlsson)g(and)h(P)o(olly)g(P)o(o)q(ok.)18
b(I)11 b(am)g(grateful)150 1208 y(to)17 b(Dana)g(Ballard)i(and)f(Meredith)g
(W)l(ard)g(for)f(making)h(helpful)h(commen)o(ts)f(on)f(an)h(earlier)150
1265 y(draft.)937 2600 y(10)p eop
%%Page: 9 7
6 bop 150 121 a Fn(5)69 b(Conclusions)22 b(and)i(F)-6 b(uture)23
b(W)-6 b(ork)150 239 y Fp(The)10 b(Utile)i(Distinction)f(Memory)e(tec)o
(hnique)j(pro)o(vides)f(a)e(refutation)h(to)g(the)g(\\Utile-Distinction)150
295 y(Conjecture")405 291 y([)418 295 y(Chrisman,)17 b(1992)732
291 y(])743 295 y(,)g(whic)o(h)h(stated)e(that)g(is)h(w)o(as)f(imp)q(ossible)
j(to)d(only)h(in)o(tro-)150 352 y(duce)i(memory)f(distinctions)i(that)e
(impact)h(utilit)o(y)l(.)30 b(As)19 b(suc)o(h,)g(UDM)f(acts)g(as)g(a)g
(starting)150 408 y(p)q(oin)o(t)c(from)f(whic)o(h)i(to)e(design)h(impro)o(v)o
(ed)g(learners)g(that)f(use)h(memory)f(to)h(create)f(selectiv)o(e,)150
465 y(task-sp)q(eci\014c)k(represen)o(tations)e(of)f(their)i(en)o(vironmen)o
(t.)221 538 y(UDM)j(is)h(not)g(without)g(limitations)h(and)g(problems.)34
b(The)21 b(computational)f(require-)150 594 y(men)o(ts)h(for)g(the)h(state)f
(splitting)i(test)e(are)h(signi\014can)o(t,)i(b)q(oth)d(in)i(terms)e(of)g
(storage)g(and)150 651 y(calculation.)43 b(An)o(y)22 b(metho)q(d)g(that)g
(uses)g(the)h(Baum-W)l(elc)o(h)g(pro)q(cedure)g(is)g(buying)g(in)o(to)150
707 y Fk(O)q Fp(\()p Fk(AN)280 690 y Fj(2)299 707 y Fk(m)p
Fp(\))18 b(time)i(and)f(storage.)30 b(As)18 b(long)i(as)e Fk(A)h(<)g(m)p
Fp(,)h(UDM)e(do)q(es)h(not)g(increase)h(these)150 763 y(requiremen)o(ts,)i
(ho)o(w)o(ev)o(er,)e(the)g(increased)h(constan)o(ts)f(are)g(not)f
(insigni\014can)o(t.)37 b(Hop)q(efully)150 820 y(UDM's)16 b(minimal,)i
(task-sp)q(eci\014c)f(state)f(splitting)i(will)g(allo)o(w)f(small)g(enough)g
(state)f(spaces)150 876 y(to)f(at)f(least)h(partially)i(mak)o(e)d(up)i(for)f
(this.)221 949 y(UDM)g(splits)i(states)f(in)h(order)e(to)h(increase)h
(memory-based)f(distinctions,)i(but)e(it)h(cur-)150 1006 y(ren)o(tly)h(has)f
(no)g(metho)q(d)g(for)g(splitting)i(states)d(to)h(increase)h(p)q(erceptual)h
(distinctions)g(that)150 1062 y(predict)c(future)f(rew)o(ard.)19
b(F)l(or)13 b(this)h(reason)g(UDM)f(b)q(egins)i(with)f(one)g(state)g(p)q(er)g
(p)q(erception,)150 1119 y(a)h(strategy)e(that)h(will)j(ob)o(viously)e(not)g
(w)o(ork)f(for)g(large)h(p)q(erception)h(spaces.)k(Some)15
b(metho)q(d)150 1175 y(for)i(making)h(p)q(erceptual)h(distinctions)h(will)f
(b)q(e)g(necessary)l(,)f(and)g(it)g(seems)g(plausible)j(that)150
1232 y(Chapman)e(and)h(Kaelbling's)h(G)e(algorithm)960 1228
y([)972 1232 y(Chapman)h(and)f(Kaelbling,)k(1991)1591 1228
y(])1622 1232 y(or)c(ev)o(en)150 1288 y(some)e(tec)o(hnique)h(based)f(on)g
(con\014dence)i(in)o(terv)m(als)f(for)e(the)h(un)o(used)h(p)q(erception)g
(bits)f(in)h(a)150 1345 y(state)c(should)j(w)o(ork)d(in)i(conjunction)g(with)
g(UDM.)221 1418 y(Although)c(UDM)g(has)g(no)g(problems)h(building)h(memory)e
(c)o(hains)h(of)e(arbitrary)h(length,)h(it)150 1474 y(do)q(es)j(require)g
(that)f(some)h(statistically)g(signi\014can)o(t)h(b)q(ene\014t)f(b)q(e)h
(detectable)f(for)f(eac)o(h)h(split)150 1531 y(individuall)q(y)k(in)f
(sequence.)28 b(UDM)17 b(has)h(solv)o(ed)g(mazes)g(with)g(m)o(ulti-step)g
(paths)g(b)q(et)o(w)o(een)150 1587 y(the)g(rew)o(ard-predicting)i(p)q
(erception)f(and)g(the)f(rew)o(ard,)g(ho)o(w)o(ev)o(er,)f(it)i(w)o(ould)g
(not)e(b)q(e)i(able)150 1643 y(to)i(solv)o(e)h(problems)g(in)h(whic)o(h)g(a)e
(conjunction)i(of)e(p)q(erceptions)i(in)g(sequence)g(predicted)150
1700 y(rew)o(ard,)c(but)h(eac)o(h)f(of)g(the)h(p)q(erceptions)g(on)g(its)f(o)
o(wn)g(w)o(ere)g(completely)i(indep)q(enden)o(t)g(of)150 1756
y(future)e(rew)o(ard.)30 b(This)20 b(assumption)f(ab)q(out)g(the)g(relev)m
(ance)i(of)d(pieces)i(of)f(information)g(in)150 1813 y(isolation)e(is)g(also)
f(made)h(b)o(y)659 1809 y([)672 1813 y(Chapman)f(and)h(Kaelbling,)h(1991)1280
1809 y(])1308 1813 y(and)1398 1809 y([)1410 1813 y(Maes)e(and)h(Bro)q(oks,)
150 1869 y(1990)242 1865 y(])254 1869 y(.)221 1942 y(In)g(future)h(w)o(ork)e
(I)i(hop)q(e)g(to)e(relax)i(this)g(restriction)g(\(and)f(concurren)o(tly)h
(impro)o(v)o(e)f(the)150 1999 y(sp)q(eed)12 b(of)e(learning\))h(b)o(y)l(,)h
(in)f(a)g(sense,)g(taking)g(the)f(opp)q(osite)i(approac)o(h)e(to)g(learning)i
(the)f(HMM)150 2055 y(than)h(the)h(approac)o(h)f(used)i(b)o(y)e(UDM.)g
(Instead)h(of)f(starting)g(b)o(y)h(o)o(v)o(er-generalizing)h(and)e(only)150
2112 y(making)g(distinctions)i(after)e(man)o(y)g(trials)g(ha)o(v)o(e)g
(demonstrated)g(statistical)g(di\013erences,)i(the)150 2168
y(agen)o(t)e(could)h(b)q(egin)h(b)o(y)e(memorizing)h(all)g(its)g(exp)q
(eriences)h(and)f(then)g(merging)f(HMM)g(states)150 2225 y(as)17
b(it)h(learns.)26 b(This)18 b(ma)o(y)f(also)g(help)i(address)e(the)h(problem)
g(of)f Fm(extende)n(d)g(c)n(onc)n(e)n(alment)g(of)150 2281
y(crucial)d(fe)n(atur)n(es)462 2277 y Fp([)475 2281 y(Chrisman,)f(1992)785
2277 y(])796 2281 y(.)19 b(The)13 b(underlying)h(tec)o(hniques)g(for)e(suc)o
(h)h(an)f(approac)o(h)150 2338 y(are)18 b(describ)q(ed)j(in)491
2334 y([)504 2338 y(Stolc)o(k)o(e)d(and)h(Omoh)o(undro,)h(1992)1115
2334 y(])1126 2338 y(.)31 b(Y)l(ee)20 b(also)e(uses)h(the)g(idea)h(of)e
(\014rst)150 2394 y(memorizing,)e(then)f(building)j(generalizations)e(in)1049
2390 y([)1062 2394 y(Y)l(ee,)g(1992)1253 2390 y(])1264 2394
y(.)221 2467 y(My)c(primary)h(goal)g(in)h(w)o(orking)e(with)h(memory)g(for)f
(learning)i(agen)o(ts)e(is)i(to)e(use)i(memory)949 2600 y(9)p
eop
%%Page: 8 8
7 bop 150 121 a Fn(4)69 b(Exp)r(erimen)n(tal)21 b(Results)150
239 y Fp(I)14 b(ha)o(v)o(e)g(demonstrated)g(UDM)f(w)o(orking)h(in)h(a)f(grid)
g(w)o(orld)g(where)g(p)q(erception)i(is)f(de\014ned)g(b)o(y)150
295 y(immediately)i(adjacen)o(t)e(barriers.)221 368 y(The)g(Lo)q(cal)h(P)o
(erception)f(Grid)h(W)l(orld)f(\(LPGW\))f(is)h(based)h(on)f(sim)o(ulated)h(w)
o(orlds)e(used)150 425 y(b)o(y)213 421 y([)226 425 y(Sutton,)g(1990)479
421 y(])491 425 y(,)518 421 y([)531 425 y(Whitehead,)i(1992)867
421 y(])878 425 y(,)906 421 y([)919 425 y(Thrun,)f(1992)1165
421 y(])1191 425 y(and)h(others.)j(The)c(agen)o(t)g(mo)o(v)o(es)150
481 y(ab)q(out)21 b(a)g(discrete)h(grid)g(b)o(y)f(executing)i(the)e(actions)h
Fb(North)p Fp(,)g Fb(East)p Fp(,)g Fb(South)p Fp(,)f(and)h
Fb(West)p Fp(.)150 538 y(Whenev)o(er)14 b(the)g(agen)o(t)f(attempts)g(to)g
(mo)o(v)o(e)g(in)o(to)h(a)f(grid)h(o)q(ccupied)i(b)o(y)e(a)f(barrier,)h(the)g
(agen)o(t)150 594 y(remains)g(where)g(it)g(is)g(and)g(receiv)o(es)g(a)g(rew)o
(ard)f(of)g Ff(\000)p Fp(1)p Fk(:)p Fp(0.)19 b(Whenev)o(er)14
b(the)f(agen)o(t)g(mo)o(v)o(es)g(in)o(to)150 651 y(an)o(y)k(of)g(the)h(one)g
(or)f(more)g(\\goal")g(squares,)h(it)g(receiv)o(es)g(a)f(rew)o(ard)g(of)h(1)p
Fk(:)p Fp(0.)26 b(F)l(or)17 b(all)h(other)150 707 y(actions)h(the)f(agen)o(t)
g(receiv)o(es)i(a)e(rew)o(ard)g(of)g Ff(\000)p Fp(0)p Fk(:)p
Fp(1.)30 b(After)18 b(reac)o(hing)h(the)g(goal)f(square)h(the)150
763 y(agen)o(t)14 b(is)i(randomly)g(transp)q(orted)e(to)h(another)g(lo)q
(cation)h(in)g(the)f(maze.)221 836 y(The)f(di\013erence)h(b)q(et)o(w)o(een)f
(the)g(LPGW)f(and)h(the)g(other)g(grid)g(w)o(orlds)f(is)i(that)e(instead)h
(of)150 893 y(de\014ning)h(p)q(erception)h(as)d(the)h(unique)h(ro)o(w)e(and)h
(column)h(n)o(um)o(b)q(ers)f(of)f(the)h(agen)o(t's)f(p)q(osition)150
949 y(\(a)i(p)q(erception)i(that)e(do)q(es)h(not)f(cause)h(p)q(erceptual)h
(aliasing\),)g(LPGW)e(de\014nes)i(p)q(erception)150 1006 y(to)e(b)q(e)i(a)f
(bit)g(v)o(ector)g(of)f(length)i(four)e(in)i(whic)o(h)g(the)f(bits)h(sp)q
(ecify)g(whether)f(or)g(not)f(there)h(is)150 1062 y(a)h(barrier)h(to)f(the)h
(agen)o(t's)f(immediate)h(north,)g(east,)f(south)h(and)g(w)o(est.)26
b(This)19 b(p)q(erception)150 1119 y(is)e(ric)o(h)h(with)f(p)q(erceptual)h
(aliasing)g(p)q(ossibilities)i(\(and)c(is)h(also)g(a)g(bit)g(more)f
(realistic)i(for)e(a)150 1175 y(na)o(vigating)f(rob)q(ot)g(one)g(migh)o(t)g
(build\).)221 1248 y(In)c(some)g(exp)q(erimen)o(ts)i(I)e(also)h(added)f
(noise)h(to)f(the)g(Grid)h(W)l(orld.)19 b(With)11 b(probabilit)o(y)i(0)p
Fk(:)p Fp(1)150 1305 y(the)k(agen)o(t)g(p)q(erceiv)o(es)h(some)f(other)g(p)q
(erception)i(v)o(ector)d(than)h(its)h(curren)o(t)f(w)o(orld)g(p)q(osition)150
1361 y(w)o(ould)22 b(ha)o(v)o(e)e(sp)q(eci\014ed.)40 b(Also)22
b(with)f(probabilit)o(y)i(0)p Fk(:)p Fp(1)d(the)h(agen)o(t's)g(c)o(hosen)g
(actions)g(are)150 1418 y(randomly)15 b(c)o(hanged)h(to)e(one)i(of)f(the)g
(other)g(four.)221 1491 y(One)h(maze)f(solv)o(ed)h(b)o(y)f(UDM)g(app)q(ears)h
(in)g(Figure)f(4.)21 b(The)15 b(maze)h(consists)f(of)g(t)o(w)o(o)f(sets)150
1547 y(of)k(p)q(erceptually)j(aliased)f(states:)26 b(the)19
b(three)f(states)g(represen)o(ted)h(as)g(p)q(erception)h(5,)f(and)150
1604 y(the)d(t)o(w)o(o)e(states)h(represen)o(ted)h(as)f(p)q(erception)i(10.)k
(The)16 b(agen)o(t)e(m)o(ust)h(learn)i(to)e(go)g(south)g(in)150
1660 y(the)i(state)f(5)h(in)h(the)f(cen)o(ter)g(and)g(to)g(go)f(north)h(in)h
(the)f(t)o(w)o(o)f(state)g(5's)g(on)h(the)g(sides)h(of)f(the)150
1717 y(maze.)j(The)14 b(agen)o(t)f(m)o(ust)h(also)g(learn)h(to)f(p)q(erform)g
(di\013eren)o(t)g(actions)g(in)h(the)g(t)o(w)o(o)e(state)g(10's)150
1773 y(ev)o(en)j(though)f(the)g(utilit)o(y)h(of)f(b)q(oth)g(state)g(10's)f
(is)i(the)f(same.)221 1846 y(Without)h(noise,)h(UDM)f(consisten)o(tly)i
(learned)f(the)g(optimal)g(p)q(olicy)h(for)e(this)i(maze)e(in)150
1902 y(\014v)o(e)j(trials)h(of)f(500)g(steps)g(eac)o(h.)32
b(The)20 b(agen)o(t)f(used)h(a)f(learning)h(rate)f(of)g(0.6,)g(a)g(temp)q
(oral)150 1959 y(discoun)o(t)e(factor)f(of)g(0.7,)g(a)h(random)f(action)h
(probabilit)o(y)h(\(exploration)f(rate\))f(of)g(0.1,)g(and)150
2015 y(a)k(con\014dence)i(on)e(the)h(upp)q(er)g(and)g(lo)o(w)o(er)f(b)q
(ounds)h(of)f(0.95.)35 b(The)20 b(sequence)i(of)e(HMM's)150
2072 y(created)13 b(app)q(ear)h(in)g(Figures)g(5)f(and)h(6.)19
b(Notice)14 b(that)e(p)q(erception)j(5)e(is)h(represen)o(ted)g(b)o(y)f(only)
150 2128 y(t)o(w)o(o)f(states)g(ev)o(en)h(though)g(there)g(are)g(three)g(w)o
(orld)g(states)f(that)g(pro)q(duce)i(p)q(erception)h(5.)j(On)150
2185 y(the)f(sides,)g(where)g(the)g(same)g(action)g(is)g(required,)h(UDM)e(k)
o(eeps)h(the)g(t)o(w)o(o)e(w)o(orld)i(state)f(5's)150 2241
y(aliased)k(to)e(the)h(same)g(in)o(ternal)h(state.)30 b(With)19
b(noise,)h(UDM)f(learned)h(the)f(same)f(optimal)150 2298 y(p)q(olicy)l(,)f
(but)e(the)g(agen)o(t)g(required)h(15)f(trials)g(of)g(500)f(steps)h(eac)o(h.)
949 2600 y(8)p eop
%%Page: 7 9
8 bop 218 1110 a @beginspecial 1743 @llx 184 @lly 2453 @urx
674 @ury 3600 @rwi @setspecial
%%BeginDocument: splitting-ci.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: Diagram
%%CreationDate: Sat Dec 12 19:39:53 1992
%%For: mccallum
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 1743 184 2453 674
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/DIAGRAMline {
    moveto rlineto stroke
} def /DIAGRAMarrow {
    [] 0 setdash newpath moveto dup rotate 0 currentlinewidth sub 1.2 mul 0 rmoveto -9 3 rlineto 2 -3 rlineto -2 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /DIAGRAMpreparelines {
    /DIAGRAMlinetype exch def setlinewidth setrgbcolor 2 setlinejoin DIAGRAMlinetype 0 eq {
        [] 0 setdash
    } if DIAGRAMlinetype 1 eq {
        [ 5 currentlinewidth add dup ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 2 eq {
        [ 0 currentlinewidth add 5 currentlinewidth add ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 3 eq {
        [ 5 currentlinewidth add 4 currentlinewidth add 0 currentlinewidth add 4 currentlinewidth add ] 0 currentlinewidth add setdash
    } if
} def
%%EndSetup
0 0 2453 674 rectclip
1743.999878 184 709.000122 489.148804 rectclip
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1841.749878 583 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1841.749878 583 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
[1 0 0 -1 0 1211] concat
/Helvetica-Bold findfont 18 scalefont [1 0 0 -1 0 0] makefont
1108
exch
defineuserobject
1108 execuserobject setfont
0 nxsetgray
1857.79248 609.042542 moveto (2) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 2025.249878 583 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 2025.249878 583 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1211] concat
1108 execuserobject setfont
0 nxsetgray
2041.29248 609.042542 moveto (4) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1933.999878 454 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1933.999878 454 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 953] concat
1108 execuserobject setfont
0 nxsetgray
1950.04248 480.042542 moveto (6) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1303.148804] concat
1108 execuserobject setfont
0 nxsetgray
1774.483521 654 moveto (Before split:) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1970.417358 496.175201 2034.756348 587.131042 setbbox
2034.756348 587.131042 moveto
1970.417358 496.175201 lineto
end
stroke
grestore
-125.274223 1969.493408 494.868958 DIAGRAMarrow
grestore
1 setgray
1991.124878 526.5 22 29 rectfill
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1082] concat
/Times-Roman findfont 24 scalefont [1 0 0 -1 0 0] makefont
324
exch
defineuserobject
324 execuserobject setfont
0 nxsetgray
1995.124878 548.5 moveto (r) show
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
1107
exch
defineuserobject
1107 execuserobject setfont
0 4 rmoveto
(4) show
0 -4 rmoveto
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1877.337769 496.103271 1942.481323 587.198181 setbbox
1877.337769 587.198181 moveto
1942.481323 496.103271 lineto
end
stroke
grestore
-54.430824 1943.411987 494.801819 DIAGRAMarrow
grestore
1 setgray
1899.374878 526.5 22 29 rectfill
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1082] concat
324 execuserobject setfont
0 nxsetgray
1903.374878 548.5 moveto (r) show
1107 execuserobject setfont
0 4 rmoveto
(2) show
0 -4 rmoveto
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1930.999878 190 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1930.999878 190 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 425] concat
1108 execuserobject setfont
0 nxsetgray
1943.04248 216.042557 moveto (6) show
/Helvetica-Bold findfont 16 scalefont [1 0 0 -1 0 0] makefont
340
exch
defineuserobject
340 execuserobject setfont
(a) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 2174 190 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 2174 190 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
340 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 425] concat
1108 execuserobject setfont
0 nxsetgray
2186.04248 216.042557 moveto (6) show
340 execuserobject setfont
(b) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
340 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 845.148804] concat
1108 execuserobject setfont
0 nxsetgray
1833.483521 425 moveto (After split:) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1933.499878 583 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1933.499878 583 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1211] concat
1108 execuserobject setfont
0 nxsetgray
1949.54248 609.042542 moveto (3) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1956.087036 500.599792 1956.406494 583.000183 setbbox
1956.087036 583.000183 moveto
1956.406494 500.599792 lineto
end
stroke
grestore
-89.777924 1956.41272 498.999817 DIAGRAMarrow
grestore
1 setgray
1945.249878 526.5 22 29 rectfill
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1082] concat
324 execuserobject setfont
0 nxsetgray
1949.249878 548.5 moveto (r) show
1107 execuserobject setfont
0 4 rmoveto
(3) show
0 -4 rmoveto
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1749.999878 583 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1749.999878 583 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1211] concat
1108 execuserobject setfont
0 nxsetgray
1766.04248 609.042542 moveto (1) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1790.923218 490.334839 1936.766479 592.583679 setbbox
1790.923218 592.583679 moveto
1936.766479 490.334839 lineto
end
stroke
grestore
-35.033794 1938.076538 489.416351 DIAGRAMarrow
grestore
1 setgray
1853.499878 526.5 22 29 rectfill
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1082] concat
324 execuserobject setfont
0 nxsetgray
1857.499878 548.5 moveto (r) show
1107 execuserobject setfont
0 4 rmoveto
(1) show
0 -4 rmoveto
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1927.499878 347 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1927.499878 347 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 739] concat
1108 execuserobject setfont
0 nxsetgray
1943.54248 373.042542 moveto (2) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 2118.5 347 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 2118.5 347 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 739] concat
1108 execuserobject setfont
0 nxsetgray
2134.54248 373.042542 moveto (5) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 2023 347 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 2023 347 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 739] concat
1108 execuserobject setfont
0 nxsetgray
2039.042603 373.042542 moveto (3) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1831.999878 347 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1831.999878 347 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 739] concat
1108 execuserobject setfont
0 nxsetgray
1848.04248 373.042542 moveto (1) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 2117 583 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 2117 583 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1211] concat
1108 execuserobject setfont
0 nxsetgray
2133.04248 609.042542 moveto (5) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1976.197754 490.385376 2121.109863 592.536499 setbbox
2121.109863 592.536499 moveto
1976.197754 490.385376 lineto
end
stroke
grestore
-144.819321 1974.890015 489.463531 DIAGRAMarrow
grestore
1 setgray
2037 526.5 22 29 rectfill
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1082] concat
324 execuserobject setfont
0 nxsetgray
2041 548.5 moveto (r) show
1107 execuserobject setfont
0 4 rmoveto
(5) show
0 -4 rmoveto
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 2214 347 translate 45 45 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 2214 347 translate 45 45 gt {
    1 45 45 div scale 45 2 div dup dup 0 360 arc
} {
    45 45 div 1 scale 45 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 739] concat
1108 execuserobject setfont
0 nxsetgray
2230.04248 373.042542 moveto (4) show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1866.500977 232.885529 1940.645386 350.467865 setbbox
1866.500977 350.467865 moveto
1940.645386 232.885529 lineto
end
stroke
grestore
-57.765564 1941.498779 231.532135 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1950.501343 236.594025 1952.962769 347.005585 setbbox
1950.501343 347.005585 moveto
1952.962769 236.594025 lineto
end
stroke
grestore
-88.722916 1952.998413 234.994415 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1965.684326 233.292999 2034.124512 350.087433 setbbox
2034.124512 350.087433 moveto
1965.684326 233.292999 lineto
end
stroke
grestore
-120.369789 1964.875366 231.912552 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2148.499023 235.222046 2188.467773 348.286469 setbbox
2148.499023 348.286469 moveto
2188.467773 235.222046 lineto
end
stroke
grestore
-70.531334 2189.000977 233.713531 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2202.449951 235.853958 2230.945068 347.696533 setbbox
2230.945068 347.696533 moveto
2202.449951 235.853958 lineto
end
stroke
grestore
-104.293556 2202.054932 234.303482 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1971.977539 227.972015 2123.749023 355.055176 setbbox
2123.749023 355.055176 moveto
1971.977539 227.972015 lineto
end
stroke
grestore
-140.059464 1970.750854 226.944824 DIAGRAMarrow
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
1108 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1293.194946] concat
/Helvetica findfont 16 scalefont [1 0 0 -1 0 0] makefont
42
exch
defineuserobject
42 execuserobject setfont
0 nxsetgray
2260.483887 640 moveto (Confidence intervals on) show
2260.483887 659 moveto (future discounted reward) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
42 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1222.194946] concat
324 execuserobject setfont
0 nxsetgray
2222 616 moveto (r) show
1107 execuserobject setfont
0 4 rmoveto
(1) show
0 -4 rmoveto
grestore
gsave
0 0 0 7 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2274 609 2337 609 setbbox
2274 609 moveto
2337 609 lineto
end
stroke
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 2211 593 242 36 rectstroke
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1222] concat
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2247 593 2248 625 setbbox
2248 625 moveto
2247 593 lineto
end
stroke
grestore
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
[1 0 0 -1 0 1150.194946] concat
324 execuserobject setfont
0 nxsetgray
2222 580 moveto (r) show
1107 execuserobject setfont
0 4 rmoveto
(2) show
0 -4 rmoveto
grestore
gsave
0 0 0 7 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2274 573 2346 573 setbbox
2274 573 moveto
2346 573 lineto
end
stroke
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 2211 557 242 36 rectstroke
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1150] concat
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2247 557 2247 593 setbbox
2247 593 moveto
2247 557 lineto
end
stroke
grestore
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
[1 0 0 -1 0 1078.194946] concat
324 execuserobject setfont
0 nxsetgray
2222 544 moveto (r) show
1107 execuserobject setfont
0 4 rmoveto
(3) show
0 -4 rmoveto
grestore
gsave
0 0 0 7 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2274 537 2337 537 setbbox
2274 537 moveto
2337 537 lineto
end
stroke
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 2211 521 242 36 rectstroke
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1078] concat
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2247 521 2247 557 setbbox
2247 557 moveto
2247 521 lineto
end
stroke
grestore
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
[1 0 0 -1 0 1006.194946] concat
324 execuserobject setfont
0 nxsetgray
2222 508 moveto (r) show
1107 execuserobject setfont
0 4 rmoveto
(4) show
0 -4 rmoveto
grestore
gsave
0 0 0 7 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2382 501 2409 501 setbbox
2382 501 moveto
2409 501 lineto
end
stroke
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 2211 485 242 36 rectstroke
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1006] concat
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2247 485 2247 521 setbbox
2247 521 moveto
2247 485 lineto
end
stroke
grestore
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
[1 0 0 -1 0 934.194946] concat
324 execuserobject setfont
0 nxsetgray
2222 472 moveto (r) show
1107 execuserobject setfont
0 4 rmoveto
(5) show
0 -4 rmoveto
grestore
gsave
0 0 0 7 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2257 466 2440 466 setbbox
2257 466 moveto
2440 466 lineto
end
stroke
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 2211 449 242 36 rectstroke
gsave
1107 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 934] concat
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
2247 449 2247 485 setbbox
2247 485 moveto
2247 449 lineto
end
stroke
grestore
grestore
grestore
gsave
0 0 2453 674 rectclip
[1 0 0 -1 0 674] concat
grestore
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Helvetica-Bold
%%+ Helvetica
%%EndDocument
 @endspecial 150 1208 a Fp(Figure)16 b(3:)22 b(Determining)17
b(when)g(and)f(ho)o(w)g(a)g(state)f(should)i(b)q(e)g(split)g(b)o(y)g(using)f
(con\014dence)150 1265 y(in)o(terv)m(als)d(on)g(future)f(discoun)o(ted)h(rew)
o(ard.)18 b(Consider)13 b(all)h(incoming)f(transitions)g(to)e(state)h(6,)150
1321 y(and)i(compare)g(the)g(set)g(of)g(con\014dence)h(in)o(terv)m(als)g
(corresp)q(onding)g(to)f(eac)o(h)g(action)g(executed)150 1378
y(from)f(state)g(6.)19 b(If)14 b(an)o(y)g(of)f(the)h(in)o(terv)m(als)g(do)g
(not)g(o)o(v)o(erlap,)f(then)h(the)g(agen)o(t)f(has)h(determined)150
1434 y(that)i(b)o(y)g(treating)g(state)f(6)h(di\013eren)o(tly)h(dep)q(ending)
i(on)d(whic)o(h)h(state)f(it)g(came)h(from)e(it)i(can)150 1490
y(get)k(a)g(statistically)i(signi\014can)o(t)f(increase)h(in)f(its)g(abilit)o
(y)h(to)e(predict)h(rew)o(ard.)38 b(The)22 b(set)150 1547 y(of)e(in)o(terv)m
(als)i(is)e(divided)j(in)o(to)e(clusters)g(of)f(o)o(v)o(erlapping)h(in)o
(terv)m(als,)h(and)f(eac)o(h)f(cluster)h(is)150 1603 y(assigned)16
b(to)f(a)g(di\013eren)o(t)h(cop)o(y)f(of)g(state)g(6.)21 b(The)15
b(con\014dence)i(in)o(terv)m(al)g(table)f(in)g(the)g(upp)q(er)150
1660 y(righ)o(t)f(only)h(sho)o(ws)e(the)i(in)o(terv)m(als)g(for)e(one)i
(action.)221 1797 y(The)10 b(agen)o(t)g(divides)i(the)f(set)f(of)g(incoming)i
(transitions)e(in)o(to)h(non-disjunct)g(subsets,)h(suc)o(h)150
1854 y(that)f(all)h(transitions)f(in)h(a)f(subset)h(o)o(v)o(erlap)f(with)g
(eac)o(h)g(other)g(and)h(eac)o(h)f(subset)g(is)h(as)f(large)g(as)150
1910 y(p)q(ossible.)21 b(T)l(o)12 b(p)q(erform)h(this)g(clustering)h
(optimally)g(is)f(actually)h(an)f(NP-complete)g(problem)150
1967 y(\(Minim)o(um)19 b(Co)o(v)o(er,)525 1963 y([)537 1967
y(Garey)f(and)h(Johnson,)g(1979)1054 1963 y(])1066 1967 y(\),)f(but)h(in)g
(practice,)h(greedy)e(solutions)150 2023 y(are)f(completely)i(adequate.)28
b(After)17 b(the)h(clustering,)h(the)f(state)f(is)h(duplicated)i(\(including)
150 2080 y(incoming)h(and)g(outgoing)e(transitions\))h(enough)h(times)f(so)g
(that)f(there)i(is)f(one)g(cop)o(y)g(p)q(er)150 2136 y(cluster.)f(Then,)13
b(an)o(y)f(incoming)h(transitions)f(that)f(are)h(not)g(elemen)o(ts)g(of)g(a)f
(duplicate)j(state's)150 2193 y(assigned)i(cluster)g(are)f(remo)o(v)o(ed.)221
2266 y(States)f(ma)o(y)g(also)g(b)q(e)i(joined)f(if)h(the)e(union)i(of)e
(their)i(incoming)g(transitions)f(all)g(o)o(v)o(erlap)150 2322
y(with)h(eac)o(h)f(other,)f(and)i(if)f(one)h(set)f(of)f(incoming)j
(transitions)e(is)h(a)f(subset)g(of)g(the)g(other.)949 2600
y(7)p eop
%%Page: 6 10
9 bop 150 121 a Fp(pro)q(cedure)11 b(for)f(up)q(dating)i(the)e(mo)q(del)h
(parameters.)18 b(The)10 b(pro)q(cedure)i(impro)o(v)o(es)e(the)g(mo)q(del's)
150 177 y(abilit)o(y)22 b(to)d(use)i(p)q(erception)h(to)e(distinguish)i(the)f
(agen)o(t's)e(curren)o(t)h(state,)h(but)f(since)i(the)150 234
y(test)f(used)i(for)e(splitting)j(states)d(is)h(separate)g(from)f(Baum-W)l
(elc)o(h,)j(the)e(agen)o(t)g(will)h(not)150 290 y(create)e(new)g(memory)g
(capacit)o(y)g(in)i(order)e(to)f(predict)i(p)q(erception.)40
b(In)22 b(the)f(pro)q(cess)g(of)150 346 y(the)d(Baum-W)l(elc)o(h)i(pro)q
(cedure)f(the)f(agen)o(t)f(calculates)j(impro)o(v)o(ed)e(estimates)g(of)g
(the)g(state)150 403 y(o)q(ccupation)11 b(probabilities)i(o)o(v)o(er)c(time,)
j Fk(\031)863 410 y Fg(i)877 403 y Fp(\()p Fk(t)p Fp(\),)e(and)h(estimates)f
(of)g(the)g(transition)h(o)q(ccupation)150 459 y(probabilities)20
b(o)o(v)o(er)d(time,)i Fk(\030)655 443 y Fg(A)653 471 y(ij)683
459 y Fp(\()p Fk(t)p Fp(\).)28 b(\(See)877 455 y([)890 459
y(Rabiner,)20 b(1989)1171 455 y(])1200 459 y(for)d(details.\))29
b(Then)19 b(the)f(agen)o(t)150 516 y(calculates)e(return)f(v)m(alues)i(o)o(v)
o(er)d(time)i(using)g(the)f(rew)o(ard)f(history)l(,)h Fb(r)p
Fp([)p Fk(t)p Fp(]:)557 603 y Fb(return)o Fp([)p Fk(m)p Fp(])d(=)h(0)557
659 y(for)h Fk(t)f Fp(=)g Fk(m)i Fp(to)g(1)675 716 y Fb(return)o
Fp([)p Fk(t)10 b Ff(\000)h Fp(1])h(=)h Fb(r)o Fp([)p Fk(t)p
Fp(])d(+)h Fk(\015)h Ff(\001)d Fb(return)p Fp([)p Fk(t)p Fp(])1712
660 y(\(7\))150 801 y(where)17 b Fk(\015)i Fp(is)e(the)g(temp)q(oral)g
(discoun)o(t)h(factor.)23 b(Because)18 b(an)o(y)e(state)g(could)i(b)q(e)g
(aliased)g(and)150 857 y(could)g(ha)o(v)o(e)f(action)g(v)m(alues)i(resulting)
f(from)e(a)h(meaningless)i(com)o(bination)e(rew)o(ards)g(from)150
914 y(di\013eren)o(t)12 b(w)o(orld)f(states,)g(the)g(action)g(v)m(alues)i
(\(and)e(state)g(utilities)i(de\014ned)g(as)e(the)g(maxim)o(um)150
970 y(o)o(v)o(er)h(the)i(action)f(v)m(alues\))h(cannot)f(b)q(e)h(trusted,)f
(and)g(only)h(rew)o(ard)f(directly)h(from)f(the)g(w)o(orld)150
1027 y(is)j(used)f(to)g(calculate)h(return.)221 1096 y(No)o(w)k(the)h(agen)o
(t)f(has)h(all)h(the)f(information)h(necessary)f(to)f(assign)h(return)g(v)m
(alues)i(to)150 1153 y(sp)q(eci\014c)18 b(transitions.)24 b(The)17
b(agen)o(t)f(considers)h(the)g(v)m(alue)g(of)f Fb(return)p
Fp([)p Fk(t)p Fp(])g(at)g(eac)o(h)g(time)h(step)150 1209 y(and)i(includes)j
(this)e(v)m(alue)g(in)g(the)f(statistics)h(for)e(eac)o(h)h(transition)h(in)g
(prop)q(ortion)f(to)g(the)150 1266 y(transition)c(o)q(ccupation)i(probabilit)
o(y)f(at)f(that)f(time)i(step:)391 1350 y(for)f Fk(t)e Fp(=)g(0)i(to)f
Fk(m)c Ff(\000)h Fp(1)509 1407 y(for)k(all)h(transitions,)f
Fb(trans)o Fp(,)g(that)g(use)g(action)h Fb(A)p Fp([t])628 1463
y Fb(lr)23 b(=)h Fk(\013)10 b Ff(\001)g Fk(\030)829 1473 y
Fb(trans)950 1463 y Fp([)p Fk(t)p Fp(])628 1520 y Fb(trans.count)890
1532 y(A)p Fj([)p Fg(t)p Fj(+1])1017 1520 y Fb(+=)24 b(lr)628
1580 y(trans.sum)842 1592 y(A)p Fj([)p Fg(t)p Fj(+1])970 1580
y Fb(+=)f(lr)10 b Ff(\001)g Fb(return)o Fp([)p Fk(t)p Fp(])628
1640 y Fb(trans.sumsquares)1009 1652 y(A)p Fj([)p Fg(t)p Fj(+1])1137
1640 y Fb(+=)23 b(lr)10 b Ff(\001)g Fp(\()p Fb(return)o Fp([)p
Fk(t)p Fp(]\))1510 1623 y Fj(2)1712 1497 y Fp(\(8\))150 1728
y(where)16 b Fk(\013)h Fp(is)g(the)f(agen)o(t's)f(learning)i(rate,)f
Fb(lr)g Fp(is)h(the)f(learning)h(rate)f(for)g(a)f(particular)i(tran-)150
1784 y(sition)f(at)f(a)f(particular)i(time,)g(and)f Fk(\030)802
1794 y Fb(trans)923 1784 y Fp(\()p Fk(t)p Fp(\))g(is)h(the)f(transition)h(o)q
(ccupation)g(probabilit)o(y)150 1841 y Fk(\030)172 1824 y Fg(A)170
1853 y(ij)200 1841 y Fp(\()p Fk(t)p Fp(\))k(at)g(time)g Fk(t)g
Fp(of)g(the)g(particular)g(transition,)i Fb(trans)o Fp(,)f(b)q(elonging)g(to)
f(source)g(state)f Fk(i)p Fp(,)150 1897 y(action)d Fk(A)f Fp(and)h
(destination)g(state)f Fk(j)s Fp(.)20 b(The)c Fb(trans)o Fp(-dot)f(quan)o
(tities)h(in)h(the)e(last)h(three)f(lines)150 1954 y(refer)h(to)f(the)h
(three)g(statistics)g(necessary)g(for)f(computing)h(the)g(upp)q(er)h(and)f
(lo)o(w)o(er)f(b)q(ounds;)150 2010 y Fb(trans.count)d Fp(is)j(the)f(coun)o
(t,)g Fk(n)p Fp(,)g Fb(trans.sum)e Fp(is)j(the)f(sum,)1197
1978 y Fd(P)1248 2010 y Fk(x)p Fp(,)g(and)g Fb(trans.sumsquares)150
2067 y Fp(is)i(the)f(sum)g(of)g(squares,)595 2034 y Fd(P)647
2067 y Fp(\()p Fk(x)691 2050 y Fj(2)710 2067 y Fp(\).)20 b(The)15
b Fb(A)g Fp(subscripts)h(indicate)h(that)d(they)h(are)g(indexed)i(b)o(y)150
2123 y(the)e(di\013eren)o(t)h(actions)f(executed)h(in)g(the)f(destination)i
(state)d(of)h(the)g(transition.)221 2193 y(Using)21 b(the)f(coun)o(t,)h(sum,)
h(and)e(sum)h(of)f(squares)g(the)g(agen)o(t)g(can)h(obtain)f(upp)q(er)i(and)
150 2249 y(lo)o(w)o(er)d(b)q(ounds)i(of)e(the)h(return)g(v)m(alue)g
(con\014dence)i(in)o(terv)m(als)e(for)f(eac)o(h)h(transition)g(b)o(y)g(us-)
150 2306 y(ing)e(equation)f(5.)25 b(The)18 b(agen)o(t)e(determines)i(if)g
(the)f(returns)g(on)g(t)o(w)o(o)e(incoming)k(transitions)150
2362 y(are)c(statistically)g(signi\014can)o(t)h(b)o(y)f(measuring)g(whether)g
(or)g(not)f(their)i(con\014dence)g(in)o(terv)m(als)150 2419
y(o)o(v)o(erlap.)21 b(When)15 b(an)o(y)h(t)o(w)o(o)e(of)h(the)g(con\014dence)
i(in)o(terv)m(als)g(with)f(the)f(same)h(outgoing)f(action)150
2475 y(fail)h(to)f(o)o(v)o(erlap)g(the)g(state)f(is)i(split.)949
2600 y(6)p eop
%%Page: 5 11
10 bop 283 765 a @beginspecial 1161 @llx 78 @lly 1691 @urx
345 @ury 3287 @rwi @setspecial
%%BeginDocument: splitting-state.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: Diagram
%%CreationDate: Fri Dec 11 10:59:47 1992
%%For: mccallum
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 1161 78 1691 345
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/DIAGRAMline {
    moveto rlineto stroke
} def /DIAGRAMarrow {
    [] 0 setdash newpath moveto dup rotate 0 currentlinewidth sub 1.2 mul 0 rmoveto -9 3 rlineto 2 -3 rlineto -2 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /DIAGRAMpreparelines {
    /DIAGRAMlinetype exch def setlinewidth setrgbcolor 2 setlinejoin DIAGRAMlinetype 0 eq {
        [] 0 setdash
    } if DIAGRAMlinetype 1 eq {
        [ 5 currentlinewidth add dup ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 2 eq {
        [ 0 currentlinewidth add 5 currentlinewidth add ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 3 eq {
        [ 5 currentlinewidth add 4 currentlinewidth add 0 currentlinewidth add 4 currentlinewidth add ] 0 currentlinewidth add setdash
    } if
} def
%%EndSetup
0 0 1691 345 rectclip
1161.483765 78 529.516235 267 rectclip
gsave
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1376.549438 107.502716 1405.779053 187.45047 setbbox
1405.779053 187.45047 moveto
1376.549438 107.502716 lineto
end
stroke
grestore
-110.082886 1376 106 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1405.779053 93.599998 1405.996338 187.45047 setbbox
1405.779053 187.45047 moveto
1405.996338 93.599998 lineto
end
stroke
grestore
-89.867371 1406 92 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1423.5448 92.295235 1496.060669 192.284714 setbbox
1423.5448 192.284714 moveto
1496.060669 92.295235 lineto
end
stroke
grestore
-54.049072 1497 91 DIAGRAMarrow
grestore
0 0 0 2 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1390 187 translate 40 40 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1390 187 translate 40 40 gt {
    1 40 40 div scale 40 2 div dup dup 0 360 arc
} {
    40 40 div 1 scale 40 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 414] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1311 289 translate 40 40 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1311 289 translate 40 40 gt {
    1 40 40 div scale 40 2 div dup dup 0 360 arc
} {
    40 40 div 1 scale 40 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
[1 0 0 -1 0 618] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1391 299 translate 40 40 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1391 299 translate 40 40 gt {
    1 40 40 div scale 40 2 div dup dup 0 360 arc
} {
    40 40 div 1 scale 40 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
[1 0 0 -1 0 638] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1471 289 translate 40 40 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1471 289 translate 40 40 gt {
    1 40 40 div scale 40 2 div dup dup 0 360 arc
} {
    40 40 div 1 scale 40 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
[1 0 0 -1 0 618] concat
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1344.226318 224.077026 1396.773682 291.923004 setbbox
1344.226318 291.923004 moveto
1396.773682 224.077026 lineto
end
stroke
grestore
1 setgray currentlinewidth 2 div setlinewidth 1346.036133 289.586334 currentlinewidth 3 add 0 360 arc fill 0 0 0 setrgbcolor 1346.036133 289.586334 currentlinewidth 3 add 0 360 arc stroke currentlinewidth 2 mul setlinewidth
-52.241867 1397.753418 222.812057 DIAGRAMarrow
grestore
1 setgray
1365 251.5 11 13 rectfill
gsave
[1 0 0 -1 0 516] concat
/Helvetica findfont 10 scalefont [1 0 0 -1 0 0] makefont
1665
exch
defineuserobject
1665 execuserobject setfont
0 nxsetgray
1370 261.5 moveto () show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1410.192871 228.599136 1410.807129 297.400848 setbbox
1410.807129 297.400848 moveto
1410.192871 228.599136 lineto
end
stroke
grestore
1 setgray currentlinewidth 2 div setlinewidth 1410.780762 294.445435 currentlinewidth 3 add 0 360 arc fill 0 0 0 setrgbcolor 1410.780762 294.445435 currentlinewidth 3 add 0 360 arc stroke currentlinewidth 2 mul setlinewidth
-90.511559 1410.178589 226.999207 DIAGRAMarrow
grestore
1 setgray
1405 256.5 11 13 rectfill
gsave
1665 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 526] concat
1665 execuserobject setfont
0 nxsetgray
1410 266.5 moveto () show
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1423.432617 223.915192 1477.567383 292.084778 setbbox
1477.567383 292.084778 moveto
1423.432617 223.915192 lineto
end
stroke
grestore
1 setgray currentlinewidth 2 div setlinewidth 1475.72937 289.770264 currentlinewidth 3 add 0 360 arc fill 0 0 0 setrgbcolor 1475.72937 289.770264 currentlinewidth 3 add 0 360 arc stroke currentlinewidth 2 mul setlinewidth
-128.453705 1422.437622 222.662216 DIAGRAMarrow
grestore
1 setgray
1445 251.5 11 13 rectfill
gsave
1665 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 516] concat
1665 execuserobject setfont
0 nxsetgray
1450 261.5 moveto () show
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1439 253 30 10 rectstroke
gsave
1665 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 516] concat
gsave
1442.5 254.5 23 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1449 253 30 10 rectstroke
gsave
[1 0 0 -1 0 516] concat
gsave
1452.5 254.5 23 7 rectclip
grestore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1459 253 1459 263 setbbox
1459 253 moveto
1459 263 lineto
end
stroke
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1387 259 30 10 rectstroke
gsave
[1 0 0 -1 0 528] concat
gsave
1390.5 260.5 23 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1397 259 30 10 rectstroke
gsave
[1 0 0 -1 0 528] concat
gsave
1400.5 260.5 23 7 rectclip
grestore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1407 259 1407 269 setbbox
1407 259 moveto
1407 269 lineto
end
stroke
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1339 253 30 10 rectstroke
gsave
[1 0 0 -1 0 516] concat
gsave
1342.5 254.5 23 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1349 253 30 10 rectstroke
gsave
[1 0 0 -1 0 516] concat
gsave
1352.5 254.5 23 7 rectclip
grestore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1359 253 1359 263 setbbox
1359 253 moveto
1359 263 lineto
end
stroke
grestore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1341.987305 120.259102 1396.672119 190.002136 setbbox
1396.672119 190.002136 moveto
1341.987305 120.259102 lineto
end
stroke
grestore
1 setgray currentlinewidth 2 div setlinewidth 1394.848511 187.676285 currentlinewidth 3 add 0 360 arc fill 0 0 0 setrgbcolor 1394.848511 187.676285 currentlinewidth 3 add 0 360 arc stroke currentlinewidth 2 mul setlinewidth
-128.09967 1341 119 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1391.337646 120.563965 1405.441406 185.886505 setbbox
1405.441406 185.886505 moveto
1391.337646 120.563965 lineto
end
stroke
grestore
1 setgray currentlinewidth 2 div setlinewidth 1404.817627 182.997528 currentlinewidth 3 add 0 360 arc fill 0 0 0 setrgbcolor 1404.817627 182.997528 currentlinewidth 3 add 0 360 arc stroke currentlinewidth 2 mul setlinewidth
-102.183655 1391 119 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1417.176758 120.509102 1440.468384 186.627151 setbbox
1417.176758 186.627151 moveto
1440.468384 120.509102 lineto
end
stroke
grestore
1 setgray currentlinewidth 2 div setlinewidth 1418.158813 183.839508 currentlinewidth 3 add 0 360 arc fill 0 0 0 setrgbcolor 1418.158813 183.839508 currentlinewidth 3 add 0 360 arc stroke currentlinewidth 2 mul setlinewidth
-70.594032 1441 119 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1424.628418 120.177223 1489.916382 191.107483 setbbox
1424.628418 191.107483 moveto
1489.916382 120.177223 lineto
end
stroke
grestore
1 setgray currentlinewidth 2 div setlinewidth 1426.630005 188.932892 currentlinewidth 3 add 0 360 arc fill 0 0 0 setrgbcolor 1426.630005 188.932892 currentlinewidth 3 add 0 360 arc stroke currentlinewidth 2 mul setlinewidth
-47.371841 1491 119 DIAGRAMarrow
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
[1 0 0 -1 0 270.28717] concat
8 execuserobject setfont
0 nxsetgray
1547.483765 129 moveto (Four outgoing) show
1547.483765 144 moveto (actions) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 447.28717] concat
8 execuserobject setfont
0 nxsetgray
1180 217 moveto (State in consideration) show
1234 232 moveto (for splitting.) show
grestore
gsave
0 0 0 1 2 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1299 208.869675 1390.087524 217.422302 setbbox
1299 217.422302 moveto
1390.087524 208.869675 lineto
end
stroke
grestore
[] 0 setdash
grestore
gsave
0 0 0 1 2 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1423.5448 152.613617 1544.483765 192.284714 setbbox
1544.483765 152.613617 moveto
1423.5448 192.284714 lineto
end
stroke
grestore
[] 0 setdash
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 429.28717] concat
8 execuserobject setfont
0 nxsetgray
1539.483765 191 moveto (Confidence intervals of) show
1539.483765 206 moveto (future discounted reward) show
1539.483765 221 moveto (for each of the four) show
1539.483765 236 moveto (possible actions.) show
grestore
gsave
0 0 0 1 2 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1479 236.656631 1536.483765 253.583145 setbbox
1536.483765 236.656631 moveto
1479 253.583145 lineto
end
stroke
grestore
[] 0 setdash
grestore
grestore
gsave
0 0 1691 345 rectclip
[1 0 0 -1 0 345] concat
grestore
%%Trailer
%%DocumentFonts: Helvetica
%%EndDocument
 @endspecial 150 863 a Fp(Figure)17 b(2:)23 b(A)17 b(state)f(b)q(eing)i
(considered)h(for)d(splitting.)26 b(Asso)q(ciated)18 b(with)f(incoming)h
(tran-)150 919 y(sitions)g(UDM)e(k)o(eeps)h(con\014dence)h(in)o(terv)m(als)g
(of)e(future)h(discoun)o(t)h(rew)o(ard)e(for)g(eac)o(h)h(action)150
976 y(executed)f(from)f(the)g(state)f(in)i(question.)150 1108
y(where)i(\026)-26 b Fk(x)13 b Fp(=)g Fk(x=n)i Fp(is)h(the)f(sample)h(mean,)f
(and)733 1240 y Fk(s)e Fp(=)815 1164 y Fd(s)p 857 1164 330
2 v 862 1209 a Fk(n)897 1177 y Fd(P)948 1209 y Fk(x)974 1196
y Fj(2)1004 1209 y Ff(\000)d Fp(\()1067 1177 y Fd(P)1118 1209
y Fk(x)p Fp(\))1162 1196 y Fj(2)p 862 1229 320 2 v 938 1271
a Fk(n)p Fp(\()p Fk(n)g Ff(\000)g Fp(1\))1712 1240 y(\(6\))150
1377 y(is)17 b(the)g(sample)g(standard)f(deviation,)i(and)e
Fk(t)939 1353 y Fj(\()p Fg(n)p Fj(\))939 1393 y Fg(\013=)p
Fj(2)1016 1377 y Fp(is)h(the)g(Studen)o(t's)f Fk(t)h Fp(function)h(with)f
Fk(n)11 b Ff(\000)g Fp(1)150 1439 y(degrees)18 b(of)g(freedom.)28
b(The)18 b(parameter)f Fk(\013)p Fp(,)h(\(di\013eren)o(t)g(from)f(the)h
(learning)h(rate)f(whic)o(h)g(is)150 1496 y(also)h(written)f
Fk(\013)p Fp(\),)h(determines)h(the)f(con\014dence)h(with)f(whic)o(h)h(v)m
(alues)f(will)i(fall)e(inside)i(the)150 1552 y(in)o(terv)m(al.)221
1623 y(These)i(return)g(statistics)h(k)o(ept)f(with)g(transitions)h(are)f
(nev)o(er)g(used)h(to)f(c)o(hange)g(the)150 1679 y(agen)o(t's)17
b(action)i(v)m(alues,)h Fk(q)r Fp([)p Fk(i;)8 b(A)p Fp(];)18
b(they)h(are)f(only)h(used)g(to)f(determine)i(when)f(and)g(ho)o(w)f(to)150
1736 y(split)e(a)f(state.)221 1866 y(The)j(agen)o(t)f(b)q(egins)i(with)f(a)g
(fully)h(connected)g(Hidden)h(Mark)o(o)o(v)c(Mo)q(del)j(con)o(taining)f(a)150
1922 y(state)h(for)f(eac)o(h)i(p)q(erception.)34 b(The)20 b(observ)m(ation)f
(probabilities,)k Fk(b)1342 1929 y Fg(i)1355 1922 y Fp(\()p
Fk(v)1395 1929 y Fg(j)1413 1922 y Fp(\),)d(are)f(preset)h(suc)o(h)150
1979 y(that)d(eac)o(h)h(state)e(is)j(strongly)e(biased)h(to)o(w)o(ard)e(a)i
(di\013eren)o(t)g(p)q(erception.)1434 1962 y Fj(3)1482 1979
y Fp(The)g(transition)150 2035 y(probabilities,)h Fk(a)449
2019 y Fg(A)449 2047 y(ij)479 2035 y Fp(,)d(are)g(all)h(made)g(equal.)24
b(The)16 b(agen)o(t)g(then)h(executes)g(a)f(series)h(of)f Fk(m)g
Fp(step)150 2092 y(trials.)24 b(During)17 b(eac)o(h)g(trial)g(it)g(up)q
(dates)g(the)g Fk(q)r Fp([)p Fk(i;)8 b(A)p Fp(])14 b(v)m(alues)k(according)f
(the)g(the)g(equations)150 2148 y(ab)q(o)o(v)o(e,)e(and)g(also)g(k)o(eeps)h
(a)f(record)g(of)g(the)g(actions,)g(p)q(erceptions,)i(and)e(rew)o(ards)g(in)h
(history)150 2205 y(arra)o(ys)e Fb(A)p Fp([)p Fk(t)p Fp(],)g
Fb(P)p Fp([)p Fk(t)p Fp(])h(and)g Fb(r)p Fp([)p Fk(t)p Fp(].)221
2276 y(A)o(t)20 b(the)i(end)g(of)e(eac)o(h)i Fk(m)p Fp(-length)g(trial)f(the)
h(agen)o(t)e(runs)i(the)f(tests)g(for)f(determining)150 2332
y(what)d(states,)f(if)i(an)o(y)l(,)g(should)g(b)q(e)g(split.)28
b(This)18 b(b)q(egins)g(b)o(y)g(p)q(erforming)f(the)h(Baum-W)l(elc)o(h)p
150 2377 648 2 v 202 2413 a Fi(3)219 2429 y Fo(Curren)o(tly)12
b(UDM)f(has)g(the)g(abilit)o(y)i(to)e(disco)o(v)o(er)h(b)q(ene\014cial)i
(memory)d(distinctions,)j(but)d(not)g(p)q(erceptual)150 2475
y(distinctions,)16 b(th)o(us)d(the)g(mo)q(del)i(is)e(initiali)q(zed)j(to)d
(distingui)q(sh)j(b)q(et)o(w)o(een)d(all)h(p)q(erceptions.)949
2600 y Fp(5)p eop
%%Page: 4 12
11 bop 567 177 a Fk(\031)593 184 y Fg(i)607 177 y Fp(\()p Fk(t)10
b Fp(+)g(1\))i(=)h Fk(k)e Ff(\001)f Fk(b)875 184 y Fg(j)893
177 y Fp(\()p Fk(v)r Fp(\()p Fk(t)f Fp(+)i(1\)\))1091 137 y
Fd(X)1111 228 y Fg(j)1157 177 y Fk(a)1181 153 y Fg(A)p Fj(\()p
Fg(t)p Fj(\))1181 190 y Fg(j)r(i)1257 177 y Fk(\031)1283 184
y Fg(j)1302 177 y Fp(\()p Fk(t)p Fp(\))358 b(\(1\))150 296
y(where)15 b Fk(k)i Fp(is)e(whatev)o(er)g(constan)o(t)f(is)i(needed)h(to)d
(mak)o(e)1117 264 y Fd(P)1161 308 y Fg(i)1182 296 y Fk(\031)1208
303 y Fg(i)1222 296 y Fp(\()p Fk(t)c Fp(+)h(1\))h(=)h(1.)221
366 y(While)f(c)o(ho)q(osing)g(actions)g(and)g(altering)g(action)f(v)m(alues)
i(with)f(the)g(rew)o(ard)e(from)h(actions,)150 422 y(UDM)k(uses)g
Fk(Q)p Fp(-learning)i(sup)q(erimp)q(osed)g(on)e(Hidden)i(Mark)o(o)o(v)d(mo)q
(dels,)i(just)f(as)g(in)1636 418 y([)1648 422 y(Chris-)150
479 y(man,)h(1992)357 475 y(])369 479 y(.)23 b(W)l(e)17 b(write)f
Fk(q)r Fp([)p Fk(i;)8 b(A)p Fp(])14 b(for)i(the)h(action)f(v)m(alue)i(of)e
(action)g Fk(A)h Fp(in)g(stored)f(in)h(state)f Fk(i)p Fp(.)150
535 y(The)g(agen)o(t)g(obtains)g Fk(Q)p Fp(-v)m(alues)i(represen)o(tativ)o(e)
e(of)f(the)i(agen)o(t's)e(curren)o(t)h(b)q(elief)i(ab)q(out)e(the)150
592 y(w)o(orld)d(state)f(from)g(the)h(action)g(v)m(alues)h(k)o(ept)f(in)h
(the)f(HMM)f(states)g(b)o(y)h(letting)h(all)g(the)f(HMM)150
648 y(states)h(\\v)o(ote")g(in)i(prop)q(ortion)g(to)e(their)i(o)q(ccupation)g
(probabilit)o(y:)685 736 y Fk(Q)p Fp(\()o Fk(~)-22 b(\031)q
Fp(\()p Fk(t)p Fp(\))p Fk(;)8 b(A)p Fp(\))k(=)951 695 y Fd(X)975
787 y Fg(i)1018 736 y Fk(\031)1044 743 y Fg(i)1058 736 y Fp(\()p
Fk(t)p Fp(\))c Fk(q)r Fp([)p Fk(i;)g(A)p Fp(])475 b(\(2\))150
860 y(The)23 b(agen)o(t)g(then)h(c)o(ho)q(oses)f(the)g(action,)i
Fk(A)943 844 y Fc(\003)986 860 y Fp(with)f(the)f(largest)g
Fk(Q)p Fp(-v)m(alue,)j(\()p Fm(i.e.)44 b Fk(A)1689 844 y Fc(\003)1735
860 y Fp(=)150 917 y(argmax)298 928 y Fg(A)326 917 y Fk(Q)p
Fp(\()o Fk(~)-22 b(\031)r(;)8 b(A)p Fp(\))n(.)24 b(The)16 b(state)g(action)h
(v)m(alues)g(are)f(up)q(dated)h(according)g(to)f(the)g(standard)150
973 y Fk(Q)p Fp(-learning)g(rule,)g(again)f(mo)q(di\014ed)i(to)d(use)i(the)f
(state)g(o)q(ccupation)h(probabilities:)489 1061 y Ff(8)p Fk(i)f(q)r
Fp([)p Fk(i;)8 b(A)p Fp(\()p Fk(t)p Fp(\)])39 b(=)j(\(1)10
b Ff(\000)g Fk(\013\031)983 1068 y Fg(i)998 1061 y Fp(\()p
Fk(t)p Fp(\)\))p Fk(q)r Fp([)p Fk(i;)e(A)p Fp(\()p Fk(t)p Fp(\)])f(+)950
1130 y Fk(\013\031)1005 1137 y Fg(i)1020 1130 y Fp(\()p Fk(t)p
Fp(\)\()p Fk(r)1111 1137 y Fg(t)1135 1130 y Fp(+)j Fk(\015)s(U)5
b Fp(\()o Fk(~)-22 b(\031)p Fp(\()p Fk(t)10 b Fp(+)h(1\)\))276
b(\(3\))485 1199 y Fk(U)5 b Fp(\()o Fk(~)-22 b(\031)q Fp(\()p
Fk(t)10 b Fp(+)h(1\)\))40 b(=)i(max)861 1228 y Fg(A)924 1199
y Fk(Q)p Fp(\()o Fk(~)-22 b(\031)r Fp(\()p Fk(t)10 b Fp(+)g(1\))p
Fk(;)e(A)p Fp(\))503 b(\(4\))150 1299 y(where)18 b Fk(\013;)8
b Fp(0)16 b Fk(<)h(\013)g(<)h Fp(1,)f(is)h(the)g(learning)h(rate,)f
Fk(\015)s(;)8 b Fp(0)14 b Fk(<)k(\015)h(<)e Fp(1,)g(is)i(the)e(temp)q(oral)h
(discoun)o(t)150 1356 y(factor,)j(and)g Fk(U)5 b Fp(\()o Fk(~)-22
b(\031)q Fp(\()p Fk(t)14 b Fp(+)g(1\)\))20 b(is)i(the)f(utilit)o(y)h(of)e
(the)h(agen)o(t's)f(curren)o(t)g(b)q(elief)j(ab)q(out)e(whic)o(h)150
1412 y(states)d(it)g(ma)o(y)g(b)q(e)h(in.)31 b(E\013ectiv)o(ely)19
b(the)f(state)g(o)q(ccupation)h(probabilit)o(y)l(,)i Fk(\031)1507
1419 y Fg(i)1521 1412 y Fp(\()p Fk(t)p Fp(\),)d(b)q(ecomes)150
1469 y(part)c(of)g(the)g(learning)i(rate.)j(Th)o(us)14 b(far)g(w)o(e)g(ha)o
(v)o(e)g(not)g(div)o(erged)h(from)1382 1465 y([)1394 1469 y(Rabiner,)h(1989)
1671 1465 y(])1697 1469 y(and)150 1521 y([)163 1525 y(Chrisman,)f(1992)475
1521 y(])486 1525 y(.)20 b(Next)15 b(I)h(describ)q(e)h(the)e(part)g(of)f(the)
i(algorithm)f(sp)q(eci\014c)i(to)d(UDM.)221 1594 y(On)20 b(the)f(incoming)i
(transitions)e(to)g(a)g(state,)g(UDM)g(stores)g(statistics)g(on)g(the)h
(future)150 1651 y(discoun)o(ted)d(rew)o(ard)e(receiv)o(ed)i(after)e(lea)o
(ving)i(the)f(state)f(in)i(question.)22 b(F)l(uture)16 b(discoun)o(ted)150
1707 y(rew)o(ard)e(is)g(also)g(called)i Fm(r)n(eturn)p Fp(.)k(If)14
b(the)h(state)e(is)i(Mark)o(o)o(vian)e(with)h(resp)q(ect)h(to)f(return,)g
(then)150 1764 y(the)d(return)f(v)m(alues)i(on)f(all)g(the)g(incoming)h
(transitions)f(should)g(b)q(e)h(similar.)19 b(Ho)o(w)o(ev)o(er)10
b(if)h(there)150 1820 y(are)21 b(statistically)h(signi\014can)o(t)g
(di\013erences)g(b)q(et)o(w)o(een)g(an)o(y)f(of)f(the)i(incoming)g
(transitions,)150 1877 y(splitting)h(the)e(state)g(and)g(appropriately)h
(dividing)i(the)d(transitions)h(b)q(et)o(w)o(een)f(the)h(split)150
1933 y(states)14 b(will)j(help)g(the)e(agen)o(t)f(predict)j(return.)221
2003 y(Since)12 b(t)o(w)o(o)d(p)q(erceptually)j(aliased)g(states)e(in)h(the)g
(w)o(orld)f(ma)o(y)g(ha)o(v)o(e)g(the)h(same)f(utilit)o(y)l(,)j(but)150
2059 y(require)18 b(di\013eren)o(t)f(actions,)g(UDM)g(actually)h(k)o(eeps)f
(separate)f(statistics)h(for)g(the)g(di\013eren)o(t)150 2116
y(actions)e(executed)h(from)f(the)g(HMM)g(state.)221 2185 y(Statistical)i
(signi\014cance)h(is)f(tested)f(using)h(con\014dence)g(in)o(terv)m(als,)h
(whic)o(h)f(w)o(e)f(calculate)150 2241 y(with)f(the)h(same)f(metho)q(d)g
(describ)q(ed)i(b)o(y)e(Kaelbling)i(in)f(her)g(thesis)1337
2237 y([)1350 2241 y(Kaelbling,)h(1990)1659 2237 y(])1671 2241
y(.)j(F)l(or)150 2298 y(eac)o(h)c(in)o(terv)m(al)g(w)o(e)g(k)o(eep)f(a)h
(running)g(coun)o(t,)g Fk(n)p Fp(,)f(a)g(sum)h(of)f(v)m(alues,)1326
2266 y Fd(P)1377 2298 y Fk(x)p Fp(,)g(and)h(a)f(sum)h(of)f(the)150
2354 y(squares)g(of)g(the)g(v)m(alues,)589 2322 y Fd(P)640
2354 y Fk(x)666 2338 y Fj(2)686 2354 y Fp(.)20 b(The)15 b(upp)q(er)i(and)e
(lo)o(w)o(er)g(b)q(ounds)h(are)f(then)g(calculated)i(b)o(y)828
2449 y(\026)-26 b Fk(x)11 b Ff(\006)f Fk(t)923 2425 y Fj(\()p
Fg(n)p Fc(\000)p Fj(1\))923 2465 y Fg(\013=)p Fj(2)1046 2419
y Fk(s)p 1024 2439 66 2 v 1024 2448 a Ff(p)p 1062 2448 28 2
v 33 x Fk(n)1712 2449 y Fp(\(5\))949 2600 y(4)p eop
%%Page: 3 13
12 bop 150 121 a Fn(2)69 b(Utilit)n(y-based)20 b(Distinctions)g(for)k(Memory)
150 239 y Fp(Ho)o(w)15 b(can)h(the)f(agen)o(t)g(kno)o(w)g(when)i(splitting)g
(a)e(state)g(will)i(help)g(it)f(predict)g(utilit)o(y?)24 b(Often)150
295 y(a)15 b(p)q(erceptually)i(aliased)f(state)e(that)g(e\013ects)h(utilit)o
(y)h(will)h(ha)o(v)o(e)d(wildly)j(\015uctuating)f(rew)o(ard)150
352 y(v)m(alues,)g(ho)o(w)o(ev)o(er,)f(w)o(e)g(cannot)g(base)h(a)f(state)f
(splitting)j(test)e(solely)h(on)g(rew)o(ard)f(v)m(ariance|)150
408 y(some)21 b(c)o(hanges)f(in)i(rew)o(ard)e(are)h(caused)g(b)o(y)g(the)g
(sto)q(c)o(hastic)g(nature)g(of)f(the)h(w)o(orld,)h(and)150
465 y(splitting)17 b(the)e(state)f(will)j(not)e(help)h(the)g(agen)o(t)e(more)
h(consisten)o(tly)h(get)f(high)h(rew)o(ard.)j(The)150 521 y(agen)o(t)13
b(m)o(ust)h(b)q(e)h(able)g(to)e(distinguish)k(b)q(et)o(w)o(een)d(c)o(hanges)g
(in)h(rew)o(ard)f(caused)g(b)o(y)h(a)e(sto)q(c)o(has-)150 577
y(tic)21 b(w)o(orld,)f(and)h(c)o(hanges)f(that)f(could)i(b)q(e)g(predicted)g
(after)f(p)q(erforming)g(a)g(split.)36 b(What)150 634 y(new)17
b(information)f(do)q(es)h(splitting)h(a)e(state)f(giv)o(e)i(the)f(agen)o(t?)
24 b(After)16 b(splitting)h(a)f(state)g(the)150 690 y(agen)o(t)d(has)g(the)h
(abilit)o(y)g(to)f(distinguish)j(b)q(et)o(w)o(een)d(t)o(w)o(o)f(previously)j
(aliased)g(states)d(based)i(on)150 747 y(kno)o(wledge)i(ab)q(out)f(whic)o(h)h
(state)e(it)i(came)f(from.)221 820 y(The)d(k)o(ey)g(idea)h(b)q(ehind)h(Utile)
g(Distinction)f(Memory)f(is)g(as)g(follo)o(ws:)19 b(UDM)11
b(k)o(eeps)i(future)150 876 y(discoun)o(ted)h(rew)o(ard)e(information)h(asso)
q(ciated)g(with)g(the)g(incoming)h(transitions)f(to)g(a)f(state.)150
933 y(If)21 b(the)f(state)f(satis\014es)i(the)f(Mark)o(o)o(v)f(prop)q(ert)o
(y)h(then)g(all)i(the)e(rew)o(ard)g(v)m(alues)h(should)g(b)q(e)150
989 y(similar;)j(ho)o(w)o(ev)o(er,)d(if)g(there)g(are)f(statistically)i
(signi\014can)o(t)f(di\013erences)h(in)f(the)g(rew)o(ards,)150
1046 y(then)14 b(the)g(iden)o(tit)o(y)h(of)f(state)f(the)h(agen)o(t)f(comes)h
(from)g Fl(is)g Fp(signi\014can)o(t)h(to)e(predicting)j(rew)o(ard,)150
1102 y(the)j(state)f(m)o(ust)g(b)q(e)i(non-Mark)o(o)o(vian,)e(and)h
(splitting)h(this)g(state)e(w)o(ould)h(help)h(the)f(agen)o(t)150
1159 y(more)c(consisten)o(tly)h(predict)g(rew)o(ard.)221 1232
y(One)k(split)h(ma)o(y)e(allo)o(w)g(further)h(distinctions)h(b)q(ecause)g(it)
f(will)h(create)f(new)f(separate)150 1288 y(transitions)i(in)o(to)f(other)g
(states.)35 b(In)21 b(that)e(UDM)h(can)h(recursiv)o(ely)g(build)i(a)d(tree)g
(of)g(dis-)150 1345 y(tinctions)h(it)g(is)f(similar)i(to)d(Chapman)h(and)h
(Kaelbling's)h(G)e(algorithm)1472 1341 y([)1485 1345 y(Chapman)g(and)150
1401 y(Kaelbling,)k(1991)466 1397 y(])478 1401 y(,)d(except)h(that)e(it)h
(builds)i(distinctions)f(in)g(memory)e(space)h(instead)g(of)150
1457 y(p)q(erception)c(space.)150 1617 y Fn(3)69 b(Details)21
b(of)i(the)f(Algorithm)150 1735 y Fp(A)c(Hidden)j(Mark)o(o)o(v)16
b(Mo)q(del)k(is)e(comprised)i(of)e(a)g(\014nite)h(set)g(of)f(states,)g
Fk(S)i Fp(=)f Fk(s)1556 1742 y Fj(1)1576 1735 y Fk(;)8 b(s)1618
1742 y Fj(2)1637 1735 y Fk(;)g(:::;)g(s)1739 1742 y Fg(N)150
1792 y Fp(and)21 b(a)g(\014nite)h(n)o(um)o(b)q(er)f(of)f(observ)m(ations)i
(\(p)q(erceptions\),)g Fk(V)32 b Fp(=)22 b Fk(v)1338 1799 y
Fj(1)1358 1792 y Fk(;)8 b(v)1401 1799 y Fj(2)1420 1792 y Fk(;)g(:::;)g(v)1523
1799 y Fg(M)1560 1792 y Fp(.)37 b(W)l(e)21 b(also)150 1848
y(include)k(a)c(\014nite)j(set)e(of)f(actions)i Ff(A)h Fp(=)h
Fk(A)934 1855 y Fj(1)954 1848 y Fk(;)8 b(A)1009 1855 y Fj(2)1028
1848 y Fk(;)g(:::;)g(A)1143 1855 y Fg(K)1174 1848 y Fp(.)1187
1832 y Fj(2)1255 1848 y Fp(F)l(or)22 b(eac)o(h)g(state)f(there)i(is)f(a)150
1905 y(v)o(ector)d(of)f(observ)m(ation)i(probabilities|w)o(e)i(write)d
Fk(b)1094 1912 y Fg(i)1108 1905 y Fp(\()p Fk(v)1148 1912 y
Fg(j)1166 1905 y Fp(\))g(for)f(the)i(probabilit)o(y)g(of)f(seeing)150
1961 y(observ)m(ation)k Fk(j)h Fp(while)g(in)f(state)e Fk(i)p
Fp(.)41 b(F)l(or)21 b(eac)o(h)i(state-action)e(pair)i(there)f(is)h(a)f(v)o
(ector)f(of)150 2018 y(transition)e(probabilities|the)i(notation)d
Fk(a)942 2001 y Fg(A)942 2030 y(ij)990 2018 y Fp(signi\014es)i(the)f
(probabilit)o(y)g(that)f(executing)150 2074 y(action)f Fk(A)g
Fp(from)f(state)g Fk(i)g Fp(will)j(result)e(in)h(state)e Fk(j)s
Fp(.)24 b(The)17 b(agen)o(t's)f(b)q(elief)j(ab)q(out)d(the)h(state)f(of)150
2131 y(the)i(w)o(orld)g(is)g(main)o(tained)h(in)g(a)e(v)o(ector)g(of)h(its)g
(state)f(o)q(ccupation)h(probabilities,)j(written)149 2187
y Fk(~)-22 b(\031)176 2194 y Fg(j)194 2187 y Fp(\()p Fk(t)p
Fp(\))22 b(=)h Ff(h)p Fk(\031)370 2194 y Fj(1)389 2187 y Fp(\()p
Fk(t)p Fp(\))p Fk(;)8 b(\031)488 2194 y Fj(2)507 2187 y Fp(\()p
Fk(t)p Fp(\))p Fk(;)g(:::;)g(\031)666 2194 y Fg(N)696 2187
y Fp(\()p Fk(t)p Fp(\))p Ff(i)p Fp(,)22 b(where)f Fk(\031)964
2194 y Fg(i)978 2187 y Fp(\()p Fk(t)p Fp(\))f(is)i(the)f(agen)o(t's)f(b)q
(elief)j(that)d(the)h(w)o(orld)150 2243 y(state)14 b(is)i(represen)o(ted)g(b)
o(y)f Fk(s)633 2250 y Fg(i)662 2243 y Fp(at)g(time)h Fk(t)p
Fp(.)221 2317 y(T)l(o)d(calculate)h(the)f(state)g(o)q(ccupation)h
(probabilities)i(at)c(time)i Fk(t)6 b Fp(+)g(1,)14 b(the)g(agen)o(t)e(uses)i
(the)150 2373 y(\\forw)o(ard")f(part)i(of)g(the)g(Baum)g(forw)o(ard-bac)o(kw)
o(ard)f(pro)q(cedure)1306 2369 y([)1318 2373 y(Rabiner,)i(1989)1595
2369 y(])1607 2373 y(:)p 150 2421 648 2 v 202 2457 a Fi(2)219
2473 y Fo(The)c(inclusion)j(of)d(actions)h(actually)i(mak)o(es)d(this)h(a)f
Fe(Partial)r(ly)f(Observable)f(Markov)i(De)n(cision)f(Pr)n(o)n(c)n(ess)p
Fo(.)949 2600 y Fp(3)p eop
%%Page: 2 14
13 bop 249 825 a @beginspecial 1195 @llx 445 @lly 1724 @urx
721 @ury 3450 @rwi @setspecial
%%BeginDocument: q-and-hmm.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: Diagram
%%CreationDate: Fri Dec 11 10:40:57 1992
%%For: mccallum
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 1195 445 1724 721
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/DIAGRAMline {
    moveto rlineto stroke
} def /DIAGRAMarrow {
    [] 0 setdash newpath moveto dup rotate 0 currentlinewidth sub 1.2 mul 0 rmoveto -9 3 rlineto 2 -3 rlineto -2 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /DIAGRAMpreparelines {
    /DIAGRAMlinetype exch def setlinewidth setrgbcolor 2 setlinejoin DIAGRAMlinetype 0 eq {
        [] 0 setdash
    } if DIAGRAMlinetype 1 eq {
        [ 5 currentlinewidth add dup ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 2 eq {
        [ 0 currentlinewidth add 5 currentlinewidth add ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 3 eq {
        [ 5 currentlinewidth add 4 currentlinewidth add 0 currentlinewidth add 4 currentlinewidth add ] 0 currentlinewidth add setdash
    } if
} def
%%EndSetup
0 0 1724 721 rectclip
1195 445 528.516235 276.000031 rectclip
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1656 561 translate 27 27 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1656 561 translate 27 27 gt {
    1 27 27 div scale 27 2 div dup dup 0 360 arc
} {
    27 27 div 1 scale 27 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1149] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1661 575 4.25 5 rectfill
0 0 0 setrgbcolor 1661 575 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1155] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1665.25 575 4.25 5 rectfill
0 0 0 setrgbcolor 1665.25 575 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1155] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1669.5 575 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1155] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1673.75 575 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1155] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1576 631 translate 27 27 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1576 631 translate 27 27 gt {
    1 27 27 div scale 27 2 div dup dup 0 360 arc
} {
    27 27 div 1 scale 27 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
[1 0 0 -1 0 1289] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1580 644 4.25 5 rectfill
0 0 0 setrgbcolor 1580 644 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1293] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1584.25 644 4.25 5 rectfill
0 0 0 setrgbcolor 1584.25 644 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1293] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1588.5 644 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1293] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1592.75 644 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1293] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1202 671 60 20 rectfill
0 0 0 setrgbcolor 1202 671 60 20 rectstroke
gsave
[1 0 0 -1 0 1362] concat
gsave
1205.5 672.5 53 17 rectclip
/Helvetica-Bold findfont 14 scalefont [1 0 0 -1 0 0] makefont
1109
exch
defineuserobject
1109 execuserobject setfont
0 nxsetgray
1210.5 686.5 moveto (1 1 0 0) show
grestore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1232 591 1280.400024 671 setbbox
1232 671 moveto
1232 591 lineto
1280.400024 591 lineto
end
stroke
grestore
0 1282 591 DIAGRAMarrow
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 647 80 10 rectfill
0 0 0 setrgbcolor 1282 647 80 10 rectstroke
gsave
1109 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1304] concat
gsave
1285.5 648.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 637 80 10 rectfill
0 0 0 setrgbcolor 1282 637 80 10 rectstroke
gsave
[1 0 0 -1 0 1284] concat
gsave
1285.5 638.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 627 80 10 rectfill
0 0 0 setrgbcolor 1282 627 80 10 rectstroke
gsave
[1 0 0 -1 0 1264] concat
gsave
1285.5 628.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 617 80 10 rectfill
0 0 0 setrgbcolor 1282 617 80 10 rectstroke
gsave
[1 0 0 -1 0 1244] concat
gsave
1285.5 618.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 607 80 10 rectfill
0 0 0 setrgbcolor 1282 607 80 10 rectstroke
gsave
[1 0 0 -1 0 1224] concat
gsave
1285.5 608.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 597 80 10 rectfill
0 0 0 setrgbcolor 1282 597 80 10 rectstroke
gsave
[1 0 0 -1 0 1204] concat
gsave
1285.5 598.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 557 80 10 rectfill
0 0 0 setrgbcolor 1282 557 80 10 rectstroke
gsave
[1 0 0 -1 0 1124] concat
gsave
1285.5 558.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 587 80 10 rectfill
0 0 0 setrgbcolor 1282 587 80 10 rectstroke
gsave
[1 0 0 -1 0 1184] concat
gsave
1285.5 588.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 577 80 10 rectfill
0 0 0 setrgbcolor 1282 577 80 10 rectstroke
gsave
[1 0 0 -1 0 1164] concat
gsave
1285.5 578.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 567 80 10 rectfill
0 0 0 setrgbcolor 1282 567 80 10 rectstroke
gsave
[1 0 0 -1 0 1144] concat
gsave
1285.5 568.5 73 7 rectclip
grestore
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
[1 0 0 -1 0 1331.287109] concat
8 execuserobject setfont
0 nxsetgray
1285 670 moveto (Q0) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1331.287109] concat
8 execuserobject setfont
0 nxsetgray
1305 670 moveto (Q1) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1331.287109] concat
8 execuserobject setfont
0 nxsetgray
1325 670 moveto (Q2) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1331.287109] concat
8 execuserobject setfont
0 nxsetgray
1345 670 moveto (Q3) show
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 547 80 10 rectfill
0 0 0 setrgbcolor 1282 547 80 10 rectstroke
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1104] concat
gsave
1285.5 548.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 537 80 10 rectfill
0 0 0 setrgbcolor 1282 537 80 10 rectstroke
gsave
[1 0 0 -1 0 1084] concat
gsave
1285.5 538.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 527 80 10 rectfill
0 0 0 setrgbcolor 1282 527 80 10 rectstroke
gsave
[1 0 0 -1 0 1064] concat
gsave
1285.5 528.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 517 80 10 rectfill
0 0 0 setrgbcolor 1282 517 80 10 rectstroke
gsave
[1 0 0 -1 0 1044] concat
gsave
1285.5 518.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 507 80 10 rectfill
0 0 0 setrgbcolor 1282 507 80 10 rectstroke
gsave
[1 0 0 -1 0 1024] concat
gsave
1285.5 508.5 73 7 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1282 497 80 10 rectfill
0 0 0 setrgbcolor 1282 497 80 10 rectstroke
gsave
[1 0 0 -1 0 1004] concat
gsave
1285.5 498.5 73 7 rectclip
grestore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1322 497 1323 656 setbbox
1323 656 moveto
1322 497 lineto
end
stroke
grestore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1342 497 1343 656 setbbox
1343 656 moveto
1342 497 lineto
end
stroke
grestore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1302 497 1302 656 setbbox
1302 656 moveto
1302 497 lineto
end
stroke
grestore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1570.385742 657.45874 1611.144043 709.691895 setbbox
1593.284424 657.45874 moveto
1602.207886 674.861633 1611.144043 692.308105 1606 701 curveto
1600.855957 709.691895 1581.614258 709.672852 1576 701 curveto
1570.385742 692.327148 1578.379395 674.957092 1585.990845 659.186584 curveto
end
stroke
grestore
-65.262146 1586.362671 657.630371 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1575.939575 518.662354 1584.453979 561.978516 setbbox
1584.453979 561.978516 moveto
1580.20105 555.230774 1575.939575 548.461975 1576 541 curveto
1576.060425 533.538025 1580.443115 525.337891 1584.261841 518.662354 curveto
end
stroke
grestore
-61.855732 1584.816895 517.161682 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1595.060913 516.801453 1606.067261 560.953918 setbbox
1595.060913 516.801453 moveto
1600.491333 525.093445 1605.932739 533.409607 1606 541 curveto
1606.067261 548.590393 1600.760864 555.500549 1596.171875 560.953918 curveto
end
stroke
grestore
127.552086 1595.464966 562.389282 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1575.939575 587.161682 1584.816895 630.494507 setbbox
1584.816895 587.161682 moveto
1580.443115 595.337891 1576.060425 603.538025 1576 611 curveto
1575.939575 618.461975 1580.20105 625.230774 1583.855957 630.494507 curveto
end
stroke
grestore
57.777634 1584.453979 631.978516 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1597.835571 515.119263 1631.612061 632.932617 setbbox
1597.835571 515.119263 moveto
1609.097656 525.43988 1620.387939 535.796387 1626 551 curveto
1631.612061 566.203613 1631.574097 586.340271 1626 601 curveto
1620.425903 615.659729 1609.28772 624.925598 1599.205933 632.932617 curveto
end
stroke
grestore
140.273148 1598.17749 634.158325 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1539.165771 515.5271 1579.954102 634.954041 setbbox
1579.954102 634.954041 moveto
1566.393188 625.368774 1552.79834 615.749573 1546 601 curveto
1539.20166 586.250427 1539.165771 566.286499 1546 551 curveto
1552.834229 535.713501 1566.572998 525.017761 1579.184326 515.5271 curveto
end
stroke
grestore
-37.875309 1580.277344 514.358643 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1601.548706 586.751709 1660.673462 638.410828 setbbox
1601.548706 638.410828 moveto
1613.75708 634.122803 1626 629.817383 1636 621 curveto
1646 612.182617 1653.817139 598.800293 1660.673462 586.751709 curveto
end
stroke
grestore
-59.724491 1661.608765 585.453491 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1604.571045 587.961914 1668.916138 644.387329 setbbox
1668.486694 587.961914 moveto
1668.702637 599.736572 1668.916138 611.54425 1666 621 curveto
1663.083862 630.45575 1657.015869 637.612671 1646 641 curveto
1634.984131 644.387329 1618.957642 644.027649 1604.571045 643.566406 curveto
end
stroke
grestore
-178.701447 1602.974121 643.665344 DIAGRAMarrow
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1603.126343 511.006287 1662.875 562.737366 setbbox
1662.875 562.737366 moveto
1659.040771 551.248535 1655.188599 539.728027 1645 531 curveto
1634.811401 522.271973 1618.225342 516.284119 1603.126343 511.006287 curveto
end
stroke
grestore
-160.164978 1601.682495 510.316895 DIAGRAMarrow
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1576 561 translate 27 27 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1576 561 translate 27 27 gt {
    1 27 27 div scale 27 2 div dup dup 0 360 arc
} {
    27 27 div 1 scale 27 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
[1 0 0 -1 0 1149] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1581 575 4.25 5 rectfill
0 0 0 setrgbcolor 1581 575 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1155] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1585.25 575 4.25 5 rectfill
0 0 0 setrgbcolor 1585.25 575 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1155] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1589.5 575 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1155] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1593.75 575 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1155] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
gsave 1 1 1 setrgbcolor 1576 491 translate 27 27 scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
gsave 0 0 0 setrgbcolor 1576 491 translate 27 27 gt {
    1 27 27 div scale 27 2 div dup dup 0 360 arc
} {
    27 27 div 1 scale 27 2 div dup dup 0 360 arc
} ifelse stroke grestore
gsave
[1 0 0 -1 0 1009] concat
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1581 504 4.25 5 rectfill
0 0 0 setrgbcolor 1581 504 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1013] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1585.25 504 4.25 5 rectfill
0 0 0 setrgbcolor 1585.25 504 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1013] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1589.5 504 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1013] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 1 0 DIAGRAMpreparelines
0 0 0 setrgbcolor 1593.75 504 4.25 5 rectstroke
gsave
[1 0 0 -1 0 1013] concat
gsave
0 0 0 0 rectclip
grestore
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
[1 0 0 -1 0 927] concat
/Helvetica findfont 18 scalefont [1 0 0 -1 0 0] makefont
1110
exch
defineuserobject
1110 execuserobject setfont
0 nxsetgray
1213 468 moveto (Plain Q-learning) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
1110 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1399] concat
8 execuserobject setfont
0 nxsetgray
1203 703 moveto (Perception) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 929] concat
1110 execuserobject setfont
0 nxsetgray
1517 469 moveto (Q-learning with a HMM) show
grestore
gsave
0.5 0.5 0.5 1 1 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1546 645.689209 1576.05249 648.346924 setbbox
1546 648.346924 moveto
1576.05249 645.689209 lineto
end
stroke
grestore
[] 0 setdash
grestore
gsave
0.5 0.5 0.5 1 1 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1536.065308 580.521606 1657.417358 641 setbbox
1536.065308 641 moveto
1657.417358 580.521606 lineto
end
stroke
grestore
[] 0 setdash
grestore
gsave
0.5 0.5 0.5 1 1 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1525.607788 584.234924 1580.146851 641 setbbox
1525.607788 641 moveto
1580.146851 584.234924 lineto
end
stroke
grestore
[] 0 setdash
grestore
gsave
0.5 0.5 0.5 1 1 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1521.01709 516.566528 1583.446167 641 setbbox
1521.01709 641 moveto
1583.446167 516.566528 lineto
end
stroke
grestore
[] 0 setdash
grestore
0 0 0 1 0 DIAGRAMpreparelines
1 1 1 setrgbcolor 1486 641 60 20 rectfill
0 0 0 setrgbcolor 1486 641 60 20 rectstroke
gsave
1110 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1302] concat
gsave
1489.5 642.5 53 17 rectclip
1109 execuserobject setfont
0 nxsetgray
1494.5 656.5 moveto (1 1 0 0) show
grestore
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
1109 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1341] concat
8 execuserobject setfont
0 nxsetgray
1487 674 moveto (Perception) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1406.287109] concat
8 execuserobject setfont
0 nxsetgray
1299.483765 707 moveto (Actions) show
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1156.287109] concat
8 execuserobject setfont
0 nxsetgray
1392.483765 582 moveto (States) show
grestore
1367.000000 491.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 18 177 rectclip
0.580645 1.282609 scale
3 5 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: rightbrace.eps
%%Creator: Diagram, Jonathan Schwartz and Rob Kedoin
%%CreationDate: Thu Dec 13 15:40:41 1990
%%For: jis
%%DocumentFonts: (atend)
%%Pages: 0 1
%%BoundingBox: -3 -5 28 133
%%EndComments

gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/DIAGRAMline {
    moveto rlineto stroke
} def /DIAGRAMarrow {
    [] 0 setdash newpath moveto dup rotate 0 currentlinewidth sub 1.2 mul 0 rmoveto -9 3 rlineto 2 -3 rlineto -2 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /DIAGRAMpreparelines {
    /DIAGRAMlinetype exch def setlinewidth setrgbcolor 2 setlinejoin DIAGRAMlinetype 0 eq {
        [] 0 setdash
    } if DIAGRAMlinetype 1 eq {
        [ 5 currentlinewidth add dup ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 2 eq {
        [ 0 currentlinewidth add 5 currentlinewidth add ] 0 currentlinewidth add setdash
    } if DIAGRAMlinetype 3 eq {
        [ 5 currentlinewidth add 4 currentlinewidth add 0 currentlinewidth add 4 currentlinewidth add ] 0 currentlinewidth add setdash
    } if
} def
%%EndSetup
gsave
-2.492157 -5 30 138 rectclip
gsave
gsave
0 0 0 0.15 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
3.507843 1 21.507843 64 setbbox
3.507843 1 moveto
7.503843 1.1998 11.508843 1.4086 12.507843 10 curveto
13.506843 18.5914 11.508842 35.610397 12.507843 46 curveto
13.506844 56.389603 17.511843 60.2038 21.507843 64 curveto
end
stroke
grestore
grestore
gsave
0 0 0 0.15 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
3.507843 64 21.507843 127 setbbox
21.507843 64 moveto
17.511843 67.796204 13.506843 71.610397 12.507843 82 curveto
11.508843 92.389603 13.506844 109.4086 12.507843 118 curveto
11.508842 126.5914 7.503843 126.800201 3.507843 127 curveto
end
stroke
grestore
grestore
grestore
gsave
0 0 576 756 rectclip
[1 0 0 -1 0 756] concat
grestore
grestore
%%Trailer

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
gsave
0 0 0 1 0 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1283.564453 677.482666 1361.389771 688.361938 setbbox
1283.564453 677.482666 moveto
1283.577148 679.990784 1283.595703 682.504272 1289.449219 682.922302 curveto
1295.302734 683.340332 1307.020508 681.668274 1312.987183 682.922302 curveto
1318.953857 684.176331 1319.19873 688.361938 1318.872192 688.361938 curveto
1318.545654 688.361938 1317.659668 684.176331 1324.756714 682.922302 curveto
1331.85376 681.668274 1346.96936 683.340332 1354.179565 682.922302 curveto
1361.389771 682.504272 1360.72998 679.990784 1360.064209 677.482666 curveto
end
stroke
grestore
grestore
0 0 0 0 0 DIAGRAMpreparelines
gsave
8 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1006.287231] concat
8 execuserobject setfont
0 nxsetgray
1424.483765 482 moveto (Future) show
1424.483765 497 moveto (discounted) show
1424.483765 512 moveto (reward for) show
1424.483765 527 moveto (each action) show
grestore
gsave
0.5 0.5 0.5 1 2 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1494 504.082397 1585.25 506.444977 setbbox
1494 504.082397 moveto
1585.25 506.444977 lineto
end
stroke
grestore
[] 0 setdash
grestore
gsave
0.5 0.5 0.5 1 2 DIAGRAMpreparelines
gsave
newpath
systemdict
begin
1362 502.337006 1421.483765 502.838135 setbbox
1421.483765 502.838135 moveto
1362 502.337006 lineto
end
stroke
grestore
[] 0 setdash
grestore
grestore
gsave
0 0 1724 721 rectclip
[1 0 0 -1 0 721] concat
grestore
%%Trailer
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica
%%EndDocument
 @endspecial 150 923 a Fp(Figure)11 b(1:)17 b(In)12 b(plain)g
Fk(Q)p Fp(-learning)g(the)f(curren)o(t)g(state)f(is)h(determined)h(en)o
(tirely)g(b)o(y)f(the)g(curren)o(t)150 979 y(p)q(erception.)29
b(Using)19 b(a)e(Hidden)j(Mark)o(o)o(v)c(Mo)q(del,)j(the)f(agen)o(t)f(can)h
(determine)h(its)f(curren)o(t)150 1036 y(state)h(using)i(the)f(curren)o(t)g
(p)q(erception,)j Fl(and)d Fp(the)g(previous)h(action)f(and)g(previous)h
(state.)150 1092 y(Plain)d Fk(Q)p Fp(-learning)h(in)o(ternal)f(states)e
(corresp)q(ond)i(to)f(ro)o(ws)f(of)h(the)g Fk(Q)p Fp(-table.)27
b(The)17 b(in)o(ternal)150 1149 y(states)c(of)g(an)g(agen)o(t)g(using)i
(HMM's)d(corresp)q(ond)i(to)f(states)g(of)g(the)h(HMM.)e(In)j(eac)o(h)e(case)
h(an)150 1205 y(in)o(ternal)f(state)f(holds)h(a)e(collection)k(of)c(future)i
(discoun)o(ted)g(rew)o(ard)f(estimates,)g(one)g(for)g(eac)o(h)150
1262 y(action.)19 b(On)11 b(the)g(righ)o(t)f(hand)h(side)h(of)e(the)h(ab)q(o)
o(v)o(e)g(\014gure)f(the)h(circles)i(are)d(states)g(of)g(the)h(HMM.)150
1318 y(The)16 b(arro)o(ws)e(and)i(dashed)g(lines)i(illustrate)f(the)e(t)o(w)o
(o)g(in\015uences)j(on)d(the)h(agen)o(t's)f(c)o(hoice)h(of)150
1375 y(in)o(ternal)j(state:)26 b(the)19 b(dashed)g(lines)h(indicate)g(the)f
(in\015uence)i(of)d(the)g(curren)o(t)h(p)q(erception,)150 1431
y(the)14 b(arro)o(ws)f(sho)o(w)h(the)g(p)q(ossible)i(transitions)f(b)q(et)o
(w)o(een)f(states.)19 b(The)14 b(ro)o(w)g(of)f(b)q(o)o(xes)i(in)g(eac)o(h)150
1488 y(circle)i(hold)f(the)f(equiv)m(alen)o(t)i(of)e(one)g(ro)o(w)f(of)h(the)
g Fk(Q)p Fp(-table.)150 1625 y(agen)o(t's)f(in)o(ternal)j(state)e(space;)g
(it)h(k)o(eeps)g(action)g(v)m(alues)h(in)f(the)g(states)e(of)h(the)h(HMM,)f
(and)150 1681 y(it)i(retriev)o(es)g(and)g(adjusts)f(the)h(action)f(v)m(alues)
i(according)f(to)f(state)g(o)q(ccupation)i(probabil-)150 1738
y(ities.)31 b(The)19 b(c)o(hief)g(di\013erence)h(lies)g(in)g(the)e(w)o(a)o(y)
g(that)g(the)h(size)g(of)f(the)h(HMM)f(state)g(space)150 1794
y(is)e(increased.)21 b(Instead)15 b(of)g(creating)g(new)g(states)f(based)i
(on)f(predicting)h(p)q(erception,)h(UDM)150 1850 y(creates)f(new)h(states)f
(only)i(when)f(it)g(can)g(sho)o(w)f(statistically)i(signi\014can)o(t)g
(increases)f(in)h(the)150 1907 y(agen)o(t's)c(abilit)o(y)i(to)f(predict)h
Fl(rew)o(ard)p Fp(.)221 1980 y(This)h(di\013erence)i(causes)e(a)g(fundamen)o
(tal)h(shift)f(in)h(the)f(agen)o(t's)f(represen)o(tational)i(ap-)150
2036 y(proac)o(h.)k(Utilit)o(y-based)c(distinctions)f(will)h(build)g(an)e
(agen)o(t)f(in)o(ternal)i(state)e(space)i(only)f(as)150 2093
y(large)i(as)f(needed)i(to)e(p)q(erform)g(the)h(task)f(at)g(hand)1045
2076 y Fj(1)1065 2093 y Fp(,)h(whereas)g(p)q(erception-based)h(distinc-)150
2149 y(tions)d(will)h(build)h(a)d(state)g(space)h(large)g(enough)g(to)f
(represen)o(t)h(all)h(the)f(w)o(orld)f(as)h(the)g(agen)o(t)150
2206 y(p)q(erceiv)o(es)h(it.)k(If)15 b(the)h(agen)o(t's)e(task)h(is)h
(simple,)h(but)e(the)h(w)o(orld)f(is)h(complex)g(and)g(the)g(agen)o(t)150
2262 y(can)d(p)q(erceiv)o(e)i(manifestations)e(of)g(the)g(w)o(orld)g
(complexit)o(y)l(,)i(w)o(e)d(w)o(ould)i(still)h(lik)o(e)f(the)f(agen)o(t's)
150 2319 y(in)o(ternal)h(state)f(space)h(to)f(b)q(e)h(simple.)21
b(The)13 b(di\016cult)o(y)i(of)e(learning)i(should)f(b)q(e)h(prop)q(ortional)
150 2375 y(to)g(the)g(di\016cult)o(y)h(of)f(the)g(task,)f(not)h(the)g
(complexit)o(y)i(of)d(the)i(w)o(orld.)p 150 2423 648 2 v 202
2459 a Fi(1)219 2475 y Fo(In)c(reinforcemen)o(t)i(learning)h(go)q(o)q(d)e
(task)g(p)q(erformance)g(is)g Fh(de\014ned)h Fo(b)o(y)f(the)f(rew)o(ard)h
(the)f(agen)o(t)h(receiv)o(es.)949 2600 y Fp(2)p eop
%%Page: 1 15
14 bop 150 121 a Fn(1)69 b(In)n(tro)r(duction)150 239 y Fp(As)12
b(researc)o(hers)g(explore)h(the)f(problem)h(of)e(learning)i(situated)g(b)q
(eha)o(viors)f(for)g(rob)q(otic)g(tasks,)150 295 y(they)f(face)g(the)g(dual)h
(blessing)h(and)e(curse)h(of)e Fm(p)n(er)n(c)n(eptual)i(aliasing)1288
291 y Fp([)1300 295 y(Whitehead)g(and)f(Ballard,)150 352 y(1990)242
348 y(])254 352 y(.)19 b(P)o(erceptual)14 b(aliasing)h(o)q(ccurs)f(when)g
(there)f(is)h(not)g(a)f(one-to-one)g(mapping)i(b)q(et)o(w)o(een)150
408 y(the)f(agen)o(t's)f(p)q(erceptions)j(of)d(the)h(w)o(orld)g(and)h
(di\013eren)o(t)f(w)o(orld)g(situations.)20 b(It)14 b(is)h(a)e(blessing)150
465 y(b)q(ecause)21 b(it)g(can)f(represen)o(t)h(as)e(equiv)m(alen)o(t)j
(di\013eren)o(t)f(w)o(orld)f(states)g(in)h(whic)o(h)g(the)f(same)150
521 y(action)15 b(is)g(required.)20 b(It)15 b(is)g(a)f(curse)h(b)q(ecause)g
(it)g(can)f(also)h(confound)g(di\013eren)o(t)f(w)o(orld)h(states)150
577 y(in)k(whic)o(h)h Fl(di\013eren)o(t)e Fp(actions)h(are)f(required.)31
b(Ideally)21 b(one)d(w)o(ould)h(lik)o(e)h(to)e(k)o(eep)g(the)h(go)q(o)q(d)150
634 y(generalization)e(and)e(get)g(rid)h(of)e(the)i(bad.)221
707 y(The)c(task)f(of)h(making)g(desirable)i(distinctions)g(b)q(et)o(w)o(een)
e(p)q(erceptually)i(aliased)f(states)e(is)150 763 y(made)j(more)f(di\016cult)
i(when)g(the)e(agen)o(t)h(also)f(su\013ers)h(from)f Fm(inc)n(omplete)h(p)n
(er)n(c)n(eption)1636 759 y Fp([)1648 763 y(Chris-)150 820
y(man)19 b Fm(et)i(al.)p Fp(,)f(1991)486 816 y(])498 820 y(.)33
b(Incomplete)21 b(p)q(erception)g(results)f(from)f(a)g(p)q(erceptual)j
(system)d(and)150 876 y(w)o(orld)i(that)f(allo)o(w)h(situations)g(in)g(whic)o
(h)h(no)e(con\014guration)h(of)f(the)h(p)q(erceptual)h(system)150
933 y(can)15 b(distinguish)j(t)o(w)o(o)c(signi\014can)o(tly)j(di\013eren)o(t)
e(w)o(orld)g(states.)20 b(F)l(or)14 b(example,)i(to)f(a)g(rat)f(in)i(a)150
989 y(maze)e(constructed)h(of)f(iden)o(tical-lo)q(oking)j(barriers)e(v)o(ery)
f(di\013eren)o(t)h(lo)q(cations)g(ma)o(y)f(app)q(ear)150 1046
y(the)k(same)f(no)h(matter)f(ho)o(w)g(carefully)i(the)f(rat)f(examines)i(its)
f(curren)o(t)g(surroundings.)28 b(In)150 1102 y(suc)o(h)21
b(situations)f(the)h(agen)o(t)e(requires)i(some)f(additional)i(information)f
(to)e(disam)o(biguate)150 1159 y(the)g(aliased)h(states.)31
b(One)20 b(w)o(a)o(y)e(to)g(do)h(this)h(is)g(to)e(in)o(tro)q(duce)i(some)f
(kind)h(of)f(memory)f(of)150 1215 y(past)e(p)q(erceptions)h(and)g(actions.)23
b(The)17 b(rat)e(could)j(distinguish)g(its)e(curren)o(t)h(lo)q(cation)g(from)
150 1272 y(iden)o(tical-lo)q(oking)h(maze)d(lo)q(cations)h(b)o(y)f(remem)o(b)
q(ering)h(ho)o(w)f(it)h(got)e(there.)221 1345 y(Chrisman)20
b(has)f(presen)o(ted)h(a)g(tec)o(hnique,)h(called)h(the)d(P)o(erceptual)i
(Distinctions)g(Ap-)150 1401 y(proac)o(h,)16 b(that)f(can)h(solv)o(e)g(the)g
(incomplete)i(p)q(erception)f(problem)1319 1397 y([)1332 1401
y(Chrisman,)f(1992)1645 1397 y(])1656 1401 y(.)23 b(The)150
1457 y(agen)o(t)d(builds)i(a)f(Hidden)h(Mark)o(o)o(v)d(Mo)q(del)939
1453 y([)952 1457 y(Rabiner,)k(1989)1236 1453 y(])1268 1457
y(that)d(acts)g(as)g(a)g(predictiv)o(e)150 1514 y(mo)q(del)e(of)e(the)h(en)o
(vironmen)o(t.)24 b(The)17 b(states)f(of)g(the)h(HMM)f(are)g(the)h(in)o
(ternal)h(states)e(of)g(the)150 1570 y(agen)o(t,)j(and)g(estimated)g(future)g
(discoun)o(ted)h(rew)o(ard)e(v)m(alues)i(for)f(eac)o(h)g(action,)h(or)e
Fm(action)150 1627 y(values)p Fp(,)13 b(are)h(stored)f(in)h(eac)o(h)g(of)f
(the)h(HMM)f(states.)19 b(The)13 b(agen)o(t)g(uses)h(W)l(atkins')g
Fk(Q)p Fp(-learning)150 1679 y([)163 1683 y(W)l(atkins,)20
b(1989)451 1679 y(])462 1683 y(,)g(except)g(that)f(the)g(agen)o(t)g(retriev)o
(es)h(and)f(adjusts)g Fk(Q)p Fp(-v)m(alues)i(using)f(the)150
1740 y(action)13 b(v)m(alues)h(from)e(all)i(the)f(HMM)f(states)g(prop)q
(ortionally)i(according)f(to)g(the)g(HMM)f(state)150 1796 y(o)q(ccupation)23
b(probabilities.)44 b(The)23 b(tec)o(hnique)h(increases)f(the)g(n)o(um)o(b)q
(er)g(of)f(HMM)g(states)150 1853 y(based)16 b(on)f(statistical)g
(sign\014cances)i(in)f(the)f(agen)o(t's)f(abilit)o(y)i(to)f(predict)h(p)q
(erception.)221 1926 y(Because)f(the)f(new)h(state)f(o)q(ccupation)h
(probabilities)i(of)d(a)h(HMM)f(dep)q(end)i(not)e(only)h(on)150
1982 y(the)g(curren)o(t)g(p)q(erception,)h(but)f(also)g(on)g(the)g(previous)g
(state)g(probabilities)i(and)e(the)g(previ-)150 2039 y(ous)g(action,)f(a)h
(HMM)f(state)g(can)h(represen)o(t)f(memory)l(.)20 b(F)l(or)14
b(instance,)h(it)g(is)h(p)q(ossible)g(to)e(set)150 2095 y(the)j(transition)f
(probabilities)j(in)e(a)f(HMM)g(suc)o(h)h(that)f(it)g(is)h(extremely)g(unlik)
o(ely)i(that)d(the)150 2152 y(agen)o(t)e(has)g(arriv)o(ed)h(in)h(a)e
(particular)h(state)f(unless)i(the)f(agen)o(t)f(has)g(come)h(from)f(some)g
(other)150 2208 y(particular)i(previous)h(state.)k(By)15 b(building)k(c)o
(hains)d(of)f(suc)o(h)h(states)f(with)h(exclusiv)o(e)i(transi-)150
2264 y(tion)e(probabilities,)h(the)f(o)q(ccupation)h(of)e(a)g(state)g(can)g
(represen)o(t)h(an)g(arbitrary)f(amoun)o(t)f(of)150 2321 y(memory)h(ab)q(out)
g(past)f(p)q(erceptions)j(and)e(actions.)221 2394 y(The)g(Utile)h
(Distinction)g(Memory)f(\(UDM\))e(metho)q(d)j(presen)o(ted)f(in)h(this)f(rep)
q(ort)g(shares)150 2450 y(the)f(HMM)f(foundation)i(with)f(Chrisman's)g(tec)o
(hnique.)20 b(It)14 b(uses)h(a)e(HMM)h(to)f(represen)o(t)h(the)949
2600 y(1)p eop
%%Page: 1 16
15 bop 701 438 a Ft(First)22 b(Results)f(with)186 529 y(Utile)h(Distinction)f
(Memory)g(for)h(Reinforcemen)n(t)f(Learning)725 659 y Fs(R.)16
b(Andrew)g(McCallum)640 717 y Fr(mccallum@)o(cs.)o(ro)o(che)o(ste)o(r.e)o(du)
660 826 y Fs(The)g(Univ)o(ersit)o(y)e(of)i(Ro)q(c)o(hester)632
884 y(Computer)f(Science)g(Departmen)o(t)649 941 y(Ro)q(c)o(hester,)h(New)f
(Y)l(ork)49 b(14627)733 1050 y(T)l(ec)o(hnical)15 b(Rep)q(ort)h(446)798
1159 y(Decem)o(b)q(er)e(1992)860 1492 y Fq(Abstract)221 1615
y Fp(This)20 b(rep)q(ort)f(presen)o(ts)g(a)g(metho)q(d)h(b)o(y)f(whic)o(h)i
(a)e(reinforcemen)o(t)g(learning)i(agen)o(t)e(can)150 1671
y(solv)o(e)c(the)g(incomplete)i(p)q(erception)g(problem)e(using)h(memory)l(.)
k(The)15 b(agen)o(t)f(uses)i(a)e(Hidden)150 1728 y(Mark)o(o)o(v)i(Mo)q(del)j
(\(HMM\))e(to)g(represen)o(t)h(its)g(in)o(ternal)h(state)e(space)i(and)f
(creates)g(memory)150 1784 y(capacit)o(y)c(b)o(y)g(splitting)h(states)e(of)g
(the)h(HMM.)e(The)i(k)o(ey)g(idea)h(is)f(a)f(test)h(to)f(determine)h(when)150
1840 y(and)j(ho)o(w)f(a)g(state)g(should)i(b)q(e)f(split:)24
b(the)17 b(agen)o(t)f(only)h(splits)h(a)e(state)g(when)h(the)g(split)g(will)
150 1897 y(help)j(the)f(agen)o(t)f(predict)h(utilit)o(y)l(.)32
b(Th)o(us)19 b(the)f(agen)o(t)g(can)h(build)i(an)d(in)o(ternal)i(state)e
(space)150 1953 y(prop)q(ortionate)11 b(to)g(the)g(task)g(at)g(hand,)h(not)f
(as)g(large)g(as)g(w)o(ould)h(b)q(e)g(required)h(to)e(represen)o(t)g(all)150
2010 y(of)k(its)g(p)q(erceiv)m(able)j(w)o(orld.)i(I)15 b(call)i(the)e(tec)o
(hnique)i(UDM,)d(for)g(Utile)j(Distinction)f(Memory)l(.)p 150
2377 648 2 v 219 2429 a Fo(This)d(material)g(is)f(based)h(on)f(w)o(ork)g
(supp)q(orted)h(b)o(y)f(NSF)g(researc)o(h)g(gran)o(t)h(no.)j(IRI-8903582,)d
(NIH/PHS)150 2475 y(researc)o(h)h(gran)o(t)f(no.)k(1)c(R24)h(RR)o(O6853,)f
(and)h(a)f(gran)o(t)g(from)g(the)g(Human)h(Science)g(F)m(ron)o(tiers)g
(Program.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
